!function(n){var e={};function t(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return n[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)t.d(r,o,function(e){return n[e]}.bind(null,o));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="dist/",t(t.s=11)}([function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(4);e.colors=["white","black"],e.invRanks=[8,7,6,5,4,3,2,1],e.allKeys=(o=Array.prototype).concat.apply(o,r.files.map(function(n){return r.ranks.map(function(e){return n+e})})),e.pos2key=function(n){return e.allKeys[8*n[0]+n[1]-9]},e.key2pos=function(n){return[n.charCodeAt(0)-96,n.charCodeAt(1)-48]},e.memo=function(n){var e,t=function(){return void 0===e&&(e=n()),e};return t.clear=function(){e=void 0},t},e.timer=function(){var n;return{start:function(){n=Date.now()},cancel:function(){n=void 0},stop:function(){if(!n)return 0;var e=Date.now()-n;return n=void 0,e}}},e.opposite=function(n){return"white"===n?"black":"white"},e.containsX=function(n,e){return void 0!==n&&-1!==n.indexOf(e)},e.distanceSq=function(n,e){return Math.pow(n[0]-e[0],2)+Math.pow(n[1]-e[1],2)},e.samePiece=function(n,e){return n.role===e.role&&n.color===e.color},e.computeIsTrident=function(){return window.navigator.userAgent.indexOf("Trident/")>-1};var o,i=function(n,e,t,r){return[(e?n[0]-1:8-n[0])*t,(e?8-n[1]:n[1]-1)*r]};e.posToTranslateAbs=function(n){var e=n.width/8,t=n.height/8;return function(n,r){return i(n,r,e,t)}},e.posToTranslateRel=function(n,e){return i(n,e,12.5,12.5)},e.translateAbs=function(n,e){n.style.transform="translate("+e[0]+"px,"+e[1]+"px)"},e.translateRel=function(n,e){n.style.left=e[0]+"%",n.style.top=e[1]+"%"},e.setVisible=function(n,e){n.style.visibility=e?"visible":"hidden"},e.eventPosition=function(n){return n.clientX||0===n.clientX?[n.clientX,n.clientY]:n.touches&&n.targetTouches[0]?[n.targetTouches[0].clientX,n.targetTouches[0].clientY]:void 0},e.isRightButton=function(n){return 2===n.buttons||2===n.button},e.createEl=function(n,e){var t=document.createElement(n);return e&&(t.className=e),t},e.raf=(window.requestAnimationFrame||window.setTimeout).bind(window)},function(n,e){n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var t=function(n,e){var t=n[1]||"",r=n[3];if(!r)return t;if(e&&"function"==typeof btoa){var o=function(n){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"}(r),i=r.sources.map(function(n){return"/*# sourceURL="+r.sourceRoot+n+" */"});return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}(e,n);return e[2]?"@media "+e[2]+"{"+t+"}":t}).join("")},e.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<n.length;o++){var a=n[o];"number"==typeof a[0]&&r[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),e.push(a))}},e}},function(n,e,t){var r={},o=function(n){var e;return function(){return void 0===e&&(e=n.apply(this,arguments)),e}}(function(){return window&&document&&document.all&&!window.atob}),i=function(n){var e={};return function(n,t){if("function"==typeof n)return n();if(void 0===e[n]){var r=function(n,e){return e?e.querySelector(n):document.querySelector(n)}.call(this,n,t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}}(),a=null,l=0,s=[],c=t(14);function d(n,e){for(var t=0;t<n.length;t++){var o=n[t],i=r[o.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](o.parts[a]);for(;a<o.parts.length;a++)i.parts.push(m(o.parts[a],e))}else{var l=[];for(a=0;a<o.parts.length;a++)l.push(m(o.parts[a],e));r[o.id]={id:o.id,refs:1,parts:l}}}}function f(n,e){for(var t=[],r={},o=0;o<n.length;o++){var i=n[o],a=e.base?i[0]+e.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):t.push(r[a]={id:a,parts:[l]})}return t}function u(n,e){var t=i(n.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=s[s.length-1];if("top"===n.insertAt)r?r.nextSibling?t.insertBefore(e,r.nextSibling):t.appendChild(e):t.insertBefore(e,t.firstChild),s.push(e);else if("bottom"===n.insertAt)t.appendChild(e);else{if("object"!=typeof n.insertAt||!n.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=i(n.insertAt.before,t);t.insertBefore(e,o)}}function p(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var e=s.indexOf(n);e>=0&&s.splice(e,1)}function b(n){var e=document.createElement("style");if(void 0===n.attrs.type&&(n.attrs.type="text/css"),void 0===n.attrs.nonce){var r=function(){0;return t.nc}();r&&(n.attrs.nonce=r)}return g(e,n.attrs),u(n,e),e}function g(n,e){Object.keys(e).forEach(function(t){n.setAttribute(t,e[t])})}function m(n,e){var t,r,o,i;if(e.transform&&n.css){if(!(i=e.transform(n.css)))return function(){};n.css=i}if(e.singleton){var s=l++;t=a||(a=b(e)),r=v.bind(null,t,s,!1),o=v.bind(null,t,s,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(n){var e=document.createElement("link");return void 0===n.attrs.type&&(n.attrs.type="text/css"),n.attrs.rel="stylesheet",g(e,n.attrs),u(n,e),e}(e),r=function(n,e,t){var r=t.css,o=t.sourceMap,i=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||i)&&(r=c(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=n.href;n.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,t,e),o=function(){p(t),t.href&&URL.revokeObjectURL(t.href)}):(t=b(e),r=function(n,e){var t=e.css,r=e.media;r&&n.setAttribute("media",r);if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}.bind(null,t),o=function(){p(t)});return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else o()}}n.exports=function(n,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=o()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var t=f(n,e);return d(t,e),function(n){for(var o=[],i=0;i<t.length;i++){var a=t[i];(l=r[a.id]).refs--,o.push(l)}n&&d(f(n,e),e);for(i=0;i<o.length;i++){var l;if(0===(l=o[i]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete r[l.id]}}}};var h=function(){var n=[];return function(e,t){return n[e]=t,n.filter(Boolean).join("\n")}}();function v(n,e,t,r){var o=t?"":r.css;if(n.styleSheet)n.styleSheet.cssText=h(e,o);else{var i=document.createTextNode(o),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(i,a[e]):n.appendChild(i)}}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(0),o=t(37);function i(n){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];n&&setTimeout(function(){return n.apply(void 0,e)},1)}function a(n){n.premovable.current&&(n.premovable.current=void 0,i(n.premovable.events.unset))}function l(n){var e=n.predroppable;e.current&&(e.current=void 0,i(e.events.unset))}function s(n,e,t){if(e===t||!n.pieces[e])return!1;var o=n.pieces[t]&&n.pieces[t].color!==n.pieces[e].color?n.pieces[t]:void 0;return t==n.selected&&p(n),i(n.events.move,e,t,o),function(n,e,t){if(!n.autoCastle)return!1;var o=n.pieces[e];if("king"!==o.role)return!1;var i=r.key2pos(e);if(5!==i[0])return!1;if(1!==i[1]&&8!==i[1])return!1;var a,l,s,c=r.key2pos(t);if(7===c[0]||8===c[0])a=r.pos2key([8,i[1]]),l=r.pos2key([6,i[1]]),s=r.pos2key([7,i[1]]);else{if(3!==c[0]&&1!==c[0])return!1;a=r.pos2key([1,i[1]]),l=r.pos2key([4,i[1]]),s=r.pos2key([3,i[1]])}var d=n.pieces[a];return"rook"===d.role&&(delete n.pieces[e],delete n.pieces[a],n.pieces[s]=o,n.pieces[l]=d,!0)}(n,e,t)||(n.pieces[t]=n.pieces[e],delete n.pieces[e]),n.lastMove=[e,t],n.check=void 0,i(n.events.change),o||!0}function c(n,e,t,o){if(n.pieces[t]){if(!o)return!1;delete n.pieces[t]}return i(n.events.dropNewPiece,e,t),n.pieces[t]=e,n.lastMove=[t],n.check=void 0,i(n.events.change),n.movable.dests=void 0,n.turnColor=r.opposite(n.turnColor),!0}function d(n,e,t){var o=s(n,e,t);return o&&(n.movable.dests=void 0,n.turnColor=r.opposite(n.turnColor),n.animation.current=void 0),o}function f(n,e,t){if(g(n,e,t)){var a=d(n,e,t);if(a){var s=n.hold.stop();p(n);var c={premove:!1,ctrlKey:n.stats.ctrlKey,holdTime:s};return!0!==a&&(c.captured=a),i(n.movable.events.after,e,t,c),!0}}else!function(n,e,t){return e!==t&&m(n,e)&&r.containsX(o.default(n.pieces,e,n.premovable.castle),t)}(n,e,t)?b(n,t)||m(n,t)?(u(n,t),n.hold.start()):p(n):(!function(n,e,t,r){l(n),n.premovable.current=[e,t],i(n.premovable.events.set,e,t,r)}(n,e,t,{ctrlKey:n.stats.ctrlKey}),p(n));return!1}function u(n,e){n.selected=e,m(n,e)?n.premovable.dests=o.default(n.pieces,e,n.premovable.castle):n.premovable.dests=void 0}function p(n){n.selected=void 0,n.premovable.dests=void 0,n.hold.cancel()}function b(n,e){var t=n.pieces[e];return t&&("both"===n.movable.color||n.movable.color===t.color&&n.turnColor===t.color)}function g(n,e,t){return e!==t&&b(n,e)&&(n.movable.free||!!n.movable.dests&&r.containsX(n.movable.dests[e],t))}function m(n,e){var t=n.pieces[e];return t&&n.premovable.enabled&&n.movable.color===t.color&&n.turnColor!==t.color}function h(n){a(n),l(n),p(n)}e.callUserFunction=i,e.toggleOrientation=function(n){n.orientation=r.opposite(n.orientation),n.animation.current=n.draggable.current=n.selected=void 0},e.reset=function(n){n.lastMove=void 0,p(n),a(n),l(n)},e.setPieces=function(n,e){for(var t in e){var r=e[t];r?n.pieces[t]=r:delete n.pieces[t]}},e.setCheck=function(n,e){if(!0===e&&(e=n.turnColor),e)for(var t in n.pieces)"king"===n.pieces[t].role&&n.pieces[t].color===e&&(n.check=t);else n.check=void 0},e.unsetPremove=a,e.unsetPredrop=l,e.baseMove=s,e.baseNewPiece=c,e.userMove=f,e.dropNewPiece=function(n,e,t,r){if(function(n,e,t){var r=n.pieces[e];return r&&t&&(e===t||!n.pieces[t])&&("both"===n.movable.color||n.movable.color===r.color&&n.turnColor===r.color)}(n,e,t)||r){var o=n.pieces[e];delete n.pieces[e],c(n,o,t,r),i(n.movable.events.afterNewPiece,o.role,t,{predrop:!1})}else!function(n,e,t){var r=n.pieces[e];return r&&t&&(!n.pieces[t]||n.pieces[t].color!==n.movable.color)&&n.predroppable.enabled&&("pawn"!==r.role||"1"!==t[1]&&"8"!==t[1])&&n.movable.color===r.color&&n.turnColor!==r.color}(n,e,t)?(a(n),l(n)):function(n,e,t){a(n),n.predroppable.current={role:e,key:t},i(n.predroppable.events.set,e,t)}(n,n.pieces[e].role,t);delete n.pieces[e],p(n)},e.selectSquare=function(n,e,t){n.selected?n.selected!==e||n.draggable.enabled?(n.selectable.enabled||t)&&n.selected!==e?f(n,n.selected,e)&&(n.stats.dragged=!1):n.hold.start():(p(n),n.hold.cancel()):(b(n,e)||m(n,e))&&(u(n,e),n.hold.start()),i(n.events.select,e)},e.setSelected=u,e.unselect=p,e.canMove=g,e.isDraggable=function(n,e){var t=n.pieces[e];return t&&n.draggable.enabled&&("both"===n.movable.color||n.movable.color===t.color&&(n.turnColor===t.color||n.premovable.enabled))},e.playPremove=function(n){var e=n.premovable.current;if(!e)return!1;var t=e[0],r=e[1],o=!1;if(g(n,t,r)){var l=d(n,t,r);if(l){var s={premove:!0};!0!==l&&(s.captured=l),i(n.movable.events.after,t,r,s),o=!0}}return a(n),o},e.playPredrop=function(n,e){var t=n.predroppable.current,r=!1;return!!t&&(e(t)&&c(n,{role:t.role,color:n.movable.color},t.key)&&(i(n.movable.events.afterNewPiece,t.role,t.key,{predrop:!0}),r=!0),l(n),r)},e.cancelMove=h,e.stop=function(n){n.movable.color=n.movable.dests=n.animation.current=void 0,h(n)},e.getKeyAtDomPos=function(n,e,t){var o=Math.ceil((n[0]-t.left)/t.width*8);e||(o=9-o);var i=Math.ceil(8-(n[1]-t.top)/t.height*8);return e||(i=9-i),o>0&&o<9&&i>0&&i<9?r.pos2key([o,i]):void 0}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.files=["a","b","c","d","e","f","g","h"],e.ranks=[1,2,3,4,5,6,7,8]},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(0),o=t(4);e.initial="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR";var i={p:"pawn",r:"rook",n:"knight",b:"bishop",q:"queen",k:"king"},a={pawn:"p",rook:"r",knight:"n",bishop:"b",queen:"q",king:"k"};e.read=function(n){"start"===n&&(n=e.initial);for(var t={},o=8,a=0,l=0,s=n;l<s.length;l++){var c=s[l];switch(c){case" ":return t;case"/":if(0==--o)return t;a=0;break;case"~":t[r.pos2key([a,o])].promoted=!0;break;default:var d=c.charCodeAt(0);if(d<57)a+=d-48;else{++a;var f=c.toLowerCase();t[r.pos2key([a,o])]={role:i[f],color:c===f?"black":"white"}}}}return t},e.write=function(n){var e,t;return r.invRanks.map(function(i){return o.ranks.map(function(o){return(e=n[r.pos2key([o,i])])?(t=a[e.role],"white"===e.color?t.toUpperCase():t):"1"}).join("")}).join("/").replace(/1{2,}/g,function(n){return n.length.toString()})}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(3),o=t(5);function i(n){return"object"==typeof n}e.configure=function(n,e){if(e.movable&&e.movable.dests&&(n.movable.dests=void 0),function n(e,t){for(var r in t)i(e[r])&&i(t[r])?n(e[r],t[r]):e[r]=t[r]}(n,e),e.fen&&(n.pieces=o.read(e.fen),n.drawable.shapes=[]),e.hasOwnProperty("check")&&r.setCheck(n,e.check||!1),e.hasOwnProperty("lastMove")&&!e.lastMove?n.lastMove=void 0:e.lastMove&&(n.lastMove=e.lastMove),n.selected&&r.setSelected(n,n.selected),(!n.animation.duration||n.animation.duration<100)&&(n.animation.enabled=!1),!n.movable.rookCastle&&n.movable.dests){var t="white"===n.movable.color?1:8,a="e"+t,l=n.movable.dests[a];if(!l||"king"!==n.pieces[a].role)return;n.movable.dests[a]=l.filter(function(n){return!(n==="a"+t&&-1!==l.indexOf("c"+t)||n==="h"+t&&-1!==l.indexOf("g"+t))})}}},function(n,e,t){"use strict";var r=this&&this.__assign||Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n};Object.defineProperty(e,"__esModule",{value:!0});var o=t(0);function i(n,e){var t=n(e);return e.dom.redraw(),t}function a(n,e){return{key:n,pos:o.key2pos(n),piece:e}}e.anim=function(n,e){return e.animation.enabled?function(n,e){var t=r({},e.pieces),i=n(e),c=function(n,e){var t,r,i,l,s={},c=[],d={},f=[],u=[],p={};for(i in n)p[i]=a(i,n[i]);for(var b=0,g=o.allKeys;b<g.length;b++){var m=g[b];t=e.pieces[m],r=p[m],t?r?o.samePiece(t,r.piece)||(f.push(r),u.push(a(m,t))):u.push(a(m,t)):r&&f.push(r)}return u.forEach(function(n){(r=function(n,e){return e.sort(function(e,t){return o.distanceSq(n.pos,e.pos)-o.distanceSq(n.pos,t.pos)})[0]}(n,f.filter(function(e){return o.samePiece(n.piece,e.piece)})))&&(l=[r.pos[0]-n.pos[0],r.pos[1]-n.pos[1]],s[n.key]=l.concat(l),c.push(r.key))}),f.forEach(function(n){o.containsX(c,n.key)||e.items&&e.items(n.pos,n.key)||(d[n.key]=n.piece)}),{anims:s,fadings:d}}(t,e);if(s(c.anims)&&s(c.fadings))e.dom.redraw();else{var d=e.animation.current&&e.animation.current.start;e.animation.current={start:l.now(),frequency:1/e.animation.duration,plan:c},d||function n(e,t){var r=e.animation.current;if(void 0!==r){var i=1-(t-r.start)*r.frequency;if(i<=0)e.animation.current=void 0,e.dom.redrawNow();else{var a=function(n){return n<.5?4*n*n*n:(n-1)*(2*n-2)*(2*n-2)+1}(i);for(var s in r.plan.anims){var c=r.plan.anims[s];c[2]=c[0]*a,c[3]=c[1]*a}e.dom.redrawNow(!0),o.raf(function(t){return void 0===t&&(t=l.now()),n(e,t)})}}else e.dom.destroyed||e.dom.redrawNow()}(e,l.now())}return i}(n,e):i(n,e)},e.render=i;var l=void 0!==window.performance?window.performance:Date;function s(n){for(var e in n)return!1;return!0}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(3),o=t(0),i=t(9),a=t(7);function l(n){o.raf(function(){var e=n.draggable.current;if(e){n.animation.current&&n.animation.current.plan.anims[e.orig]&&(n.animation.current=void 0);var t=n.pieces[e.orig];if(t&&o.samePiece(t,e.piece)){if(!e.started&&o.distanceSq(e.epos,e.rel)>=Math.pow(n.draggable.distance,2)&&(e.started=!0),e.started){if("function"==typeof e.element){var r=e.element();if(!r)return;e.element=r,e.element.cgDragging=!0,e.element.classList.add("dragging")}var i="white"===n.orientation,a=n.dom.bounds();e.pos=[e.epos[0]-e.rel[0],e.epos[1]-e.rel[1]];var c=o.posToTranslateAbs(a)(e.origPos,i);c[0]+=e.pos[0]+e.dec[0],c[1]+=e.pos[1]+e.dec[1],o.translateAbs(e.element,c)}}else s(n);l(n)}})}function s(n){var e=n.draggable.current;e&&(e.newPiece&&delete n.pieces[e.orig],n.draggable.current=void 0,r.unselect(n),c(n),n.dom.redraw())}function c(n){var e=n.dom.elements;e.ghost&&o.setVisible(e.ghost,!1)}function d(n,e,t){var r=o.key2pos(n);return e||(r[0]=9-r[0],r[1]=9-r[1]),{left:t.left+t.width*(r[0]-1)/8,top:t.top+t.height*(8-r[1])/8,width:t.width/8,height:t.height/8}}function f(n,e){for(var t=n.dom.elements.board.firstChild;t;){if(t.cgKey===e&&"PIECE"===t.tagName)return t;t=t.nextSibling}}e.start=function(n,e){if(!(void 0!==e.button&&0!==e.button||e.touches&&e.touches.length>1)){e.preventDefault();var t="white"===n.orientation,s=n.dom.bounds(),c=o.eventPosition(e),u=r.getKeyAtDomPos(c,t,s);if(u){var p=n.pieces[u],b=n.selected;b||!n.drawable.enabled||!n.drawable.eraseOnClick&&p&&p.color===n.turnColor||i.clear(n);var g=!!n.premovable.current,m=!!n.predroppable.current;n.stats.ctrlKey=e.ctrlKey,n.selected&&r.canMove(n,n.selected,u)?a.anim(function(n){return r.selectSquare(n,u)},n):r.selectSquare(n,u);var h=n.selected===u,v=f(n,u);if(p&&v&&h&&r.isDraggable(n,u)){var w=d(u,t,s);n.draggable.current={orig:u,origPos:o.key2pos(u),piece:p,rel:c,epos:c,pos:[0,0],dec:n.draggable.centerPiece?[c[0]-(w.left+w.width/2),c[1]-(w.top+w.height/2)]:[0,0],started:n.draggable.autoDistance&&n.stats.dragged,element:v,previouslySelected:b,originTarget:e.target},v.cgDragging=!0,v.classList.add("dragging");var x=n.dom.elements.ghost;x&&(x.className="ghost "+p.color+" "+p.role,o.translateAbs(x,o.posToTranslateAbs(s)(o.key2pos(u),t)),o.setVisible(x,!0)),l(n)}else g&&r.unsetPremove(n),m&&r.unsetPredrop(n);n.dom.redraw()}}},e.dragNewPiece=function(n,e,t,r){n.pieces.a0=e,n.dom.redraw();var i=o.eventPosition(t),a="white"===n.orientation,s=n.dom.bounds(),c=d("a0",a,s),u=[(a?0:7)*c.width+s.left,(a?8:-1)*c.height+s.top];n.draggable.current={orig:"a0",origPos:o.key2pos("a0"),piece:e,rel:u,epos:i,pos:[i[0]-u[0],i[1]-u[1]],dec:[-c.width/2,-c.height/2],started:!0,element:function(){return f(n,"a0")},originTarget:t.target,newPiece:!0,force:r||!1},l(n)},e.move=function(n,e){n.draggable.current&&(!e.touches||e.touches.length<2)&&(n.draggable.current.epos=o.eventPosition(e))},e.end=function(n,e){var t=n.draggable.current;if(t)if("touchend"!==e.type||!t||t.originTarget===e.target||t.newPiece){r.unsetPremove(n),r.unsetPredrop(n);var i=o.eventPosition(e)||t.epos,a=r.getKeyAtDomPos(i,"white"===n.orientation,n.dom.bounds());a&&t.started?t.newPiece?r.dropNewPiece(n,t.orig,a,t.force):(n.stats.ctrlKey=e.ctrlKey,r.userMove(n,t.orig,a)&&(n.stats.dragged=!0)):t.newPiece?delete n.pieces[t.orig]:n.draggable.deleteOnDropOff&&(delete n.pieces[t.orig],r.callUserFunction(n.events.change)),(!t||t.orig!==t.previouslySelected||t.orig!==a&&a)&&n.selectable.enabled||r.unselect(n),c(n),n.draggable.current=void 0,n.dom.redraw()}else n.draggable.current=void 0},e.cancel=s},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(3),o=t(0),i=["green","red","blue","yellow"];function a(n){o.raf(function(){var e=n.drawable.current;if(e){var t=r.getKeyAtDomPos(e.pos,"white"===n.orientation,n.dom.bounds());t!==e.mouseSq&&(e.mouseSq=t,e.dest=t!==e.orig?t:void 0,n.dom.redrawNow()),a(n)}})}function l(n){n.drawable.current&&(n.drawable.current=void 0,n.dom.redraw())}function s(n){n.onChange&&n.onChange(n.shapes)}e.start=function(n,e){if(!(e.touches&&e.touches.length>1)){e.stopPropagation(),e.preventDefault(),e.ctrlKey?r.unselect(n):r.cancelMove(n);var t=o.eventPosition(e),l=r.getKeyAtDomPos(t,"white"===n.orientation,n.dom.bounds());l&&(n.drawable.current={orig:l,pos:t,brush:function(n){var e=n.shiftKey&&o.isRightButton(n)?1:0,t=n.altKey?2:0;return i[e+t]}(e)},a(n))}},e.processDraw=a,e.move=function(n,e){n.drawable.current&&(n.drawable.current.pos=o.eventPosition(e))},e.end=function(n){var e=n.drawable.current;e&&(e.mouseSq&&function(n,e){var t=function(n){return n.orig===e.orig&&n.dest===e.dest},r=n.shapes.filter(t)[0];r&&(n.shapes=n.shapes.filter(function(n){return function(e){return!n(e)}}(t))),r&&r.brush===e.brush||n.shapes.push(e),s(n)}(n.drawable,e),l(n))},e.cancel=l,e.clear=function(n){n.drawable.shapes.length&&(n.drawable.shapes=[],n.dom.redraw(),s(n.drawable))}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,o=t(0);function i(n){return document.createElementNS("http://www.w3.org/2000/svg",n)}function a(n,e,t){var r=n.orig,o=n.dest,i=n.brush,a=n.piece,l=n.modifiers;return[t,r,o,i,o&&e[o]>1,a&&function(n){return[n.color,n.role,n.scale].filter(function(n){return n}).join("")}(a),l&&function(n){return""+(n.lineWidth||"")}(l)].filter(function(n){return n}).join("")}function l(n){var e=s(i("marker"),{id:"arrowhead-"+n.key,orient:"auto",markerWidth:4,markerHeight:8,refX:2.05,refY:2.01});return e.appendChild(s(i("path"),{d:"M0,0 V4 L3,2 Z",fill:n.color})),e.setAttribute("cgKey",n.key),e}function s(n,e){for(var t in e)n.setAttribute(t,e[t]);return n}function c(n,e){return"white"===e?n:[9-n[0],9-n[1]]}function d(n,e){var t={color:n.color,opacity:Math.round(10*n.opacity)/10,lineWidth:Math.round(e.lineWidth||n.lineWidth)};return t.key=[n.key,e.lineWidth].filter(function(n){return n}).join(""),t}function f(n,e){return(n.opacity||1)*(e?.9:1)}function u(n,e){return[(n[0]-.5)*e.width/8,(8.5-n[1])*e.height/8]}e.createElement=i,e.renderSvg=function(n,e){var t=n.drawable,p=t.current,b=p&&p.mouseSq?p:void 0,g={};t.shapes.concat(t.autoShapes).concat(b?[b]:[]).forEach(function(n){n.dest&&(g[n.dest]=(g[n.dest]||0)+1)});var m=t.shapes.concat(t.autoShapes).map(function(n){return{shape:n,current:!1,hash:a(n,g,!1)}});b&&m.push({shape:b,current:!0,hash:a(b,g,!0)});var h=m.map(function(n){return n.hash}).join("");if(h!==n.drawable.prevSvgHash){n.drawable.prevSvgHash=h;var v=e.firstChild;!function(n,e,t){var r,o={};e.forEach(function(e){e.shape.dest&&(r=n.brushes[e.shape.brush],e.shape.modifiers&&(r=d(r,e.shape.modifiers)),o[r.key]=r)});for(var i={},a=t.firstChild;a;)i[a.getAttribute("cgKey")]=!0,a=a.nextSibling;for(var s in o)i[s]||t.appendChild(l(o[s]))}(t,m,v),function(n,e,t,a,l,p){void 0===r&&(r=o.computeIsTrident());var b=n.dom.bounds(),g={},m=[];e.forEach(function(n){g[n.hash]=!1});for(var h,v=p.nextSibling;v;)h=v.getAttribute("cgHash"),g.hasOwnProperty(h)?g[h]=!0:m.push(v),v=v.nextSibling;m.forEach(function(n){return l.removeChild(n)}),e.forEach(function(e){g[e.hash]||l.appendChild(function(n,e,t,a,l){var p,b=e.shape,g=e.current,m=e.hash;if(b.piece)p=function(n,e,t,r){var o=u(e,r),a=r.width/8*(t.scale||1),l=t.color[0]+("knight"===t.role?"n":t.role[0]).toUpperCase();return s(i("image"),{className:t.role+" "+t.color,x:o[0]-a/2,y:o[1]-a/2,width:a,height:a,href:n+l+".svg"})}(n.drawable.pieces.baseUrl,c(o.key2pos(b.orig),n.orientation),b.piece,l);else{var h=c(o.key2pos(b.orig),n.orientation);if(b.orig&&b.dest){var v=t[b.brush];b.modifiers&&(v=d(v,b.modifiers)),p=function(n,e,t,o,a,l){var c=function(n,e){return r?0:(e?20:10)/512*n.width}(l,a&&!o),d=u(e,l),p=u(t,l),b=p[0]-d[0],g=p[1]-d[1],m=Math.atan2(g,b),h=Math.cos(m)*c,v=Math.sin(m)*c;return s(i("line"),{stroke:n.color,"stroke-width":function(n,e,t){return(n.lineWidth||10)*(e?.85:1)/512*t.width}(n,o,l),"stroke-linecap":"round","marker-end":r?void 0:"url(#arrowhead-"+n.key+")",opacity:f(n,o),x1:d[0],y1:d[1],x2:p[0]-h,y2:p[1]-v})}(v,h,c(o.key2pos(b.dest),n.orientation),g,a[b.dest]>1,l)}else p=function(n,e,t,r){var o=u(e,r),a=function(n){var e=n.width/512;return[3*e,4*e]}(r),l=(r.width+r.height)/32;return s(i("circle"),{stroke:n.color,"stroke-width":a[t?0:1],fill:"none",opacity:f(n,t),cx:o[0],cy:o[1],r:l-a[1]/2})}(t[b.brush],h,g,l)}return p.setAttribute("cgHash",m),p}(n,e,t,a,b))})}(n,m,t.brushes,g,e,v)}}},function(n,e,t){"use strict";e.__esModule=!0,t(12),t(15),t(31),t(33);var r=t(35),o=t(43);function i(n){var e={};return n.SQUARES.forEach(function(t){var r=n.moves({square:t,verbose:!0});r.length&&(e[t]=r.map(function(n){return n.to}))}),e}function a(n){return"w"===n.turn()?"white":"black"}function l(n,e){return function(t,r){e.move({from:t,to:r}),c(),n.set({turnColor:a(e),movable:{color:a(e),dests:i(e)}})}}function s(n,e){c(),n.set({turnColor:a(e),movable:{color:a(e),dests:i(e)}})}function c(){document.getElementById("pgn").innerHTML=f.pgn()}e.toDests=i,e.toColor=a,e.playOtherSide=l,e.changeBackorNext=s,e.rewritePgn=c;var d=document.getElementById("ground1"),f=new o,u=[],p=r.Chessground(d,{movable:{color:"white",free:!1,dests:i(f)}});p.set({movable:{events:{after:l(p,f)}}}),document.getElementById("next").addEventListener("click",function(n){console.log("next"),console.log(p);var e=u.pop();f.move(e),p.set({fen:f.fen()}),s(p,f)}),document.getElementById("back").addEventListener("click",function(n){var e=f.undo();u.push(e),p.set({fen:f.fen()}),s(p,f)}),document.getElementById("restart").addEventListener("click",function(n){document.location.reload()})},function(n,e,t){var r=t(13);"string"==typeof r&&(r=[[n.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(2)(r,o);r.locals&&(n.exports=r.locals)},function(n,e,t){(n.exports=t(1)(!1)).push([n.i,"/*\n * Chessground base css properties.\n *\n * You need to include the css files in themes folder in order to have the\n * board and pieces displayed!\n */\n\n.cg-board-wrap {\n  width: 320px;\n  height: 320px;\n  position: relative;\n  display: block;\n}\n.cg-board {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  line-height: 0;\n  background-size: cover;\n  cursor: pointer;\n}\n.cg-board square {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 12.5%;\n  height: 12.5%;\n  pointer-events: none;\n}\n.cg-board square.move-dest {\n  background: radial-gradient(rgba(20, 85, 30, 0.5) 22%, #208530 0, rgba(0, 0, 0, 0.3) 0, rgba(0, 0, 0, 0) 0);\n  pointer-events: auto;\n}\n.cg-board square.premove-dest {\n  background: radial-gradient(rgba(20, 30, 85, 0.5) 22%, #203085 0, rgba(0, 0, 0, 0.3) 0, rgba(0, 0, 0, 0) 0);\n}\n.cg-board square.oc.move-dest {\n  background: radial-gradient(transparent 0%, transparent 80%, rgba(20, 85, 0, 0.3) 80%);\n}\n.cg-board square.oc.premove-dest {\n  background: radial-gradient(transparent 0%, transparent 80%, rgba(20, 30, 85, 0.2) 80%);\n}\n.cg-board square.move-dest:hover {\n  background: rgba(20, 85, 30, 0.3);\n}\n.cg-board square.premove-dest:hover {\n  background: rgba(20, 30, 85, 0.2);\n}\n.cg-board square.last-move {\n  will-change: transform;\n  background-color: rgba(155, 199, 0, 0.41);\n}\n.cg-board square.selected {\n  background-color: rgba(20, 85, 30, 0.5);\n}\n.cg-board square.check {\n  background: radial-gradient(ellipse at center, rgba(255, 0, 0, 1) 0%, rgba(231, 0, 0, 1) 25%, rgba(169, 0, 0, 0) 89%, rgba(158, 0, 0, 0) 100%);\n}\n.cg-board square.current-premove {\n  background-color: rgba(20, 30, 85, 0.5);\n}\n.cg-board-wrap piece {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 12.5%;\n  height: 12.5%;\n  background-size: cover;\n  z-index: 2;\n  will-change: transform;\n  pointer-events: none;\n}\n.cg-board piece.dragging {\n  cursor: move;\n  z-index: 9;\n}\n.cg-board piece.anim {\n  z-index: 8;\n}\n.cg-board piece.fading {\n  z-index: 1;\n  opacity: 0.5;\n}\n.cg-board-wrap square.move-dest:hover {\n  background-color: rgba(20, 85, 30, 0.3);\n}\n.cg-board-wrap piece.ghost {\n  opacity: 0.3;\n}\n.cg-board-wrap svg {\n  overflow: hidden;\n  position: relative;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 2;\n  opacity: 0.6;\n}\n.cg-board-wrap svg image {\n  opacity: 0.5;\n}\n.cg-board-wrap coords {\n  position: absolute;\n  display: flex;\n  pointer-events: none;\n  opacity: 0.8;\n  font-size: 9px;\n}\n.cg-board-wrap coords.ranks {\n  right: -15px;\n  top: 0;\n  flex-flow: column-reverse;\n  height: 100%;\n  width: 12px;\n}\n.cg-board-wrap coords.ranks.black {\n  flex-flow: column;\n}\n.cg-board-wrap coords.files {\n  bottom: -16px;\n  left: 0;\n  flex-flow: row;\n  width: 100%;\n  height: 16px;\n  text-transform: uppercase;\n  text-align: center;\n}\n.cg-board-wrap coords.files.black {\n  flex-flow: row-reverse;\n}\n.cg-board-wrap coords coord {\n  flex: 1 1 auto;\n}\n.cg-board-wrap coords.ranks coord {\n  transform: translateY(39%);\n}\n",""])},function(n,e){n.exports=function(n){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var t=e.protocol+"//"+e.host,r=t+e.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(n,e){var o,i=e.trim().replace(/^"(.*)"$/,function(n,e){return e}).replace(/^'(.*)'$/,function(n,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?n:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?t+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(n,e,t){var r=t(16);"string"==typeof r&&(r=[[n.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(2)(r,o);r.locals&&(n.exports=r.locals)},function(n,e,t){var r=t(17);(n.exports=t(1)(!1)).push([n.i,"/*\n * Board\n */\n.blue .cg-board-wrap {\n  background-image: url("+r(t(18))+");\n}\n\n.merida .cg-board-wrap piece.pawn.white {\n  background-image: url("+r(t(19))+");\n}\n.merida .cg-board-wrap piece.bishop.white {\n  background-image: url("+r(t(20))+");\n}\n.merida .cg-board-wrap piece.knight.white {\n  background-image: url("+r(t(21))+");\n}\n.merida .cg-board-wrap piece.rook.white {\n  background-image: url("+r(t(22))+");\n}\n.merida .cg-board-wrap piece.queen.white {\n  background-image: url("+r(t(23))+");\n}\n.merida .cg-board-wrap piece.king.white {\n  background-image: url("+r(t(24))+");\n}\n.merida .cg-board-wrap piece.pawn.black {\n  background-image: url("+r(t(25))+");\n}\n.merida .cg-board-wrap piece.bishop.black {\n  background-image: url("+r(t(26))+");\n}\n.merida .cg-board-wrap piece.knight.black {\n  background-image: url("+r(t(27))+");\n}\n.merida .cg-board-wrap piece.rook.black {\n  background-image: url("+r(t(28))+");\n}\n.merida .cg-board-wrap piece.queen.black {\n  background-image: url("+r(t(29))+");\n}\n.merida .cg-board-wrap piece.king.black {\n  background-image: url("+r(t(30))+");\n}\n",""])},function(n,e){n.exports=function(n){return"string"!=typeof n?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),/["'() \t\n]/.test(n)?'"'+n.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':n)}},function(n,e,t){n.exports=t.p+"ec211823661028e43e9a22fdf1201454.svg"},function(n,e,t){n.exports=t.p+"4ff1ce7c9541a77b98582a3329e920ed.svg"},function(n,e,t){n.exports=t.p+"e0eb761a13389f391cf3e6f643597644.svg"},function(n,e,t){n.exports=t.p+"f9c6e522d506c7c3a555e412d34630df.svg"},function(n,e,t){n.exports=t.p+"573501233a407695e7b5d5b8e6efc7aa.svg"},function(n,e,t){n.exports=t.p+"4e4432a6b0dfce093177db46dc9bff48.svg"},function(n,e,t){n.exports=t.p+"bb430c603fae05171bfcc6760efda928.svg"},function(n,e,t){n.exports=t.p+"344e161b311ce904cc0e3be7d7d61090.svg"},function(n,e,t){n.exports=t.p+"8a6bd56a8d71b44673a36c25e1ca66aa.svg"},function(n,e,t){n.exports=t.p+"0026f14668177f7dd0d4bab167b1a1cf.svg"},function(n,e,t){n.exports=t.p+"027332a07c4f25930a0e527a85965aa4.svg"},function(n,e,t){n.exports=t.p+"aed026d0021b7ebfc2164946c0136010.svg"},function(n,e,t){n.exports=t.p+"47af274b8a88eec771681b9ac53dc6d2.svg"},function(n,e,t){var r=t(32);"string"==typeof r&&(r=[[n.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(2)(r,o);r.locals&&(n.exports=r.locals)},function(n,e,t){(n.exports=t(1)(!1)).push([n.i,"#buttons,\n#ground1 {\n    margin: 0 auto;\n    text-align: center\n}\n\n#pgn {\n    margin-top: 50px;\n}\n",""])},function(n,e,t){var r=t(34);"string"==typeof r&&(r=[[n.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(2)(r,o);r.locals&&(n.exports=r.locals)},function(n,e,t){(n.exports=t(1)(!1)).push([n.i,'/*!\n * Bootstrap Grid v4.1.3 (https://getbootstrap.com/)\n * Copyright 2011-2018 The Bootstrap Authors\n * Copyright 2011-2018 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n@-ms-viewport {\n  width: device-width; }\n\nhtml {\n  box-sizing: border-box;\n  -ms-overflow-style: scrollbar; }\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit; }\n\n.container {\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto; }\n  @media (min-width: 576px) {\n    .container {\n      max-width: 540px; } }\n  @media (min-width: 768px) {\n    .container {\n      max-width: 720px; } }\n  @media (min-width: 992px) {\n    .container {\n      max-width: 960px; } }\n  @media (min-width: 1200px) {\n    .container {\n      max-width: 1140px; } }\n\n.container-fluid {\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto; }\n\n.row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px; }\n\n.no-gutters {\n  margin-right: 0;\n  margin-left: 0; }\n  .no-gutters > .col,\n  .no-gutters > [class*="col-"] {\n    padding-right: 0;\n    padding-left: 0; }\n\n.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col,\n.col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm,\n.col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md,\n.col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg,\n.col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl,\n.col-xl-auto {\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding-right: 15px;\n  padding-left: 15px; }\n\n.col {\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%; }\n\n.col-auto {\n  flex: 0 0 auto;\n  width: auto;\n  max-width: none; }\n\n.col-1 {\n  flex: 0 0 8.33333%;\n  max-width: 8.33333%; }\n\n.col-2 {\n  flex: 0 0 16.66667%;\n  max-width: 16.66667%; }\n\n.col-3 {\n  flex: 0 0 25%;\n  max-width: 25%; }\n\n.col-4 {\n  flex: 0 0 33.33333%;\n  max-width: 33.33333%; }\n\n.col-5 {\n  flex: 0 0 41.66667%;\n  max-width: 41.66667%; }\n\n.col-6 {\n  flex: 0 0 50%;\n  max-width: 50%; }\n\n.col-7 {\n  flex: 0 0 58.33333%;\n  max-width: 58.33333%; }\n\n.col-8 {\n  flex: 0 0 66.66667%;\n  max-width: 66.66667%; }\n\n.col-9 {\n  flex: 0 0 75%;\n  max-width: 75%; }\n\n.col-10 {\n  flex: 0 0 83.33333%;\n  max-width: 83.33333%; }\n\n.col-11 {\n  flex: 0 0 91.66667%;\n  max-width: 91.66667%; }\n\n.col-12 {\n  flex: 0 0 100%;\n  max-width: 100%; }\n\n.order-first {\n  order: -1; }\n\n.order-last {\n  order: 13; }\n\n.order-0 {\n  order: 0; }\n\n.order-1 {\n  order: 1; }\n\n.order-2 {\n  order: 2; }\n\n.order-3 {\n  order: 3; }\n\n.order-4 {\n  order: 4; }\n\n.order-5 {\n  order: 5; }\n\n.order-6 {\n  order: 6; }\n\n.order-7 {\n  order: 7; }\n\n.order-8 {\n  order: 8; }\n\n.order-9 {\n  order: 9; }\n\n.order-10 {\n  order: 10; }\n\n.order-11 {\n  order: 11; }\n\n.order-12 {\n  order: 12; }\n\n.offset-1 {\n  margin-left: 8.33333%; }\n\n.offset-2 {\n  margin-left: 16.66667%; }\n\n.offset-3 {\n  margin-left: 25%; }\n\n.offset-4 {\n  margin-left: 33.33333%; }\n\n.offset-5 {\n  margin-left: 41.66667%; }\n\n.offset-6 {\n  margin-left: 50%; }\n\n.offset-7 {\n  margin-left: 58.33333%; }\n\n.offset-8 {\n  margin-left: 66.66667%; }\n\n.offset-9 {\n  margin-left: 75%; }\n\n.offset-10 {\n  margin-left: 83.33333%; }\n\n.offset-11 {\n  margin-left: 91.66667%; }\n\n@media (min-width: 576px) {\n  .col-sm {\n    flex-basis: 0;\n    flex-grow: 1;\n    max-width: 100%; }\n  .col-sm-auto {\n    flex: 0 0 auto;\n    width: auto;\n    max-width: none; }\n  .col-sm-1 {\n    flex: 0 0 8.33333%;\n    max-width: 8.33333%; }\n  .col-sm-2 {\n    flex: 0 0 16.66667%;\n    max-width: 16.66667%; }\n  .col-sm-3 {\n    flex: 0 0 25%;\n    max-width: 25%; }\n  .col-sm-4 {\n    flex: 0 0 33.33333%;\n    max-width: 33.33333%; }\n  .col-sm-5 {\n    flex: 0 0 41.66667%;\n    max-width: 41.66667%; }\n  .col-sm-6 {\n    flex: 0 0 50%;\n    max-width: 50%; }\n  .col-sm-7 {\n    flex: 0 0 58.33333%;\n    max-width: 58.33333%; }\n  .col-sm-8 {\n    flex: 0 0 66.66667%;\n    max-width: 66.66667%; }\n  .col-sm-9 {\n    flex: 0 0 75%;\n    max-width: 75%; }\n  .col-sm-10 {\n    flex: 0 0 83.33333%;\n    max-width: 83.33333%; }\n  .col-sm-11 {\n    flex: 0 0 91.66667%;\n    max-width: 91.66667%; }\n  .col-sm-12 {\n    flex: 0 0 100%;\n    max-width: 100%; }\n  .order-sm-first {\n    order: -1; }\n  .order-sm-last {\n    order: 13; }\n  .order-sm-0 {\n    order: 0; }\n  .order-sm-1 {\n    order: 1; }\n  .order-sm-2 {\n    order: 2; }\n  .order-sm-3 {\n    order: 3; }\n  .order-sm-4 {\n    order: 4; }\n  .order-sm-5 {\n    order: 5; }\n  .order-sm-6 {\n    order: 6; }\n  .order-sm-7 {\n    order: 7; }\n  .order-sm-8 {\n    order: 8; }\n  .order-sm-9 {\n    order: 9; }\n  .order-sm-10 {\n    order: 10; }\n  .order-sm-11 {\n    order: 11; }\n  .order-sm-12 {\n    order: 12; }\n  .offset-sm-0 {\n    margin-left: 0; }\n  .offset-sm-1 {\n    margin-left: 8.33333%; }\n  .offset-sm-2 {\n    margin-left: 16.66667%; }\n  .offset-sm-3 {\n    margin-left: 25%; }\n  .offset-sm-4 {\n    margin-left: 33.33333%; }\n  .offset-sm-5 {\n    margin-left: 41.66667%; }\n  .offset-sm-6 {\n    margin-left: 50%; }\n  .offset-sm-7 {\n    margin-left: 58.33333%; }\n  .offset-sm-8 {\n    margin-left: 66.66667%; }\n  .offset-sm-9 {\n    margin-left: 75%; }\n  .offset-sm-10 {\n    margin-left: 83.33333%; }\n  .offset-sm-11 {\n    margin-left: 91.66667%; } }\n\n@media (min-width: 768px) {\n  .col-md {\n    flex-basis: 0;\n    flex-grow: 1;\n    max-width: 100%; }\n  .col-md-auto {\n    flex: 0 0 auto;\n    width: auto;\n    max-width: none; }\n  .col-md-1 {\n    flex: 0 0 8.33333%;\n    max-width: 8.33333%; }\n  .col-md-2 {\n    flex: 0 0 16.66667%;\n    max-width: 16.66667%; }\n  .col-md-3 {\n    flex: 0 0 25%;\n    max-width: 25%; }\n  .col-md-4 {\n    flex: 0 0 33.33333%;\n    max-width: 33.33333%; }\n  .col-md-5 {\n    flex: 0 0 41.66667%;\n    max-width: 41.66667%; }\n  .col-md-6 {\n    flex: 0 0 50%;\n    max-width: 50%; }\n  .col-md-7 {\n    flex: 0 0 58.33333%;\n    max-width: 58.33333%; }\n  .col-md-8 {\n    flex: 0 0 66.66667%;\n    max-width: 66.66667%; }\n  .col-md-9 {\n    flex: 0 0 75%;\n    max-width: 75%; }\n  .col-md-10 {\n    flex: 0 0 83.33333%;\n    max-width: 83.33333%; }\n  .col-md-11 {\n    flex: 0 0 91.66667%;\n    max-width: 91.66667%; }\n  .col-md-12 {\n    flex: 0 0 100%;\n    max-width: 100%; }\n  .order-md-first {\n    order: -1; }\n  .order-md-last {\n    order: 13; }\n  .order-md-0 {\n    order: 0; }\n  .order-md-1 {\n    order: 1; }\n  .order-md-2 {\n    order: 2; }\n  .order-md-3 {\n    order: 3; }\n  .order-md-4 {\n    order: 4; }\n  .order-md-5 {\n    order: 5; }\n  .order-md-6 {\n    order: 6; }\n  .order-md-7 {\n    order: 7; }\n  .order-md-8 {\n    order: 8; }\n  .order-md-9 {\n    order: 9; }\n  .order-md-10 {\n    order: 10; }\n  .order-md-11 {\n    order: 11; }\n  .order-md-12 {\n    order: 12; }\n  .offset-md-0 {\n    margin-left: 0; }\n  .offset-md-1 {\n    margin-left: 8.33333%; }\n  .offset-md-2 {\n    margin-left: 16.66667%; }\n  .offset-md-3 {\n    margin-left: 25%; }\n  .offset-md-4 {\n    margin-left: 33.33333%; }\n  .offset-md-5 {\n    margin-left: 41.66667%; }\n  .offset-md-6 {\n    margin-left: 50%; }\n  .offset-md-7 {\n    margin-left: 58.33333%; }\n  .offset-md-8 {\n    margin-left: 66.66667%; }\n  .offset-md-9 {\n    margin-left: 75%; }\n  .offset-md-10 {\n    margin-left: 83.33333%; }\n  .offset-md-11 {\n    margin-left: 91.66667%; } }\n\n@media (min-width: 992px) {\n  .col-lg {\n    flex-basis: 0;\n    flex-grow: 1;\n    max-width: 100%; }\n  .col-lg-auto {\n    flex: 0 0 auto;\n    width: auto;\n    max-width: none; }\n  .col-lg-1 {\n    flex: 0 0 8.33333%;\n    max-width: 8.33333%; }\n  .col-lg-2 {\n    flex: 0 0 16.66667%;\n    max-width: 16.66667%; }\n  .col-lg-3 {\n    flex: 0 0 25%;\n    max-width: 25%; }\n  .col-lg-4 {\n    flex: 0 0 33.33333%;\n    max-width: 33.33333%; }\n  .col-lg-5 {\n    flex: 0 0 41.66667%;\n    max-width: 41.66667%; }\n  .col-lg-6 {\n    flex: 0 0 50%;\n    max-width: 50%; }\n  .col-lg-7 {\n    flex: 0 0 58.33333%;\n    max-width: 58.33333%; }\n  .col-lg-8 {\n    flex: 0 0 66.66667%;\n    max-width: 66.66667%; }\n  .col-lg-9 {\n    flex: 0 0 75%;\n    max-width: 75%; }\n  .col-lg-10 {\n    flex: 0 0 83.33333%;\n    max-width: 83.33333%; }\n  .col-lg-11 {\n    flex: 0 0 91.66667%;\n    max-width: 91.66667%; }\n  .col-lg-12 {\n    flex: 0 0 100%;\n    max-width: 100%; }\n  .order-lg-first {\n    order: -1; }\n  .order-lg-last {\n    order: 13; }\n  .order-lg-0 {\n    order: 0; }\n  .order-lg-1 {\n    order: 1; }\n  .order-lg-2 {\n    order: 2; }\n  .order-lg-3 {\n    order: 3; }\n  .order-lg-4 {\n    order: 4; }\n  .order-lg-5 {\n    order: 5; }\n  .order-lg-6 {\n    order: 6; }\n  .order-lg-7 {\n    order: 7; }\n  .order-lg-8 {\n    order: 8; }\n  .order-lg-9 {\n    order: 9; }\n  .order-lg-10 {\n    order: 10; }\n  .order-lg-11 {\n    order: 11; }\n  .order-lg-12 {\n    order: 12; }\n  .offset-lg-0 {\n    margin-left: 0; }\n  .offset-lg-1 {\n    margin-left: 8.33333%; }\n  .offset-lg-2 {\n    margin-left: 16.66667%; }\n  .offset-lg-3 {\n    margin-left: 25%; }\n  .offset-lg-4 {\n    margin-left: 33.33333%; }\n  .offset-lg-5 {\n    margin-left: 41.66667%; }\n  .offset-lg-6 {\n    margin-left: 50%; }\n  .offset-lg-7 {\n    margin-left: 58.33333%; }\n  .offset-lg-8 {\n    margin-left: 66.66667%; }\n  .offset-lg-9 {\n    margin-left: 75%; }\n  .offset-lg-10 {\n    margin-left: 83.33333%; }\n  .offset-lg-11 {\n    margin-left: 91.66667%; } }\n\n@media (min-width: 1200px) {\n  .col-xl {\n    flex-basis: 0;\n    flex-grow: 1;\n    max-width: 100%; }\n  .col-xl-auto {\n    flex: 0 0 auto;\n    width: auto;\n    max-width: none; }\n  .col-xl-1 {\n    flex: 0 0 8.33333%;\n    max-width: 8.33333%; }\n  .col-xl-2 {\n    flex: 0 0 16.66667%;\n    max-width: 16.66667%; }\n  .col-xl-3 {\n    flex: 0 0 25%;\n    max-width: 25%; }\n  .col-xl-4 {\n    flex: 0 0 33.33333%;\n    max-width: 33.33333%; }\n  .col-xl-5 {\n    flex: 0 0 41.66667%;\n    max-width: 41.66667%; }\n  .col-xl-6 {\n    flex: 0 0 50%;\n    max-width: 50%; }\n  .col-xl-7 {\n    flex: 0 0 58.33333%;\n    max-width: 58.33333%; }\n  .col-xl-8 {\n    flex: 0 0 66.66667%;\n    max-width: 66.66667%; }\n  .col-xl-9 {\n    flex: 0 0 75%;\n    max-width: 75%; }\n  .col-xl-10 {\n    flex: 0 0 83.33333%;\n    max-width: 83.33333%; }\n  .col-xl-11 {\n    flex: 0 0 91.66667%;\n    max-width: 91.66667%; }\n  .col-xl-12 {\n    flex: 0 0 100%;\n    max-width: 100%; }\n  .order-xl-first {\n    order: -1; }\n  .order-xl-last {\n    order: 13; }\n  .order-xl-0 {\n    order: 0; }\n  .order-xl-1 {\n    order: 1; }\n  .order-xl-2 {\n    order: 2; }\n  .order-xl-3 {\n    order: 3; }\n  .order-xl-4 {\n    order: 4; }\n  .order-xl-5 {\n    order: 5; }\n  .order-xl-6 {\n    order: 6; }\n  .order-xl-7 {\n    order: 7; }\n  .order-xl-8 {\n    order: 8; }\n  .order-xl-9 {\n    order: 9; }\n  .order-xl-10 {\n    order: 10; }\n  .order-xl-11 {\n    order: 11; }\n  .order-xl-12 {\n    order: 12; }\n  .offset-xl-0 {\n    margin-left: 0; }\n  .offset-xl-1 {\n    margin-left: 8.33333%; }\n  .offset-xl-2 {\n    margin-left: 16.66667%; }\n  .offset-xl-3 {\n    margin-left: 25%; }\n  .offset-xl-4 {\n    margin-left: 33.33333%; }\n  .offset-xl-5 {\n    margin-left: 41.66667%; }\n  .offset-xl-6 {\n    margin-left: 50%; }\n  .offset-xl-7 {\n    margin-left: 58.33333%; }\n  .offset-xl-8 {\n    margin-left: 66.66667%; }\n  .offset-xl-9 {\n    margin-left: 75%; }\n  .offset-xl-10 {\n    margin-left: 83.33333%; }\n  .offset-xl-11 {\n    margin-left: 91.66667%; } }\n\n.d-none {\n  display: none !important; }\n\n.d-inline {\n  display: inline !important; }\n\n.d-inline-block {\n  display: inline-block !important; }\n\n.d-block {\n  display: block !important; }\n\n.d-table {\n  display: table !important; }\n\n.d-table-row {\n  display: table-row !important; }\n\n.d-table-cell {\n  display: table-cell !important; }\n\n.d-flex {\n  display: flex !important; }\n\n.d-inline-flex {\n  display: inline-flex !important; }\n\n@media (min-width: 576px) {\n  .d-sm-none {\n    display: none !important; }\n  .d-sm-inline {\n    display: inline !important; }\n  .d-sm-inline-block {\n    display: inline-block !important; }\n  .d-sm-block {\n    display: block !important; }\n  .d-sm-table {\n    display: table !important; }\n  .d-sm-table-row {\n    display: table-row !important; }\n  .d-sm-table-cell {\n    display: table-cell !important; }\n  .d-sm-flex {\n    display: flex !important; }\n  .d-sm-inline-flex {\n    display: inline-flex !important; } }\n\n@media (min-width: 768px) {\n  .d-md-none {\n    display: none !important; }\n  .d-md-inline {\n    display: inline !important; }\n  .d-md-inline-block {\n    display: inline-block !important; }\n  .d-md-block {\n    display: block !important; }\n  .d-md-table {\n    display: table !important; }\n  .d-md-table-row {\n    display: table-row !important; }\n  .d-md-table-cell {\n    display: table-cell !important; }\n  .d-md-flex {\n    display: flex !important; }\n  .d-md-inline-flex {\n    display: inline-flex !important; } }\n\n@media (min-width: 992px) {\n  .d-lg-none {\n    display: none !important; }\n  .d-lg-inline {\n    display: inline !important; }\n  .d-lg-inline-block {\n    display: inline-block !important; }\n  .d-lg-block {\n    display: block !important; }\n  .d-lg-table {\n    display: table !important; }\n  .d-lg-table-row {\n    display: table-row !important; }\n  .d-lg-table-cell {\n    display: table-cell !important; }\n  .d-lg-flex {\n    display: flex !important; }\n  .d-lg-inline-flex {\n    display: inline-flex !important; } }\n\n@media (min-width: 1200px) {\n  .d-xl-none {\n    display: none !important; }\n  .d-xl-inline {\n    display: inline !important; }\n  .d-xl-inline-block {\n    display: inline-block !important; }\n  .d-xl-block {\n    display: block !important; }\n  .d-xl-table {\n    display: table !important; }\n  .d-xl-table-row {\n    display: table-row !important; }\n  .d-xl-table-cell {\n    display: table-cell !important; }\n  .d-xl-flex {\n    display: flex !important; }\n  .d-xl-inline-flex {\n    display: inline-flex !important; } }\n\n@media print {\n  .d-print-none {\n    display: none !important; }\n  .d-print-inline {\n    display: inline !important; }\n  .d-print-inline-block {\n    display: inline-block !important; }\n  .d-print-block {\n    display: block !important; }\n  .d-print-table {\n    display: table !important; }\n  .d-print-table-row {\n    display: table-row !important; }\n  .d-print-table-cell {\n    display: table-cell !important; }\n  .d-print-flex {\n    display: flex !important; }\n  .d-print-inline-flex {\n    display: inline-flex !important; } }\n\n.flex-row {\n  flex-direction: row !important; }\n\n.flex-column {\n  flex-direction: column !important; }\n\n.flex-row-reverse {\n  flex-direction: row-reverse !important; }\n\n.flex-column-reverse {\n  flex-direction: column-reverse !important; }\n\n.flex-wrap {\n  flex-wrap: wrap !important; }\n\n.flex-nowrap {\n  flex-wrap: nowrap !important; }\n\n.flex-wrap-reverse {\n  flex-wrap: wrap-reverse !important; }\n\n.flex-fill {\n  flex: 1 1 auto !important; }\n\n.flex-grow-0 {\n  flex-grow: 0 !important; }\n\n.flex-grow-1 {\n  flex-grow: 1 !important; }\n\n.flex-shrink-0 {\n  flex-shrink: 0 !important; }\n\n.flex-shrink-1 {\n  flex-shrink: 1 !important; }\n\n.justify-content-start {\n  justify-content: flex-start !important; }\n\n.justify-content-end {\n  justify-content: flex-end !important; }\n\n.justify-content-center {\n  justify-content: center !important; }\n\n.justify-content-between {\n  justify-content: space-between !important; }\n\n.justify-content-around {\n  justify-content: space-around !important; }\n\n.align-items-start {\n  align-items: flex-start !important; }\n\n.align-items-end {\n  align-items: flex-end !important; }\n\n.align-items-center {\n  align-items: center !important; }\n\n.align-items-baseline {\n  align-items: baseline !important; }\n\n.align-items-stretch {\n  align-items: stretch !important; }\n\n.align-content-start {\n  align-content: flex-start !important; }\n\n.align-content-end {\n  align-content: flex-end !important; }\n\n.align-content-center {\n  align-content: center !important; }\n\n.align-content-between {\n  align-content: space-between !important; }\n\n.align-content-around {\n  align-content: space-around !important; }\n\n.align-content-stretch {\n  align-content: stretch !important; }\n\n.align-self-auto {\n  align-self: auto !important; }\n\n.align-self-start {\n  align-self: flex-start !important; }\n\n.align-self-end {\n  align-self: flex-end !important; }\n\n.align-self-center {\n  align-self: center !important; }\n\n.align-self-baseline {\n  align-self: baseline !important; }\n\n.align-self-stretch {\n  align-self: stretch !important; }\n\n@media (min-width: 576px) {\n  .flex-sm-row {\n    flex-direction: row !important; }\n  .flex-sm-column {\n    flex-direction: column !important; }\n  .flex-sm-row-reverse {\n    flex-direction: row-reverse !important; }\n  .flex-sm-column-reverse {\n    flex-direction: column-reverse !important; }\n  .flex-sm-wrap {\n    flex-wrap: wrap !important; }\n  .flex-sm-nowrap {\n    flex-wrap: nowrap !important; }\n  .flex-sm-wrap-reverse {\n    flex-wrap: wrap-reverse !important; }\n  .flex-sm-fill {\n    flex: 1 1 auto !important; }\n  .flex-sm-grow-0 {\n    flex-grow: 0 !important; }\n  .flex-sm-grow-1 {\n    flex-grow: 1 !important; }\n  .flex-sm-shrink-0 {\n    flex-shrink: 0 !important; }\n  .flex-sm-shrink-1 {\n    flex-shrink: 1 !important; }\n  .justify-content-sm-start {\n    justify-content: flex-start !important; }\n  .justify-content-sm-end {\n    justify-content: flex-end !important; }\n  .justify-content-sm-center {\n    justify-content: center !important; }\n  .justify-content-sm-between {\n    justify-content: space-between !important; }\n  .justify-content-sm-around {\n    justify-content: space-around !important; }\n  .align-items-sm-start {\n    align-items: flex-start !important; }\n  .align-items-sm-end {\n    align-items: flex-end !important; }\n  .align-items-sm-center {\n    align-items: center !important; }\n  .align-items-sm-baseline {\n    align-items: baseline !important; }\n  .align-items-sm-stretch {\n    align-items: stretch !important; }\n  .align-content-sm-start {\n    align-content: flex-start !important; }\n  .align-content-sm-end {\n    align-content: flex-end !important; }\n  .align-content-sm-center {\n    align-content: center !important; }\n  .align-content-sm-between {\n    align-content: space-between !important; }\n  .align-content-sm-around {\n    align-content: space-around !important; }\n  .align-content-sm-stretch {\n    align-content: stretch !important; }\n  .align-self-sm-auto {\n    align-self: auto !important; }\n  .align-self-sm-start {\n    align-self: flex-start !important; }\n  .align-self-sm-end {\n    align-self: flex-end !important; }\n  .align-self-sm-center {\n    align-self: center !important; }\n  .align-self-sm-baseline {\n    align-self: baseline !important; }\n  .align-self-sm-stretch {\n    align-self: stretch !important; } }\n\n@media (min-width: 768px) {\n  .flex-md-row {\n    flex-direction: row !important; }\n  .flex-md-column {\n    flex-direction: column !important; }\n  .flex-md-row-reverse {\n    flex-direction: row-reverse !important; }\n  .flex-md-column-reverse {\n    flex-direction: column-reverse !important; }\n  .flex-md-wrap {\n    flex-wrap: wrap !important; }\n  .flex-md-nowrap {\n    flex-wrap: nowrap !important; }\n  .flex-md-wrap-reverse {\n    flex-wrap: wrap-reverse !important; }\n  .flex-md-fill {\n    flex: 1 1 auto !important; }\n  .flex-md-grow-0 {\n    flex-grow: 0 !important; }\n  .flex-md-grow-1 {\n    flex-grow: 1 !important; }\n  .flex-md-shrink-0 {\n    flex-shrink: 0 !important; }\n  .flex-md-shrink-1 {\n    flex-shrink: 1 !important; }\n  .justify-content-md-start {\n    justify-content: flex-start !important; }\n  .justify-content-md-end {\n    justify-content: flex-end !important; }\n  .justify-content-md-center {\n    justify-content: center !important; }\n  .justify-content-md-between {\n    justify-content: space-between !important; }\n  .justify-content-md-around {\n    justify-content: space-around !important; }\n  .align-items-md-start {\n    align-items: flex-start !important; }\n  .align-items-md-end {\n    align-items: flex-end !important; }\n  .align-items-md-center {\n    align-items: center !important; }\n  .align-items-md-baseline {\n    align-items: baseline !important; }\n  .align-items-md-stretch {\n    align-items: stretch !important; }\n  .align-content-md-start {\n    align-content: flex-start !important; }\n  .align-content-md-end {\n    align-content: flex-end !important; }\n  .align-content-md-center {\n    align-content: center !important; }\n  .align-content-md-between {\n    align-content: space-between !important; }\n  .align-content-md-around {\n    align-content: space-around !important; }\n  .align-content-md-stretch {\n    align-content: stretch !important; }\n  .align-self-md-auto {\n    align-self: auto !important; }\n  .align-self-md-start {\n    align-self: flex-start !important; }\n  .align-self-md-end {\n    align-self: flex-end !important; }\n  .align-self-md-center {\n    align-self: center !important; }\n  .align-self-md-baseline {\n    align-self: baseline !important; }\n  .align-self-md-stretch {\n    align-self: stretch !important; } }\n\n@media (min-width: 992px) {\n  .flex-lg-row {\n    flex-direction: row !important; }\n  .flex-lg-column {\n    flex-direction: column !important; }\n  .flex-lg-row-reverse {\n    flex-direction: row-reverse !important; }\n  .flex-lg-column-reverse {\n    flex-direction: column-reverse !important; }\n  .flex-lg-wrap {\n    flex-wrap: wrap !important; }\n  .flex-lg-nowrap {\n    flex-wrap: nowrap !important; }\n  .flex-lg-wrap-reverse {\n    flex-wrap: wrap-reverse !important; }\n  .flex-lg-fill {\n    flex: 1 1 auto !important; }\n  .flex-lg-grow-0 {\n    flex-grow: 0 !important; }\n  .flex-lg-grow-1 {\n    flex-grow: 1 !important; }\n  .flex-lg-shrink-0 {\n    flex-shrink: 0 !important; }\n  .flex-lg-shrink-1 {\n    flex-shrink: 1 !important; }\n  .justify-content-lg-start {\n    justify-content: flex-start !important; }\n  .justify-content-lg-end {\n    justify-content: flex-end !important; }\n  .justify-content-lg-center {\n    justify-content: center !important; }\n  .justify-content-lg-between {\n    justify-content: space-between !important; }\n  .justify-content-lg-around {\n    justify-content: space-around !important; }\n  .align-items-lg-start {\n    align-items: flex-start !important; }\n  .align-items-lg-end {\n    align-items: flex-end !important; }\n  .align-items-lg-center {\n    align-items: center !important; }\n  .align-items-lg-baseline {\n    align-items: baseline !important; }\n  .align-items-lg-stretch {\n    align-items: stretch !important; }\n  .align-content-lg-start {\n    align-content: flex-start !important; }\n  .align-content-lg-end {\n    align-content: flex-end !important; }\n  .align-content-lg-center {\n    align-content: center !important; }\n  .align-content-lg-between {\n    align-content: space-between !important; }\n  .align-content-lg-around {\n    align-content: space-around !important; }\n  .align-content-lg-stretch {\n    align-content: stretch !important; }\n  .align-self-lg-auto {\n    align-self: auto !important; }\n  .align-self-lg-start {\n    align-self: flex-start !important; }\n  .align-self-lg-end {\n    align-self: flex-end !important; }\n  .align-self-lg-center {\n    align-self: center !important; }\n  .align-self-lg-baseline {\n    align-self: baseline !important; }\n  .align-self-lg-stretch {\n    align-self: stretch !important; } }\n\n@media (min-width: 1200px) {\n  .flex-xl-row {\n    flex-direction: row !important; }\n  .flex-xl-column {\n    flex-direction: column !important; }\n  .flex-xl-row-reverse {\n    flex-direction: row-reverse !important; }\n  .flex-xl-column-reverse {\n    flex-direction: column-reverse !important; }\n  .flex-xl-wrap {\n    flex-wrap: wrap !important; }\n  .flex-xl-nowrap {\n    flex-wrap: nowrap !important; }\n  .flex-xl-wrap-reverse {\n    flex-wrap: wrap-reverse !important; }\n  .flex-xl-fill {\n    flex: 1 1 auto !important; }\n  .flex-xl-grow-0 {\n    flex-grow: 0 !important; }\n  .flex-xl-grow-1 {\n    flex-grow: 1 !important; }\n  .flex-xl-shrink-0 {\n    flex-shrink: 0 !important; }\n  .flex-xl-shrink-1 {\n    flex-shrink: 1 !important; }\n  .justify-content-xl-start {\n    justify-content: flex-start !important; }\n  .justify-content-xl-end {\n    justify-content: flex-end !important; }\n  .justify-content-xl-center {\n    justify-content: center !important; }\n  .justify-content-xl-between {\n    justify-content: space-between !important; }\n  .justify-content-xl-around {\n    justify-content: space-around !important; }\n  .align-items-xl-start {\n    align-items: flex-start !important; }\n  .align-items-xl-end {\n    align-items: flex-end !important; }\n  .align-items-xl-center {\n    align-items: center !important; }\n  .align-items-xl-baseline {\n    align-items: baseline !important; }\n  .align-items-xl-stretch {\n    align-items: stretch !important; }\n  .align-content-xl-start {\n    align-content: flex-start !important; }\n  .align-content-xl-end {\n    align-content: flex-end !important; }\n  .align-content-xl-center {\n    align-content: center !important; }\n  .align-content-xl-between {\n    align-content: space-between !important; }\n  .align-content-xl-around {\n    align-content: space-around !important; }\n  .align-content-xl-stretch {\n    align-content: stretch !important; }\n  .align-self-xl-auto {\n    align-self: auto !important; }\n  .align-self-xl-start {\n    align-self: flex-start !important; }\n  .align-self-xl-end {\n    align-self: flex-end !important; }\n  .align-self-xl-center {\n    align-self: center !important; }\n  .align-self-xl-baseline {\n    align-self: baseline !important; }\n  .align-self-xl-stretch {\n    align-self: stretch !important; } }\n\n.btn {\n  display: inline-block;\n  font-weight: 400;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  border: 1px solid transparent;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; }\n  @media screen and (prefers-reduced-motion: reduce) {\n    .btn {\n      transition: none; } }\n  .btn:hover, .btn:focus {\n    text-decoration: none; }\n  .btn:focus, .btn.focus {\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\n  .btn.disabled, .btn:disabled {\n    opacity: 0.65; }\n  .btn:not(:disabled):not(.disabled) {\n    cursor: pointer; }\n\na.btn.disabled,\nfieldset:disabled a.btn {\n  pointer-events: none; }\n\n.btn-primary {\n  color: #fff;\n  background-color: #007bff;\n  border-color: #007bff; }\n  .btn-primary:hover {\n    color: #fff;\n    background-color: #0069d9;\n    border-color: #0062cc; }\n  .btn-primary:focus, .btn-primary.focus {\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\n  .btn-primary.disabled, .btn-primary:disabled {\n    color: #fff;\n    background-color: #007bff;\n    border-color: #007bff; }\n  .btn-primary:not(:disabled):not(.disabled):active, .btn-primary:not(:disabled):not(.disabled).active,\n  .show > .btn-primary.dropdown-toggle {\n    color: #fff;\n    background-color: #0062cc;\n    border-color: #005cbf; }\n    .btn-primary:not(:disabled):not(.disabled):active:focus, .btn-primary:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-primary.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\n\n.btn-secondary {\n  color: #fff;\n  background-color: #6c757d;\n  border-color: #6c757d; }\n  .btn-secondary:hover {\n    color: #fff;\n    background-color: #5a6268;\n    border-color: #545b62; }\n  .btn-secondary:focus, .btn-secondary.focus {\n    box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5); }\n  .btn-secondary.disabled, .btn-secondary:disabled {\n    color: #fff;\n    background-color: #6c757d;\n    border-color: #6c757d; }\n  .btn-secondary:not(:disabled):not(.disabled):active, .btn-secondary:not(:disabled):not(.disabled).active,\n  .show > .btn-secondary.dropdown-toggle {\n    color: #fff;\n    background-color: #545b62;\n    border-color: #4e555b; }\n    .btn-secondary:not(:disabled):not(.disabled):active:focus, .btn-secondary:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-secondary.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5); }\n\n.btn-success {\n  color: #fff;\n  background-color: #28a745;\n  border-color: #28a745; }\n  .btn-success:hover {\n    color: #fff;\n    background-color: #218838;\n    border-color: #1e7e34; }\n  .btn-success:focus, .btn-success.focus {\n    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\n  .btn-success.disabled, .btn-success:disabled {\n    color: #fff;\n    background-color: #28a745;\n    border-color: #28a745; }\n  .btn-success:not(:disabled):not(.disabled):active, .btn-success:not(:disabled):not(.disabled).active,\n  .show > .btn-success.dropdown-toggle {\n    color: #fff;\n    background-color: #1e7e34;\n    border-color: #1c7430; }\n    .btn-success:not(:disabled):not(.disabled):active:focus, .btn-success:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-success.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\n\n.btn-info {\n  color: #fff;\n  background-color: #17a2b8;\n  border-color: #17a2b8; }\n  .btn-info:hover {\n    color: #fff;\n    background-color: #138496;\n    border-color: #117a8b; }\n  .btn-info:focus, .btn-info.focus {\n    box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\n  .btn-info.disabled, .btn-info:disabled {\n    color: #fff;\n    background-color: #17a2b8;\n    border-color: #17a2b8; }\n  .btn-info:not(:disabled):not(.disabled):active, .btn-info:not(:disabled):not(.disabled).active,\n  .show > .btn-info.dropdown-toggle {\n    color: #fff;\n    background-color: #117a8b;\n    border-color: #10707f; }\n    .btn-info:not(:disabled):not(.disabled):active:focus, .btn-info:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-info.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\n\n.btn-warning {\n  color: #212529;\n  background-color: #ffc107;\n  border-color: #ffc107; }\n  .btn-warning:hover {\n    color: #212529;\n    background-color: #e0a800;\n    border-color: #d39e00; }\n  .btn-warning:focus, .btn-warning.focus {\n    box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\n  .btn-warning.disabled, .btn-warning:disabled {\n    color: #212529;\n    background-color: #ffc107;\n    border-color: #ffc107; }\n  .btn-warning:not(:disabled):not(.disabled):active, .btn-warning:not(:disabled):not(.disabled).active,\n  .show > .btn-warning.dropdown-toggle {\n    color: #212529;\n    background-color: #d39e00;\n    border-color: #c69500; }\n    .btn-warning:not(:disabled):not(.disabled):active:focus, .btn-warning:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-warning.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\n\n.btn-danger {\n  color: #fff;\n  background-color: #dc3545;\n  border-color: #dc3545; }\n  .btn-danger:hover {\n    color: #fff;\n    background-color: #c82333;\n    border-color: #bd2130; }\n  .btn-danger:focus, .btn-danger.focus {\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\n  .btn-danger.disabled, .btn-danger:disabled {\n    color: #fff;\n    background-color: #dc3545;\n    border-color: #dc3545; }\n  .btn-danger:not(:disabled):not(.disabled):active, .btn-danger:not(:disabled):not(.disabled).active,\n  .show > .btn-danger.dropdown-toggle {\n    color: #fff;\n    background-color: #bd2130;\n    border-color: #b21f2d; }\n    .btn-danger:not(:disabled):not(.disabled):active:focus, .btn-danger:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-danger.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\n\n.btn-light {\n  color: #212529;\n  background-color: #f8f9fa;\n  border-color: #f8f9fa; }\n  .btn-light:hover {\n    color: #212529;\n    background-color: #e2e6ea;\n    border-color: #dae0e5; }\n  .btn-light:focus, .btn-light.focus {\n    box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\n  .btn-light.disabled, .btn-light:disabled {\n    color: #212529;\n    background-color: #f8f9fa;\n    border-color: #f8f9fa; }\n  .btn-light:not(:disabled):not(.disabled):active, .btn-light:not(:disabled):not(.disabled).active,\n  .show > .btn-light.dropdown-toggle {\n    color: #212529;\n    background-color: #dae0e5;\n    border-color: #d3d9df; }\n    .btn-light:not(:disabled):not(.disabled):active:focus, .btn-light:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-light.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\n\n.btn-dark {\n  color: #fff;\n  background-color: #343a40;\n  border-color: #343a40; }\n  .btn-dark:hover {\n    color: #fff;\n    background-color: #23272b;\n    border-color: #1d2124; }\n  .btn-dark:focus, .btn-dark.focus {\n    box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\n  .btn-dark.disabled, .btn-dark:disabled {\n    color: #fff;\n    background-color: #343a40;\n    border-color: #343a40; }\n  .btn-dark:not(:disabled):not(.disabled):active, .btn-dark:not(:disabled):not(.disabled).active,\n  .show > .btn-dark.dropdown-toggle {\n    color: #fff;\n    background-color: #1d2124;\n    border-color: #171a1d; }\n    .btn-dark:not(:disabled):not(.disabled):active:focus, .btn-dark:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-dark.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\n\n.btn-outline-primary {\n  color: #007bff;\n  background-color: transparent;\n  background-image: none;\n  border-color: #007bff; }\n  .btn-outline-primary:hover {\n    color: #fff;\n    background-color: #007bff;\n    border-color: #007bff; }\n  .btn-outline-primary:focus, .btn-outline-primary.focus {\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\n  .btn-outline-primary.disabled, .btn-outline-primary:disabled {\n    color: #007bff;\n    background-color: transparent; }\n  .btn-outline-primary:not(:disabled):not(.disabled):active, .btn-outline-primary:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-primary.dropdown-toggle {\n    color: #fff;\n    background-color: #007bff;\n    border-color: #007bff; }\n    .btn-outline-primary:not(:disabled):not(.disabled):active:focus, .btn-outline-primary:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-primary.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\n\n.btn-outline-secondary {\n  color: #6c757d;\n  background-color: transparent;\n  background-image: none;\n  border-color: #6c757d; }\n  .btn-outline-secondary:hover {\n    color: #fff;\n    background-color: #6c757d;\n    border-color: #6c757d; }\n  .btn-outline-secondary:focus, .btn-outline-secondary.focus {\n    box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5); }\n  .btn-outline-secondary.disabled, .btn-outline-secondary:disabled {\n    color: #6c757d;\n    background-color: transparent; }\n  .btn-outline-secondary:not(:disabled):not(.disabled):active, .btn-outline-secondary:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-secondary.dropdown-toggle {\n    color: #fff;\n    background-color: #6c757d;\n    border-color: #6c757d; }\n    .btn-outline-secondary:not(:disabled):not(.disabled):active:focus, .btn-outline-secondary:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-secondary.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5); }\n\n.btn-outline-success {\n  color: #28a745;\n  background-color: transparent;\n  background-image: none;\n  border-color: #28a745; }\n  .btn-outline-success:hover {\n    color: #fff;\n    background-color: #28a745;\n    border-color: #28a745; }\n  .btn-outline-success:focus, .btn-outline-success.focus {\n    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\n  .btn-outline-success.disabled, .btn-outline-success:disabled {\n    color: #28a745;\n    background-color: transparent; }\n  .btn-outline-success:not(:disabled):not(.disabled):active, .btn-outline-success:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-success.dropdown-toggle {\n    color: #fff;\n    background-color: #28a745;\n    border-color: #28a745; }\n    .btn-outline-success:not(:disabled):not(.disabled):active:focus, .btn-outline-success:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-success.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\n\n.btn-outline-info {\n  color: #17a2b8;\n  background-color: transparent;\n  background-image: none;\n  border-color: #17a2b8; }\n  .btn-outline-info:hover {\n    color: #fff;\n    background-color: #17a2b8;\n    border-color: #17a2b8; }\n  .btn-outline-info:focus, .btn-outline-info.focus {\n    box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\n  .btn-outline-info.disabled, .btn-outline-info:disabled {\n    color: #17a2b8;\n    background-color: transparent; }\n  .btn-outline-info:not(:disabled):not(.disabled):active, .btn-outline-info:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-info.dropdown-toggle {\n    color: #fff;\n    background-color: #17a2b8;\n    border-color: #17a2b8; }\n    .btn-outline-info:not(:disabled):not(.disabled):active:focus, .btn-outline-info:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-info.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\n\n.btn-outline-warning {\n  color: #ffc107;\n  background-color: transparent;\n  background-image: none;\n  border-color: #ffc107; }\n  .btn-outline-warning:hover {\n    color: #212529;\n    background-color: #ffc107;\n    border-color: #ffc107; }\n  .btn-outline-warning:focus, .btn-outline-warning.focus {\n    box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\n  .btn-outline-warning.disabled, .btn-outline-warning:disabled {\n    color: #ffc107;\n    background-color: transparent; }\n  .btn-outline-warning:not(:disabled):not(.disabled):active, .btn-outline-warning:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-warning.dropdown-toggle {\n    color: #212529;\n    background-color: #ffc107;\n    border-color: #ffc107; }\n    .btn-outline-warning:not(:disabled):not(.disabled):active:focus, .btn-outline-warning:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-warning.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\n\n.btn-outline-danger {\n  color: #dc3545;\n  background-color: transparent;\n  background-image: none;\n  border-color: #dc3545; }\n  .btn-outline-danger:hover {\n    color: #fff;\n    background-color: #dc3545;\n    border-color: #dc3545; }\n  .btn-outline-danger:focus, .btn-outline-danger.focus {\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\n  .btn-outline-danger.disabled, .btn-outline-danger:disabled {\n    color: #dc3545;\n    background-color: transparent; }\n  .btn-outline-danger:not(:disabled):not(.disabled):active, .btn-outline-danger:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-danger.dropdown-toggle {\n    color: #fff;\n    background-color: #dc3545;\n    border-color: #dc3545; }\n    .btn-outline-danger:not(:disabled):not(.disabled):active:focus, .btn-outline-danger:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-danger.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\n\n.btn-outline-light {\n  color: #f8f9fa;\n  background-color: transparent;\n  background-image: none;\n  border-color: #f8f9fa; }\n  .btn-outline-light:hover {\n    color: #212529;\n    background-color: #f8f9fa;\n    border-color: #f8f9fa; }\n  .btn-outline-light:focus, .btn-outline-light.focus {\n    box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\n  .btn-outline-light.disabled, .btn-outline-light:disabled {\n    color: #f8f9fa;\n    background-color: transparent; }\n  .btn-outline-light:not(:disabled):not(.disabled):active, .btn-outline-light:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-light.dropdown-toggle {\n    color: #212529;\n    background-color: #f8f9fa;\n    border-color: #f8f9fa; }\n    .btn-outline-light:not(:disabled):not(.disabled):active:focus, .btn-outline-light:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-light.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\n\n.btn-outline-dark {\n  color: #343a40;\n  background-color: transparent;\n  background-image: none;\n  border-color: #343a40; }\n  .btn-outline-dark:hover {\n    color: #fff;\n    background-color: #343a40;\n    border-color: #343a40; }\n  .btn-outline-dark:focus, .btn-outline-dark.focus {\n    box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\n  .btn-outline-dark.disabled, .btn-outline-dark:disabled {\n    color: #343a40;\n    background-color: transparent; }\n  .btn-outline-dark:not(:disabled):not(.disabled):active, .btn-outline-dark:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-dark.dropdown-toggle {\n    color: #fff;\n    background-color: #343a40;\n    border-color: #343a40; }\n    .btn-outline-dark:not(:disabled):not(.disabled):active:focus, .btn-outline-dark:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-dark.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\n\n.btn-link {\n  font-weight: 400;\n  color: #007bff;\n  background-color: transparent; }\n  .btn-link:hover {\n    color: #0056b3;\n    text-decoration: underline;\n    background-color: transparent;\n    border-color: transparent; }\n  .btn-link:focus, .btn-link.focus {\n    text-decoration: underline;\n    border-color: transparent;\n    box-shadow: none; }\n  .btn-link:disabled, .btn-link.disabled {\n    color: #6c757d;\n    pointer-events: none; }\n\n.btn-lg {\n  padding: 0.5rem 1rem;\n  font-size: 1.25rem;\n  line-height: 1.5;\n  border-radius: 0.3rem; }\n\n.btn-sm {\n  padding: 0.25rem 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  border-radius: 0.2rem; }\n\n.btn-block {\n  display: block;\n  width: 100%; }\n  .btn-block + .btn-block {\n    margin-top: 0.5rem; }\n\ninput[type="submit"].btn-block,\ninput[type="reset"].btn-block,\ninput[type="button"].btn-block {\n  width: 100%; }\n',""])},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(36),o=t(6),i=t(39),a=t(40),l=t(41),s=t(42),c=t(10),d=t(0);e.Chessground=function(n,e){var t=i.defaults();function f(){var e=t.dom&&t.dom.unbind;n.classList.add("cg-board-wrap");var r=d.memo(function(){return n.getBoundingClientRect()}),o=t.viewOnly&&!t.drawable.visible,i=a.default(n,t,o?void 0:r()),u=function(n){s.default(t),!n&&i.svg&&c.renderSvg(t,i.svg)};t.dom={elements:i,bounds:r,redraw:function(n){var e=!1;return function(){e||(e=!0,d.raf(function(){n(),e=!1}))}}(u),redrawNow:u,unbind:e,relative:o},t.drawable.prevSvgHash="",u(!1),l.bindBoard(t),e||(t.dom.unbind=l.bindDocument(t,f))}return o.configure(t,e||{}),f(),r.start(t,f)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(3),o=t(5),i=t(6),a=t(7),l=t(8),s=t(38);e.start=function(n,e){function t(){r.toggleOrientation(n),e()}return{set:function(e){e.orientation&&e.orientation!==n.orientation&&t(),(e.fen?a.anim:a.render)(function(n){return i.configure(n,e)},n)},state:n,getFen:function(){return o.write(n.pieces)},toggleOrientation:t,setPieces:function(e){a.anim(function(n){return r.setPieces(n,e)},n)},selectSquare:function(e,t){e?a.anim(function(n){return r.selectSquare(n,e,t)},n):n.selected&&(r.unselect(n),n.dom.redraw())},move:function(e,t){a.anim(function(n){return r.baseMove(n,e,t)},n)},newPiece:function(e,t){a.anim(function(n){return r.baseNewPiece(n,e,t)},n)},playPremove:function(){if(n.premovable.current){if(a.anim(r.playPremove,n))return!0;n.dom.redraw()}return!1},playPredrop:function(e){if(n.predroppable.current){var t=r.playPredrop(n,e);return n.dom.redraw(),t}return!1},cancelPremove:function(){a.render(r.unsetPremove,n)},cancelPredrop:function(){a.render(r.unsetPredrop,n)},cancelMove:function(){a.render(function(n){r.cancelMove(n),l.cancel(n)},n)},stop:function(){a.render(function(n){r.stop(n),l.cancel(n)},n)},explode:function(e){s.default(n,e)},setAutoShapes:function(e){a.render(function(n){return n.drawable.autoShapes=e},n)},setShapes:function(e){a.render(function(n){return n.drawable.shapes=e},n)},getKeyAtDomPos:function(e){return r.getKeyAtDomPos(e,"white"===n.orientation,n.dom.bounds())},redrawAll:e,dragNewPiece:function(e,t,r){l.dragNewPiece(n,e,t,r)},destroy:function(){r.stop(n),n.dom.unbind&&n.dom.unbind(),n.dom.destroyed=!0}}}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(0);function o(n,e){return Math.abs(n-e)}var i=function(n,e,t,r){var i=o(n,t),a=o(e,r);return 1===i&&2===a||2===i&&1===a},a=function(n,e,t,r){return o(n,t)===o(e,r)},l=function(n,e,t,r){return n===t||e===r},s=function(n,e,t,r){return a(n,e,t,r)||l(n,e,t,r)};e.default=function(n,e,t){var c,d=n[e],f=r.key2pos(e);switch(d.role){case"pawn":c=function(n){return function(e,t,r,i){return o(e,r)<2&&("white"===n?i===t+1||t<=2&&i===t+2&&e===r:i===t-1||t>=7&&i===t-2&&e===r)}}(d.color);break;case"knight":c=i;break;case"bishop":c=a;break;case"rook":c=l;break;case"queen":c=s;break;case"king":c=function(n,e,t){return function(i,a,l,s){return o(i,l)<2&&o(a,s)<2||t&&a===s&&a===("white"===n?1:8)&&(5===i&&(3===l||7===l)||r.containsX(e,l))}}(d.color,function(n,e){var t;return Object.keys(n).filter(function(r){return(t=n[r])&&t.color===e&&"rook"===t.role}).map(function(n){return r.key2pos(n)[0]})}(n,d.color),t)}return r.allKeys.map(r.key2pos).filter(function(n){return(f[0]!==n[0]||f[1]!==n[1])&&c(f[0],f[1],n[0],n[1])}).map(r.pos2key)}},function(n,e,t){"use strict";function r(n,e){n.exploding&&(e?n.exploding.stage=e:n.exploding=void 0,n.dom.redraw())}Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n,e){n.exploding={stage:1,keys:e},n.dom.redraw(),setTimeout(function(){r(n,2),setTimeout(function(){return r(n,void 0)},120)},120)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(5),o=t(0);e.defaults=function(){return{pieces:r.read(r.initial),orientation:"white",turnColor:"white",coordinates:!0,autoCastle:!0,viewOnly:!1,disableContextMenu:!1,resizable:!0,addPieceZIndex:!1,pieceKey:!1,highlight:{lastMove:!0,check:!0},animation:{enabled:!0,duration:200},movable:{free:!0,color:"both",showDests:!0,events:{},rookCastle:!0},premovable:{enabled:!0,showDests:!0,castle:!0,events:{}},predroppable:{enabled:!1,events:{}},draggable:{enabled:!0,distance:3,autoDistance:!0,centerPiece:!0,showGhost:!0,deleteOnDropOff:!1},selectable:{enabled:!0},stats:{dragged:!("ontouchstart"in window)},events:{},drawable:{enabled:!0,visible:!0,eraseOnClick:!0,shapes:[],autoShapes:[],brushes:{green:{key:"g",color:"#15781B",opacity:1,lineWidth:10},red:{key:"r",color:"#882020",opacity:1,lineWidth:10},blue:{key:"b",color:"#003088",opacity:1,lineWidth:10},yellow:{key:"y",color:"#e68f00",opacity:1,lineWidth:10},paleBlue:{key:"pb",color:"#003088",opacity:.4,lineWidth:15},paleGreen:{key:"pg",color:"#15781B",opacity:.4,lineWidth:15},paleRed:{key:"pr",color:"#882020",opacity:.4,lineWidth:15},paleGrey:{key:"pgr",color:"#4a4a4a",opacity:.35,lineWidth:15}},pieces:{baseUrl:"https://lichess1.org/assets/piece/cburnett/"},prevSvgHash:""},hold:o.timer()}}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(0),o=t(4),i=t(10);function a(n,e){var t,o=r.createEl("coords",e);for(var i in n)(t=r.createEl("coord")).textContent=n[i],o.appendChild(t);return o}e.default=function(n,e,t){n.innerHTML="",n.classList.add("cg-board-wrap"),r.colors.forEach(function(t){n.classList.toggle("orientation-"+t,e.orientation===t)}),n.classList.toggle("manipulable",!e.viewOnly);var l,s,c=r.createEl("div","cg-board");if(n.appendChild(c),e.drawable.visible&&t&&((l=i.createElement("svg")).appendChild(i.createElement("defs")),n.appendChild(l)),e.coordinates){var d="black"===e.orientation?" black":"";n.appendChild(a(o.ranks,"ranks"+d)),n.appendChild(a(o.files,"files"+d))}return t&&e.draggable.showGhost&&(s=r.createEl("piece","ghost"),r.setVisible(s,!1),n.appendChild(s)),{board:c,ghost:s,svg:l}}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(8),o=t(9),i=t(0);function a(n,e,t,r){return n.addEventListener(e,t,r),function(){return n.removeEventListener(e,t)}}function l(n,e,t){return function(r){r.shiftKey||i.isRightButton(r)?n.drawable.enabled&&t(n,r):n.viewOnly||e(n,r)}}e.bindBoard=function(n){if(!n.viewOnly){var e=n.dom.elements.board,t=function(n){return function(e){n.draggable.current?r.cancel(n):n.drawable.current?o.cancel(n):e.shiftKey||i.isRightButton(e)?n.drawable.enabled&&o.start(n,e):n.viewOnly||r.start(n,e)}}(n);e.addEventListener("touchstart",t),e.addEventListener("mousedown",t),(n.disableContextMenu||n.drawable.enabled)&&e.addEventListener("contextmenu",function(n){return n.preventDefault()})}},e.bindDocument=function(n,e){var t=[];!n.dom.relative&&n.resizable&&t.push(a(document.body,"chessground.resize",function(){n.dom.bounds.clear(),i.raf(e)}));if(!n.viewOnly){var s=l(n,r.move,o.move),c=l(n,r.end,o.end);["touchmove","mousemove"].forEach(function(n){return t.push(a(document,n,s))}),["touchend","mouseup"].forEach(function(n){return t.push(a(document,n,c))});var d=function(){return n.dom.bounds.clear()};t.push(a(window,"scroll",d,{passive:!0})),t.push(a(window,"resize",d,{passive:!0}))}return function(){return t.forEach(function(n){return n()})}}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t(0),o=t(0);function i(n){return"PIECE"===n.tagName}function a(n){return"SQUARE"===n.tagName}function l(n,e){for(var t in e)n.dom.elements.board.removeChild(e[t])}function s(n,e){var t=2+8*(n[1]-1)+(8-n[0]);return e&&(t=67-t),t+""}function c(n){return n.color+" "+n.role}function d(n,e,t){n[e]?n[e]+=" "+t:n[e]=t}e.default=function(n){var e,t,f,u,p,b,g,m,h,v,w,x="white"===n.orientation,y=n.dom.relative?o.posToTranslateRel:o.posToTranslateAbs(n.dom.bounds()),k=n.dom.relative?o.translateRel:o.translateAbs,E=n.dom.elements.board,P=n.pieces,C=n.animation.current,S=C?C.plan.anims:{},_=C?C.plan.fadings:{},j=n.draggable.current,A=function(n){var e,t,r={};if(n.lastMove&&n.highlight.lastMove)for(e in n.lastMove)d(r,n.lastMove[e],"last-move");if(n.check&&n.highlight.check&&d(r,n.check,"check"),n.selected&&(d(r,n.selected,"selected"),n.movable.showDests)){var o=n.movable.dests&&n.movable.dests[n.selected];if(o)for(e in o)t=o[e],d(r,t,"move-dest"+(n.pieces[t]?" oc":""));var i=n.premovable.dests;if(i)for(e in i)t=i[e],d(r,t,"premove-dest"+(n.pieces[t]?" oc":""))}var a=n.premovable.current;if(a)for(e in a)d(r,a[e],"current-premove");else n.predroppable.current&&d(r,n.predroppable.current.key,"current-premove");var l=n.exploding;if(l)for(e in l.keys)d(r,l.keys[e],"exploding"+l.stage);return r}(n),O={},T={},L={},M={},I=Object.keys(P);for(f=E.firstChild;f;){if(e=f.cgKey,i(f))u=P[e],b=S[e],g=_[e],p=f.cgPiece,!f.cgDragging||j&&j.orig===e||(f.classList.remove("dragging"),k(f,y(r.key2pos(e),x)),f.cgDragging=!1),!g&&f.cgFading&&(f.cgFading=!1,f.classList.remove("fading")),u?(b&&f.cgAnimating&&p===c(u)?((U=r.key2pos(e))[0]+=b[2],U[1]+=b[3],f.classList.add("anim"),k(f,y(U,x))):f.cgAnimating&&(f.cgAnimating=!1,f.classList.remove("anim"),k(f,y(r.key2pos(e),x)),n.addPieceZIndex&&(f.style.zIndex=s(r.key2pos(e),x))),p!==c(u)||g&&f.cgFading?g&&p===c(g)?(f.classList.add("fading"),f.cgFading=!0):L[p]?L[p].push(f):L[p]=[f]:O[e]=!0):L[p]?L[p].push(f):L[p]=[f];else if(a(f)){var R=f.className;A[e]===R?T[e]=!0:M[R]?M[R].push(f):M[R]=[f]}f=f.nextSibling}for(var q in A)if(!T[q]){w=(v=M[A[q]])&&v.pop();var N=y(r.key2pos(q),x);if(w)w.cgKey=q,k(w,N);else{var D=r.createEl("square",A[q]);D.cgKey=q,k(D,N),E.insertBefore(D,E.firstChild)}}for(var K in I)if(t=P[e=I[K]],b=S[e],!O[e])if(h=(m=L[c(t)])&&m.pop()){h.cgKey=e,h.cgFading&&(h.classList.remove("fading"),h.cgFading=!1);var U=r.key2pos(e);n.addPieceZIndex&&(h.style.zIndex=s(U,x)),b&&(h.cgAnimating=!0,h.classList.add("anim"),U[0]+=b[2],U[1]+=b[3]),k(h,y(U,x))}else{var B=c(t),Q=r.createEl("piece",B);U=r.key2pos(e),Q.cgPiece=B,Q.cgKey=e,b&&(Q.cgAnimating=!0,U[0]+=b[2],U[1]+=b[3]),k(Q,y(U,x)),n.addPieceZIndex&&(Q.style.zIndex=s(U,x)),E.appendChild(Q)}for(var z in L)l(n,L[z]);for(var z in M)l(n,M[z])}},function(n,e,t){var r,o=function(n){var e="b",t="w",r=-1,o="p",i="n",a="b",l="r",s="q",c="k",d="pnbrqkPNBRQK",f="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",u=["1-0","0-1","1/2-1/2","*"],p={b:[16,32,17,15],w:[-16,-32,-17,-15]},b={n:[-18,-33,-31,-14,18,33,31,14],b:[-17,-15,17,15],r:[-16,1,16,-1],q:[-17,-16,-15,1,17,16,15,-1],k:[-17,-16,-15,1,17,16,15,-1]},g=[20,0,0,0,0,0,0,24,0,0,0,0,0,0,20,0,0,20,0,0,0,0,0,24,0,0,0,0,0,20,0,0,0,0,20,0,0,0,0,24,0,0,0,0,20,0,0,0,0,0,0,20,0,0,0,24,0,0,0,20,0,0,0,0,0,0,0,0,20,0,0,24,0,0,20,0,0,0,0,0,0,0,0,0,0,20,2,24,2,20,0,0,0,0,0,0,0,0,0,0,0,2,53,56,53,2,0,0,0,0,0,0,24,24,24,24,24,24,56,0,56,24,24,24,24,24,24,0,0,0,0,0,0,2,53,56,53,2,0,0,0,0,0,0,0,0,0,0,0,20,2,24,2,20,0,0,0,0,0,0,0,0,0,0,20,0,0,24,0,0,20,0,0,0,0,0,0,0,0,20,0,0,0,24,0,0,0,20,0,0,0,0,0,0,20,0,0,0,0,24,0,0,0,0,20,0,0,0,0,20,0,0,0,0,0,24,0,0,0,0,0,20,0,0,20,0,0,0,0,0,0,24,0,0,0,0,0,0,20],m=[17,0,0,0,0,0,0,16,0,0,0,0,0,0,15,0,0,17,0,0,0,0,0,16,0,0,0,0,0,15,0,0,0,0,17,0,0,0,0,16,0,0,0,0,15,0,0,0,0,0,0,17,0,0,0,16,0,0,0,15,0,0,0,0,0,0,0,0,17,0,0,16,0,0,15,0,0,0,0,0,0,0,0,0,0,17,0,16,0,15,0,0,0,0,0,0,0,0,0,0,0,0,17,16,15,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-15,-16,-17,0,0,0,0,0,0,0,0,0,0,0,0,-15,0,-16,0,-17,0,0,0,0,0,0,0,0,0,0,-15,0,0,-16,0,0,-17,0,0,0,0,0,0,0,0,-15,0,0,0,-16,0,0,0,-17,0,0,0,0,0,0,-15,0,0,0,0,-16,0,0,0,0,-17,0,0,0,0,-15,0,0,0,0,0,-16,0,0,0,0,0,-17,0,0,-15,0,0,0,0,0,0,-16,0,0,0,0,0,0,-17],h={p:0,n:1,b:2,r:3,q:4,k:5},v={NORMAL:"n",CAPTURE:"c",BIG_PAWN:"b",EP_CAPTURE:"e",PROMOTION:"p",KSIDE_CASTLE:"k",QSIDE_CASTLE:"q"},w={NORMAL:1,CAPTURE:2,BIG_PAWN:4,EP_CAPTURE:8,PROMOTION:16,KSIDE_CASTLE:32,QSIDE_CASTLE:64},x=7,y=6,k=1,E=0,P={a8:0,b8:1,c8:2,d8:3,e8:4,f8:5,g8:6,h8:7,a7:16,b7:17,c7:18,d7:19,e7:20,f7:21,g7:22,h7:23,a6:32,b6:33,c6:34,d6:35,e6:36,f6:37,g6:38,h6:39,a5:48,b5:49,c5:50,d5:51,e5:52,f5:53,g5:54,h5:55,a4:64,b4:65,c4:66,d4:67,e4:68,f4:69,g4:70,h4:71,a3:80,b3:81,c3:82,d3:83,e3:84,f3:85,g3:86,h3:87,a2:96,b2:97,c2:98,d2:99,e2:100,f2:101,g2:102,h2:103,a1:112,b1:113,c1:114,d1:115,e1:116,f1:117,g1:118,h1:119},C={w:[{square:P.a1,flag:w.QSIDE_CASTLE},{square:P.h1,flag:w.KSIDE_CASTLE}],b:[{square:P.a8,flag:w.QSIDE_CASTLE},{square:P.h8,flag:w.KSIDE_CASTLE}]},S=new Array(128),_={w:r,b:r},j=t,A={w:0,b:0},O=r,T=0,L=1,M=[],I={};function R(){S=new Array(128),_={w:r,b:r},j=t,A={w:0,b:0},O=r,T=0,L=1,M=[],I={},B(K())}function q(){N(f)}function N(n){var o=n.split(/\s+/),i=o[0],a=0;if(!D(n).valid)return!1;R();for(var l=0;l<i.length;l++){var s=i.charAt(l);if("/"===s)a+=8;else if(cn(s))a+=parseInt(s,10);else{var c=s<"a"?t:e;z({type:s.toLowerCase(),color:c},ln(a)),a++}}return j=o[1],o[2].indexOf("K")>-1&&(A.w|=w.KSIDE_CASTLE),o[2].indexOf("Q")>-1&&(A.w|=w.QSIDE_CASTLE),o[2].indexOf("k")>-1&&(A.b|=w.KSIDE_CASTLE),o[2].indexOf("q")>-1&&(A.b|=w.QSIDE_CASTLE),O="-"===o[3]?r:P[o[3]],T=parseInt(o[4],10),L=parseInt(o[5],10),B(K()),!0}function D(n){var e="No errors.",t="FEN string must contain six space-delimited fields.",r="6th field (move number) must be a positive integer.",o="5th field (half move counter) must be a non-negative integer.",i="4th field (en-passant square) is invalid.",a="3rd field (castling availability) is invalid.",l="2nd field (side to move) is invalid.",s="1st field (piece positions) does not contain 8 '/'-delimited rows.",c="1st field (piece positions) is invalid [consecutive numbers].",d="1st field (piece positions) is invalid [invalid piece].",f="1st field (piece positions) is invalid [row too large].",u="Illegal en-passant square",p=n.split(/\s+/);if(6!==p.length)return{valid:!1,error_number:1,error:t};if(isNaN(p[5])||parseInt(p[5],10)<=0)return{valid:!1,error_number:2,error:r};if(isNaN(p[4])||parseInt(p[4],10)<0)return{valid:!1,error_number:3,error:o};if(!/^(-|[abcdefgh][36])$/.test(p[3]))return{valid:!1,error_number:4,error:i};if(!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(p[2]))return{valid:!1,error_number:5,error:a};if(!/^(w|b)$/.test(p[1]))return{valid:!1,error_number:6,error:l};var b=p[0].split("/");if(8!==b.length)return{valid:!1,error_number:7,error:s};for(var g=0;g<b.length;g++){for(var m=0,h=!1,v=0;v<b[g].length;v++)if(isNaN(b[g][v])){if(!/^[prnbqkPRNBQK]$/.test(b[g][v]))return{valid:!1,error_number:9,error:d};m+=1,h=!1}else{if(h)return{valid:!1,error_number:8,error:c};m+=parseInt(b[g][v],10),h=!0}if(8!==m)return{valid:!1,error_number:10,error:f}}return"3"==p[3][1]&&"w"==p[1]||"6"==p[3][1]&&"b"==p[1]?{valid:!1,error_number:11,error:u}:{valid:!0,error_number:0,error:e}}function K(){for(var n=0,o="",i=P.a8;i<=P.h1;i++){if(null==S[i])n++;else{n>0&&(o+=n,n=0);var a=S[i].color,l=S[i].type;o+=a===t?l.toUpperCase():l.toLowerCase()}i+1&136&&(n>0&&(o+=n),i!==P.h1&&(o+="/"),n=0,i+=8)}var s="";A[t]&w.KSIDE_CASTLE&&(s+="K"),A[t]&w.QSIDE_CASTLE&&(s+="Q"),A[e]&w.KSIDE_CASTLE&&(s+="k"),A[e]&w.QSIDE_CASTLE&&(s+="q"),s=s||"-";var c=O===r?"-":ln(O);return[o,j,s,c,T,L].join(" ")}function U(n){for(var e=0;e<n.length;e+=2)"string"==typeof n[e]&&"string"==typeof n[e+1]&&(I[n[e]]=n[e+1]);return I}function B(n){M.length>0||(n!==f?(I.SetUp="1",I.FEN=n):(delete I.SetUp,delete I.FEN))}function Q(n){var e=S[P[n]];return e?{type:e.type,color:e.color}:null}function z(n,e){if(!("type"in n&&"color"in n))return!1;if(-1===d.indexOf(n.type.toLowerCase()))return!1;if(!(e in P))return!1;var t=P[e];return(n.type!=c||_[n.color]==r||_[n.color]==t)&&(S[t]={type:n.type,color:n.color},n.type===c&&(_[n.color]=t),B(K()),!0)}function W(n,e,t,r,i){var a={color:j,from:e,to:t,flags:r,piece:n[e].type};return i&&(a.flags|=w.PROMOTION,a.promotion=i),n[t]?a.captured=n[t].type:r&w.EP_CAPTURE&&(a.captured=o),a}function F(n){function e(n,e,t,r,c){if(n[t].type!==o||on(r)!==E&&on(r)!==x)e.push(W(n,t,r,c));else for(var d=[s,l,a,i],f=0,u=d.length;f<u;f++)e.push(W(n,t,r,c,d[f]))}var t=[],r=j,c=sn(r),d={b:k,w:y},f=P.a8,u=P.h1,g=!1,m=!(void 0!==n&&"legal"in n)||n.legal;if(void 0!==n&&"square"in n){if(!(n.square in P))return[];f=u=P[n.square],g=!0}for(var h=f;h<=u;h++)if(136&h)h+=7;else{var v=S[h];if(null!=v&&v.color===r)if(v.type===o){var C=h+p[r][0];if(null==S[C]){e(S,t,h,C,w.NORMAL);C=h+p[r][1];d[r]===on(h)&&null==S[C]&&e(S,t,h,C,w.BIG_PAWN)}for(T=2;T<4;T++){136&(C=h+p[r][T])||(null!=S[C]&&S[C].color===c?e(S,t,h,C,w.CAPTURE):C===O&&e(S,t,h,O,w.EP_CAPTURE))}}else for(var T=0,L=b[v.type].length;T<L;T++){var M=b[v.type][T];for(C=h;!(136&(C+=M));){if(null!=S[C]){if(S[C].color===r)break;e(S,t,h,C,w.CAPTURE);break}if(e(S,t,h,C,w.NORMAL),"n"===v.type||"k"===v.type)break}}}if(!g||u===_[r]){if(A[r]&w.KSIDE_CASTLE){var I=(R=_[r])+2;null!=S[R+1]||null!=S[I]||H(c,_[r])||H(c,R+1)||H(c,I)||e(S,t,_[r],I,w.KSIDE_CASTLE)}if(A[r]&w.QSIDE_CASTLE){var R;I=(R=_[r])-2;null!=S[R-1]||null!=S[R-2]||null!=S[R-3]||H(c,_[r])||H(c,R-1)||H(c,I)||e(S,t,_[r],I,w.QSIDE_CASTLE)}}if(!m)return t;var q=[];for(h=0,L=t.length;h<L;h++)en(t[h]),X(r)||q.push(t[h]),tn();return q}function $(n,e){var t="";if(n.flags&w.KSIDE_CASTLE)t="O-O";else if(n.flags&w.QSIDE_CASTLE)t="O-O-O";else{var r=function(n,e){for(var t=F({legal:!e}),r=n.from,o=n.to,i=n.piece,a=0,l=0,s=0,c=0,d=t.length;c<d;c++){var f=t[c].from,u=t[c].to,p=t[c].piece;i===p&&r!==f&&o===u&&(a++,on(r)===on(f)&&l++,an(r)===an(f)&&s++)}if(a>0)return l>0&&s>0?ln(r):s>0?ln(r).charAt(1):ln(r).charAt(0);return""}(n,e);n.piece!==o&&(t+=n.piece.toUpperCase()+r),n.flags&(w.CAPTURE|w.EP_CAPTURE)&&(n.piece===o&&(t+=ln(n.from)[0]),t+="x"),t+=ln(n.to),n.flags&w.PROMOTION&&(t+="="+n.promotion.toUpperCase())}return en(n),Z()&&(V()?t+="#":t+="+"),tn(),t}function G(n){return n.replace(/=/,"").replace(/[+#]?[?!]*$/,"")}function H(n,r){for(var i=P.a8;i<=P.h1;i++)if(136&i)i+=7;else if(null!=S[i]&&S[i].color===n){var a=S[i],l=i-r,s=l+119;if(g[s]&1<<h[a.type]){if(a.type===o){if(l>0){if(a.color===t)return!0}else if(a.color===e)return!0;continue}if("n"===a.type||"k"===a.type)return!0;for(var c=m[s],d=i+c,f=!1;d!==r;){if(null!=S[d]){f=!0;break}d+=c}if(!f)return!0}}return!1}function X(n){return H(sn(n),_[n])}function Z(){return X(j)}function V(){return Z()&&0===F().length}function Y(){return!Z()&&0===F().length}function J(){for(var n={},e=[],t=0,r=0,o=P.a8;o<=P.h1;o++)if(r=(r+1)%2,136&o)o+=7;else{var l=S[o];l&&(n[l.type]=l.type in n?n[l.type]+1:1,l.type===a&&e.push(r),t++)}if(2===t)return!0;if(3===t&&(1===n[a]||1===n[i]))return!0;if(t===n[a]+2){var s=0,c=e.length;for(o=0;o<c;o++)s+=e[o];if(0===s||s===c)return!0}return!1}function nn(){for(var n=[],e={},t=!1;;){var r=tn();if(!r)break;n.push(r)}for(;;){var o=K().split(" ").slice(0,4).join(" ");if(e[o]=o in e?e[o]+1:1,e[o]>=3&&(t=!0),!n.length)break;en(n.pop())}return t}function en(n){var t=j,i=sn(t);if(function(n){M.push({move:n,kings:{b:_.b,w:_.w},turn:j,castling:{b:A.b,w:A.w},ep_square:O,half_moves:T,move_number:L})}(n),S[n.to]=S[n.from],S[n.from]=null,n.flags&w.EP_CAPTURE&&(j===e?S[n.to-16]=null:S[n.to+16]=null),n.flags&w.PROMOTION&&(S[n.to]={type:n.promotion,color:t}),S[n.to].type===c){if(_[S[n.to].color]=n.to,n.flags&w.KSIDE_CASTLE){var a=n.to-1,l=n.to+1;S[a]=S[l],S[l]=null}else if(n.flags&w.QSIDE_CASTLE){a=n.to+1,l=n.to-2;S[a]=S[l],S[l]=null}A[t]=""}if(A[t])for(var s=0,d=C[t].length;s<d;s++)if(n.from===C[t][s].square&&A[t]&C[t][s].flag){A[t]^=C[t][s].flag;break}if(A[i])for(s=0,d=C[i].length;s<d;s++)if(n.to===C[i][s].square&&A[i]&C[i][s].flag){A[i]^=C[i][s].flag;break}O=n.flags&w.BIG_PAWN?"b"===j?n.to-16:n.to+16:r,n.piece===o?T=0:n.flags&(w.CAPTURE|w.EP_CAPTURE)?T=0:T++,j===e&&L++,j=sn(j)}function tn(){var n=M.pop();if(null==n)return null;var t=n.move;_=n.kings,j=n.turn,A=n.castling,O=n.ep_square,T=n.half_moves,L=n.move_number;var r,i,a=j,l=sn(j);if(S[t.from]=S[t.to],S[t.from].type=t.piece,S[t.to]=null,t.flags&w.CAPTURE)S[t.to]={type:t.captured,color:l};else if(t.flags&w.EP_CAPTURE){var s;s=a===e?t.to-16:t.to+16,S[s]={type:o,color:l}}t.flags&(w.KSIDE_CASTLE|w.QSIDE_CASTLE)&&(t.flags&w.KSIDE_CASTLE?(r=t.to+1,i=t.to-1):t.flags&w.QSIDE_CASTLE&&(r=t.to-2,i=t.to+1),S[r]=S[i],S[i]=null);return t}function rn(n,e){var t=G(n);if(e){var r=t.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);if(r)var o=r[1],i=r[2],a=r[3],l=r[4]}for(var s=F(),c=0,d=s.length;c<d;c++){if(t===G($(s[c]))||e&&t===G($(s[c],!0)))return s[c];if(r&&(!o||o.toLowerCase()==s[c].piece)&&P[i]==s[c].from&&P[a]==s[c].to&&(!l||l.toLowerCase()==s[c].promotion))return s[c]}return null}function on(n){return n>>4}function an(n){return 15&n}function ln(n){var e=an(n),t=on(n);return"abcdefgh".substring(e,e+1)+"87654321".substring(t,t+1)}function sn(n){return n===t?e:t}function cn(n){return-1!=="0123456789".indexOf(n)}function dn(n){var e=function n(e){var t=e instanceof Array?[]:{};for(var r in e)t[r]="object"==typeof r?n(e[r]):e[r];return t}(n);e.san=$(e,!1),e.to=ln(e.to),e.from=ln(e.from);var t="";for(var r in w)w[r]&e.flags&&(t+=v[r]);return e.flags=t,e}function fn(n){return n.replace(/^\s+|\s+$/g,"")}return N(void 0===n?f:n),{WHITE:t,BLACK:e,PAWN:o,KNIGHT:i,BISHOP:a,ROOK:l,QUEEN:s,KING:c,SQUARES:function(){for(var n=[],e=P.a8;e<=P.h1;e++)136&e?e+=7:n.push(ln(e));return n}(),FLAGS:v,load:function(n){return N(n)},reset:function(){return q()},moves:function(n){for(var e=F(n),t=[],r=0,o=e.length;r<o;r++)void 0!==n&&"verbose"in n&&n.verbose?t.push(dn(e[r])):t.push($(e[r],!1));return t},in_check:function(){return Z()},in_checkmate:function(){return V()},in_stalemate:function(){return Y()},in_draw:function(){return T>=100||Y()||J()||nn()},insufficient_material:function(){return J()},in_threefold_repetition:function(){return nn()},game_over:function(){return T>=100||V()||Y()||J()||nn()},validate_fen:function(n){return D(n)},fen:function(){return K()},pgn:function(n){var e="object"==typeof n&&"string"==typeof n.newline_char?n.newline_char:"\n",t="object"==typeof n&&"number"==typeof n.max_width?n.max_width:0,r=[],o=!1;for(var i in I)r.push("["+i+' "'+I[i]+'"]'+e),o=!0;o&&M.length&&r.push(e);for(var a=[];M.length>0;)a.push(tn());for(var l=[],s="";a.length>0;){var c=a.pop();M.length||"b"!==c.color?"w"===c.color&&(s.length&&l.push(s),s=L+"."):s=L+". ...",s=s+" "+$(c,!1),en(c)}if(s.length&&l.push(s),void 0!==I.Result&&l.push(I.Result),0===t)return r.join("")+l.join(" ");var d=0;for(i=0;i<l.length;i++)d+l[i].length>t&&0!==i?(" "===r[r.length-1]&&r.pop(),r.push(e),d=0):0!==i&&(r.push(" "),d++),r.push(l[i]),d+=l[i].length;return r.join("")},load_pgn:function(n,e){var t=void 0!==e&&"sloppy"in e&&e.sloppy;function r(n){return n.replace(/\\/g,"\\")}var o="object"==typeof e&&"string"==typeof e.newline_char?e.newline_char:"\r?\n",i=new RegExp("^(\\[(.|"+r(o)+")*\\])("+r(o)+")*1.("+r(o)+"|.)*$","g"),a=n.replace(i,"$1");"["!==a[0]&&(a=""),q();var l=function(n,e){for(var t="object"==typeof e&&"string"==typeof e.newline_char?e.newline_char:"\r?\n",o={},i=n.split(new RegExp(r(t))),a="",l="",s=0;s<i.length;s++)a=i[s].replace(/^\[([A-Z][A-Za-z]*)\s.*\]$/,"$1"),l=i[s].replace(/^\[[A-Za-z]+\s"(.*)"\]$/,"$1"),fn(a).length>0&&(o[a]=l);return o}(a,e);for(var s in l)U([s,l[s]]);if("1"===l.SetUp&&!("FEN"in l&&N(l.FEN)))return!1;var c=n.replace(a,"").replace(new RegExp(r(o),"g")," ");c=c.replace(/(\{[^}]+\})+?/g,"");for(var d=/(\([^\(\)]+\))+?/g;d.test(c);)c=c.replace(d,"");var f=fn(c=(c=(c=c.replace(/\d+\.(\.\.)?/g,"")).replace(/\.\.\./g,"")).replace(/\$\d+/g,"")).split(new RegExp(/\s+/));f=f.join(",").replace(/,,+/g,",").split(",");for(var p="",b=0;b<f.length-1;b++){if(null==(p=rn(f[b],t)))return!1;en(p)}if(p=f[f.length-1],u.indexOf(p)>-1)(function(n){for(var e in n)return!0;return!1})(I)&&void 0===I.Result&&U(["Result",p]);else{if(null==(p=rn(p,t)))return!1;en(p)}return!0},header:function(){return U(arguments)},ascii:function(){return function(){for(var n="   +------------------------+\n",e=P.a8;e<=P.h1;e++){if(0===an(e)&&(n+=" "+"87654321"[on(e)]+" |"),null==S[e])n+=" . ";else{var r=S[e].type;n+=" "+(S[e].color===t?r.toUpperCase():r.toLowerCase())+" "}e+1&136&&(n+="|\n",e+=8)}return n+="   +------------------------+\n",n+="     a  b  c  d  e  f  g  h\n"}()},turn:function(){return j},move:function(n,e){var t=void 0!==e&&"sloppy"in e&&e.sloppy,r=null;if("string"==typeof n)r=rn(n,t);else if("object"==typeof n)for(var o=F(),i=0,a=o.length;i<a;i++)if(!(n.from!==ln(o[i].from)||n.to!==ln(o[i].to)||"promotion"in o[i]&&n.promotion!==o[i].promotion)){r=o[i];break}if(!r)return null;var l=dn(r);return en(r),l},undo:function(){var n=tn();return n?dn(n):null},clear:function(){return R()},put:function(n,e){return z(n,e)},get:function(n){return Q(n)},remove:function(n){return function(n){var e=Q(n);return S[P[n]]=null,e&&e.type===c&&(_[e.color]=r),B(K()),e}(n)},perft:function(n){return function n(e){for(var t=F({legal:!1}),r=0,o=j,i=0,a=t.length;i<a;i++)en(t[i]),X(o)||(e-1>0?r+=n(e-1):r++),tn();return r}(n)},square_color:function(n){if(n in P){var e=P[n];return(on(e)+an(e))%2==0?"light":"dark"}return null},history:function(n){for(var e=[],t=[],r=(void 0!==n&&"verbose"in n&&n.verbose);M.length>0;)e.push(tn());for(;e.length>0;){var o=e.pop();r?t.push(dn(o)):t.push($(o)),en(o)}return t}}};
/* @license
 * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)
 * Released under the BSD license
 * https://github.com/jhlywa/chess.js/blob/master/LICENSE
 */e.Chess=o,void 0===(r=function(){return o}.call(e,t,e,n))||(n.exports=r)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NoZXNzZ3JvdW5kL3V0aWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2hlc3Nncm91bmQvYm9hcmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NoZXNzZ3JvdW5kL3R5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jaGVzc2dyb3VuZC9mZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NoZXNzZ3JvdW5kL2NvbmZpZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2hlc3Nncm91bmQvYW5pbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2hlc3Nncm91bmQvZHJhZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2hlc3Nncm91bmQvZHJhdy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2hlc3Nncm91bmQvc3ZnLmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2NoZXNzZ3JvdW5kLmNzcz80Yjg3Iiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvY2hlc3Nncm91bmQuY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy90aGVtZS5jc3M/M2QxMSIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL3RoZW1lLmNzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvdXJsL2VzY2FwZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9ib2FyZC9ibHVlLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL3dQLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL3dCLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL3dOLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL3dSLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL3dRLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL3dLLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL2JQLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL2JCLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL2JOLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL2JSLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL2JRLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9waWVjZXMvbWVyaWRhL2JLLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUuY3NzPzc1MjgiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUuc2Nzcz84NDY3Iiwid2VicGFjazovLy8uL3NyYy9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jaGVzc2dyb3VuZC9jaGVzc2dyb3VuZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2hlc3Nncm91bmQvYXBpLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jaGVzc2dyb3VuZC9wcmVtb3ZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jaGVzc2dyb3VuZC9leHBsb3Npb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NoZXNzZ3JvdW5kL3N0YXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jaGVzc2dyb3VuZC93cmFwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jaGVzc2dyb3VuZC9ldmVudHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NoZXNzZ3JvdW5kL3JlbmRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2hlc3MuanMvY2hlc3MuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJjZyIsImNvbG9ycyIsImludlJhbmtzIiwiYWxsS2V5cyIsIl9hIiwiQXJyYXkiLCJjb25jYXQiLCJhcHBseSIsImZpbGVzIiwibWFwIiwicmFua3MiLCJwb3Mya2V5IiwicG9zIiwia2V5MnBvcyIsImsiLCJjaGFyQ29kZUF0IiwibWVtbyIsImYiLCJ2IiwicmV0IiwidW5kZWZpbmVkIiwiY2xlYXIiLCJ0aW1lciIsInN0YXJ0QXQiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJjYW5jZWwiLCJzdG9wIiwidGltZSIsIm9wcG9zaXRlIiwiY29udGFpbnNYIiwieHMiLCJ4IiwiaW5kZXhPZiIsImRpc3RhbmNlU3EiLCJwb3MxIiwicG9zMiIsIk1hdGgiLCJwb3ciLCJzYW1lUGllY2UiLCJwMSIsInAyIiwicm9sZSIsImNvbG9yIiwiY29tcHV0ZUlzVHJpZGVudCIsIndpbmRvdyIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInBvc1RvVHJhbnNsYXRlQmFzZSIsImFzV2hpdGUiLCJ4RmFjdG9yIiwieUZhY3RvciIsInBvc1RvVHJhbnNsYXRlQWJzIiwiYm91bmRzIiwid2lkdGgiLCJoZWlnaHQiLCJwb3NUb1RyYW5zbGF0ZVJlbCIsInRyYW5zbGF0ZUFicyIsImVsIiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJ0cmFuc2xhdGVSZWwiLCJwZXJjZW50cyIsImxlZnQiLCJ0b3AiLCJzZXRWaXNpYmxlIiwidmlzaWJpbGl0eSIsImV2ZW50UG9zaXRpb24iLCJlIiwiY2xpZW50WCIsImNsaWVudFkiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImlzUmlnaHRCdXR0b24iLCJidXR0b25zIiwiYnV0dG9uIiwiY3JlYXRlRWwiLCJ0YWdOYW1lIiwiY2xhc3NOYW1lIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwicmFmIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic2V0VGltZW91dCIsInVzZVNvdXJjZU1hcCIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJpdGVtIiwiY29udGVudCIsImNzc01hcHBpbmciLCJidG9hIiwic291cmNlTWFwcGluZyIsInNvdXJjZU1hcCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsInRvQ29tbWVudCIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsImpvaW4iLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibWVkaWFRdWVyeSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJsZW5ndGgiLCJpZCIsInB1c2giLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJmbiIsImFyZ3VtZW50cyIsIm1lbW9pemUiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInRhcmdldCIsInBhcmVudCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwib3B0aW9ucyIsImRvbVN0eWxlIiwicmVmcyIsImoiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsImluc2VydEludG8iLCJFcnJvciIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwiaW5zZXJ0QXQiLCJuZXh0U2libGluZyIsImluc2VydEJlZm9yZSIsImFwcGVuZENoaWxkIiwiZmlyc3RDaGlsZCIsImJlZm9yZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImlkeCIsInNwbGljZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImF0dHJzIiwidHlwZSIsIm5vbmNlIiwibmMiLCJnZXROb25jZSIsImFkZEF0dHJzIiwia2V5cyIsImZvckVhY2giLCJzZXRBdHRyaWJ1dGUiLCJvYmoiLCJ1cGRhdGUiLCJyZW1vdmUiLCJyZXN1bHQiLCJzdHlsZUluZGV4IiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInJldm9rZU9iamVjdFVSTCIsIkJsb2IiLCJsaW5rIiwicmVsIiwiY3JlYXRlTGlua0VsZW1lbnQiLCJhdXRvRml4VXJscyIsImNvbnZlcnRUb0Fic29sdXRlVXJscyIsImJsb2IiLCJvbGRTcmMiLCJocmVmIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjcmVhdGVUZXh0Tm9kZSIsIm5ld09iaiIsIkRFQlVHIiwibmV3TGlzdCIsIm1heVJlbW92ZSIsInJlcGxhY2VUZXh0IiwidGV4dFN0b3JlIiwiaW5kZXgiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJjc3NOb2RlIiwiY2hpbGROb2RlcyIsInV0aWxfMSIsInByZW1vdmVfMSIsImNhbGxVc2VyRnVuY3Rpb24iLCJhcmdzIiwiX2kiLCJ1bnNldFByZW1vdmUiLCJzdGF0ZSIsInByZW1vdmFibGUiLCJjdXJyZW50IiwiZXZlbnRzIiwidW5zZXQiLCJ1bnNldFByZWRyb3AiLCJwZCIsInByZWRyb3BwYWJsZSIsImJhc2VNb3ZlIiwib3JpZyIsImRlc3QiLCJwaWVjZXMiLCJjYXB0dXJlZCIsInNlbGVjdGVkIiwidW5zZWxlY3QiLCJtb3ZlIiwiYXV0b0Nhc3RsZSIsImtpbmciLCJvcmlnUG9zIiwib2xkUm9va1BvcyIsIm5ld1Jvb2tQb3MiLCJuZXdLaW5nUG9zIiwiZGVzdFBvcyIsInJvb2siLCJ0cnlBdXRvQ2FzdGxlIiwibGFzdE1vdmUiLCJjaGVjayIsImNoYW5nZSIsImJhc2VOZXdQaWVjZSIsInBpZWNlIiwiZm9yY2UiLCJkcm9wTmV3UGllY2UiLCJtb3ZhYmxlIiwiZGVzdHMiLCJ0dXJuQ29sb3IiLCJiYXNlVXNlck1vdmUiLCJhbmltYXRpb24iLCJ1c2VyTW92ZSIsImNhbk1vdmUiLCJob2xkVGltZSIsImhvbGQiLCJtZXRhZGF0YSIsInByZW1vdmUiLCJjdHJsS2V5Iiwic3RhdHMiLCJhZnRlciIsImlzUHJlbW92YWJsZSIsImRlZmF1bHQiLCJjYXN0bGUiLCJjYW5QcmVtb3ZlIiwiaXNNb3ZhYmxlIiwic2V0U2VsZWN0ZWQiLCJtZXRhIiwic2V0Iiwic2V0UHJlbW92ZSIsImZyZWUiLCJlbmFibGVkIiwiY2FuY2VsTW92ZSIsInRvZ2dsZU9yaWVudGF0aW9uIiwib3JpZW50YXRpb24iLCJkcmFnZ2FibGUiLCJyZXNldCIsInNldFBpZWNlcyIsInNldENoZWNrIiwiY2FuRHJvcCIsImFmdGVyTmV3UGllY2UiLCJwcmVkcm9wIiwiY2FuUHJlZHJvcCIsInNldFByZWRyb3AiLCJzZWxlY3RTcXVhcmUiLCJzZWxlY3RhYmxlIiwiZHJhZ2dlZCIsInNlbGVjdCIsImlzRHJhZ2dhYmxlIiwicGxheVByZW1vdmUiLCJzdWNjZXNzIiwicGxheVByZWRyb3AiLCJ2YWxpZGF0ZSIsImRyb3AiLCJnZXRLZXlBdERvbVBvcyIsImZpbGUiLCJjZWlsIiwicmFuayIsImluaXRpYWwiLCJyb2xlcyIsImIiLCJxIiwibGV0dGVycyIsInBhd24iLCJrbmlnaHQiLCJiaXNob3AiLCJxdWVlbiIsInJlYWQiLCJmZW4iLCJyb3ciLCJjb2wiLCJmZW5fMSIsInByb21vdGVkIiwibmIiLCJ0b0xvd2VyQ2FzZSIsIndyaXRlIiwibGV0dGVyIiwieSIsInRvVXBwZXJDYXNlIiwicmVwbGFjZSIsImJvYXJkXzEiLCJpc09iamVjdCIsImNvbmZpZ3VyZSIsImNvbmZpZyIsIm1lcmdlIiwiZXh0ZW5kIiwiZHJhd2FibGUiLCJzaGFwZXMiLCJkdXJhdGlvbiIsInJvb2tDYXN0bGUiLCJyYW5rXzEiLCJraW5nU3RhcnRQb3MiLCJkZXN0c18xIiwiX19hc3NpZ24iLCJhc3NpZ24iLCJ1dGlsIiwicmVuZGVyIiwibXV0YXRpb24iLCJkb20iLCJyZWRyYXciLCJtYWtlUGllY2UiLCJhbmltIiwicHJldlBpZWNlcyIsInBsYW4iLCJjdXJQIiwicHJlUCIsInZlY3RvciIsImFuaW1zIiwiYW5pbWVkT3JpZ3MiLCJmYWRpbmdzIiwibWlzc2luZ3MiLCJuZXdzIiwicHJlUGllY2VzIiwibmV3UCIsInNvcnQiLCJjbG9zZXIiLCJpdGVtcyIsImNvbXB1dGVQbGFuIiwiaXNPYmplY3RFbXB0eSIsImFscmVhZHlSdW5uaW5nIiwicGVyZiIsImZyZXF1ZW5jeSIsInN0ZXAiLCJjdXIiLCJyZXN0IiwicmVkcmF3Tm93IiwiZWFzZSIsImVhc2luZyIsImNmZyIsImRlc3Ryb3llZCIsImFuaW1hdGUiLCJwZXJmb3JtYW5jZSIsIl8iLCJib2FyZCIsImRyYXdfMSIsImFuaW1fMSIsInByb2Nlc3NEcmFnIiwib3JpZ1BpZWNlIiwic3RhcnRlZCIsImVwb3MiLCJkaXN0YW5jZSIsImVsZW1lbnQiLCJmb3VuZCIsImNnRHJhZ2dpbmciLCJjbGFzc0xpc3QiLCJhZGQiLCJ0cmFuc2xhdGlvbiIsImRlYyIsIm5ld1BpZWNlIiwicmVtb3ZlRHJhZ0VsZW1lbnRzIiwiZWxlbWVudHMiLCJnaG9zdCIsImNvbXB1dGVTcXVhcmVCb3VuZHMiLCJwaWVjZUVsZW1lbnRCeUtleSIsImNnS2V5IiwicHJldmVudERlZmF1bHQiLCJwb3NpdGlvbiIsInByZXZpb3VzbHlTZWxlY3RlZCIsImVyYXNlT25DbGljayIsImhhZFByZW1vdmUiLCJoYWRQcmVkcm9wIiwic3RpbGxTZWxlY3RlZCIsInNxdWFyZUJvdW5kcyIsImNlbnRlclBpZWNlIiwiYXV0b0Rpc3RhbmNlIiwib3JpZ2luVGFyZ2V0IiwiZHJhZ05ld1BpZWNlIiwiZW5kIiwiZXZlbnRQb3MiLCJkZWxldGVPbkRyb3BPZmYiLCJicnVzaGVzIiwicHJvY2Vzc0RyYXciLCJtb3VzZVNxIiwib25DaGFuZ2UiLCJzdG9wUHJvcGFnYXRpb24iLCJicnVzaCIsImEiLCJzaGlmdEtleSIsImFsdEtleSIsImV2ZW50QnJ1c2giLCJzYW1lU2hhcGUiLCJzaW1pbGFyIiwibm90IiwiYWRkU2hhcGUiLCJpc1RyaWRlbnQiLCJjcmVhdGVFbGVtZW50TlMiLCJzaGFwZUhhc2giLCJhcnJvd0Rlc3RzIiwibW9kaWZpZXJzIiwic2NhbGUiLCJwaWVjZUhhc2giLCJsaW5lV2lkdGgiLCJtb2RpZmllcnNIYXNoIiwicmVuZGVyTWFya2VyIiwibWFya2VyIiwic2V0QXR0cmlidXRlcyIsIm9yaWVudCIsIm1hcmtlcldpZHRoIiwibWFya2VySGVpZ2h0IiwicmVmWCIsInJlZlkiLCJmaWxsIiwibWFrZUN1c3RvbUJydXNoIiwib3BhY2l0eSIsInJvdW5kIiwicG9zMnB4IiwicmVuZGVyU3ZnIiwicm9vdCIsImN1ckQiLCJhdXRvU2hhcGVzIiwic2hhcGUiLCJoYXNoIiwiZnVsbEhhc2giLCJzYyIsInByZXZTdmdIYXNoIiwiZGVmc0VsIiwia2V5c0luRG9tIiwiZ2V0QXR0cmlidXRlIiwic3luY0RlZnMiLCJoYXNoZXNJbkRvbSIsInRvUmVtb3ZlIiwiZWxIYXNoIiwiYmFzZVVybCIsInNpemUiLCJyZW5kZXJQaWVjZSIsInNob3J0ZW4iLCJhcnJvd01hcmdpbiIsImR4IiwiZHkiLCJhbmdsZSIsImF0YW4yIiwieG8iLCJjb3MiLCJ5byIsInNpbiIsInN0cm9rZSIsInN0cm9rZS13aWR0aCIsInN0cm9rZS1saW5lY2FwIiwibWFya2VyLWVuZCIsIngxIiwieTEiLCJ4MiIsInkyIiwicmVuZGVyQXJyb3ciLCJ3aWR0aHMiLCJjaXJjbGVXaWR0aCIsInJhZGl1cyIsImN4IiwiY3kiLCJyZW5kZXJDaXJjbGUiLCJyZW5kZXJTaGFwZSIsInN5bmNTaGFwZXMiLCJjaGVzc2dyb3VuZF8xIiwiY2hlc3NfanMiLCJ0b0Rlc3RzIiwiY2hlc3MiLCJTUVVBUkVTIiwibXMiLCJtb3ZlcyIsInNxdWFyZSIsInZlcmJvc2UiLCJ0byIsInRvQ29sb3IiLCJ0dXJuIiwicGxheU90aGVyU2lkZSIsImZyb20iLCJyZXdyaXRlUGduIiwiY2hhbmdlQmFja29yTmV4dCIsImdldEVsZW1lbnRCeUlkIiwiaW5uZXJIVE1MIiwicGduIiwibXltb3ZlcyIsImNoZXNzZ3IiLCJDaGVzc2dyb3VuZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImNvbnNvbGUiLCJsb2ciLCJwb3AiLCJ1bmRvIiwibG9jYXRpb24iLCJyZWxvYWQiLCJobXIiLCJsb2NhbHMiLCJwcm90b2NvbCIsImhvc3QiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwidHJpbSIsIiQxIiwidGVzdCIsImVzY2FwZSIsInVybCIsInNsaWNlIiwiYXBpXzEiLCJjb25maWdfMSIsInN0YXRlXzEiLCJ3cmFwXzEiLCJyZW5kZXJfMSIsInN2ZyIsImRlZmF1bHRzIiwicmVkcmF3QWxsIiwicHJldlVuYmluZCIsInVuYmluZCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInJlbGF0aXZlIiwidmlld09ubHkiLCJ2aXNpYmxlIiwic2tpcFN2ZyIsInJlZHJhd2luZyIsImRlYm91bmNlUmVkcmF3IiwiYmluZEJvYXJkIiwiYmluZERvY3VtZW50IiwiZHJhZ18xIiwiZXhwbG9zaW9uXzEiLCJnZXRGZW4iLCJjYW5jZWxQcmVtb3ZlIiwiY2FuY2VsUHJlZHJvcCIsImV4cGxvZGUiLCJzZXRBdXRvU2hhcGVzIiwic2V0U2hhcGVzIiwiZGVzdHJveSIsImRpZmYiLCJhYnMiLCJ4ZCIsInlkIiwiY2FuQ2FzdGxlIiwibW9iaWxpdHkiLCJyb29rRmlsZXMiLCJyb29rRmlsZXNPZiIsInNldFN0YWdlIiwic3RhZ2UiLCJleHBsb2RpbmciLCJjb29yZGluYXRlcyIsImRpc2FibGVDb250ZXh0TWVudSIsInJlc2l6YWJsZSIsImFkZFBpZWNlWkluZGV4IiwicGllY2VLZXkiLCJoaWdobGlnaHQiLCJzaG93RGVzdHMiLCJzaG93R2hvc3QiLCJncmVlbiIsInJlZCIsImJsdWUiLCJ5ZWxsb3ciLCJwYWxlQmx1ZSIsInBhbGVHcmVlbiIsInBhbGVSZWQiLCJwYWxlR3JleSIsInR5cGVzXzEiLCJzdmdfMSIsInJlbmRlckNvb3JkcyIsImVsZW1zIiwidGV4dENvbnRlbnQiLCJ0b2dnbGUiLCJvcmllbnRDbGFzcyIsImRyYWciLCJkcmF3IiwidW5iaW5kYWJsZSIsImV2ZW50TmFtZSIsImNhbGxiYWNrIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImRyYWdPckRyYXciLCJ3aXRoRHJhZyIsIndpdGhEcmF3IiwiYm9hcmRFbCIsIm9uU3RhcnQiLCJzdGFydERyYWdPckRyYXciLCJ1bmJpbmRzIiwiYm9keSIsIm9ubW92ZV8xIiwib25lbmRfMSIsImV2Iiwib25TY3JvbGwiLCJwYXNzaXZlIiwiaXNQaWVjZU5vZGUiLCJpc1NxdWFyZU5vZGUiLCJyZW1vdmVOb2RlcyIsIm5vZGVzIiwicG9zWkluZGV4IiwieiIsInBpZWNlTmFtZU9mIiwiYWRkU3F1YXJlIiwic3F1YXJlcyIsImtsYXNzIiwicGllY2VBdEtleSIsImVsUGllY2VOYW1lIiwiZmFkaW5nIiwicE12ZHNldCIsInBNdmQiLCJzTXZkc2V0Iiwic012ZCIsInBvc1RvVHJhbnNsYXRlIiwidHJhbnNsYXRlIiwiY3VyQW5pbSIsImN1ckRyYWciLCJwRGVzdHMiLCJjb21wdXRlU3F1YXJlQ2xhc3NlcyIsInNhbWVQaWVjZXMiLCJzYW1lU3F1YXJlcyIsIm1vdmVkUGllY2VzIiwibW92ZWRTcXVhcmVzIiwicGllY2VzS2V5cyIsImNnUGllY2UiLCJjZ0ZhZGluZyIsImNnQW5pbWF0aW5nIiwiekluZGV4IiwiY24iLCJzayIsInNxdWFyZU5vZGUiLCJwaWVjZU5hbWUiLCJwaWVjZU5vZGUiLCJfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyIsIkNoZXNzIiwiQkxBQ0siLCJXSElURSIsIkVNUFRZIiwiUEFXTiIsIktOSUdIVCIsIkJJU0hPUCIsIlJPT0siLCJRVUVFTiIsIktJTkciLCJTWU1CT0xTIiwiREVGQVVMVF9QT1NJVElPTiIsIlBPU1NJQkxFX1JFU1VMVFMiLCJQQVdOX09GRlNFVFMiLCJ3IiwiUElFQ0VfT0ZGU0VUUyIsIkFUVEFDS1MiLCJSQVlTIiwiU0hJRlRTIiwiRkxBR1MiLCJOT1JNQUwiLCJDQVBUVVJFIiwiQklHX1BBV04iLCJFUF9DQVBUVVJFIiwiUFJPTU9USU9OIiwiS1NJREVfQ0FTVExFIiwiUVNJREVfQ0FTVExFIiwiQklUUyIsIlJBTktfMSIsIlJBTktfMiIsIlJBTktfNyIsIlJBTktfOCIsImE4IiwiYjgiLCJjOCIsImQ4IiwiZTgiLCJmOCIsImc4IiwiaDgiLCJhNyIsImI3IiwiYzciLCJkNyIsImU3IiwiZjciLCJnNyIsImg3IiwiYTYiLCJiNiIsImM2IiwiZDYiLCJlNiIsImY2IiwiZzYiLCJoNiIsImE1IiwiYjUiLCJjNSIsImQ1IiwiZTUiLCJmNSIsImc1IiwiaDUiLCJhNCIsImI0IiwiYzQiLCJkNCIsImU0IiwiZjQiLCJnNCIsImg0IiwiYTMiLCJiMyIsImMzIiwiZDMiLCJlMyIsImYzIiwiZzMiLCJoMyIsImEyIiwiYjIiLCJjMiIsImQyIiwiZTIiLCJmMiIsImcyIiwiaDIiLCJhMSIsImIxIiwiYzEiLCJkMSIsImUxIiwiZjEiLCJnMSIsImgxIiwiUk9PS1MiLCJmbGFnIiwia2luZ3MiLCJjYXN0bGluZyIsImVwX3NxdWFyZSIsImhhbGZfbW92ZXMiLCJtb3ZlX251bWJlciIsImhpc3RvcnkiLCJoZWFkZXIiLCJ1cGRhdGVfc2V0dXAiLCJnZW5lcmF0ZV9mZW4iLCJsb2FkIiwidG9rZW5zIiwic3BsaXQiLCJ2YWxpZGF0ZV9mZW4iLCJ2YWxpZCIsImNoYXJBdCIsImlzX2RpZ2l0IiwicGFyc2VJbnQiLCJwdXQiLCJhbGdlYnJhaWMiLCJlcnJvcnMiLCJlcnJvcl9udW1iZXIiLCJlcnJvciIsImlzTmFOIiwicm93cyIsInN1bV9maWVsZHMiLCJwcmV2aW91c193YXNfbnVtYmVyIiwiZW1wdHkiLCJjZmxhZ3MiLCJlcGZsYWdzIiwic2V0X2hlYWRlciIsInNxIiwiYnVpbGRfbW92ZSIsImZsYWdzIiwicHJvbW90aW9uIiwiZ2VuZXJhdGVfbW92ZXMiLCJhZGRfbW92ZSIsImxlbiIsInVzIiwidGhlbSIsInN3YXBfY29sb3IiLCJzZWNvbmRfcmFuayIsImZpcnN0X3NxIiwibGFzdF9zcSIsInNpbmdsZV9zcXVhcmUiLCJsZWdhbCIsIm9mZnNldCIsImNhc3RsaW5nX3RvIiwiY2FzdGxpbmdfZnJvbSIsImF0dGFja2VkIiwibGVnYWxfbW92ZXMiLCJtYWtlX21vdmUiLCJraW5nX2F0dGFja2VkIiwidW5kb19tb3ZlIiwibW92ZV90b19zYW4iLCJzbG9wcHkiLCJvdXRwdXQiLCJkaXNhbWJpZ3VhdG9yIiwiYW1iaWd1aXRpZXMiLCJzYW1lX3JhbmsiLCJzYW1lX2ZpbGUiLCJhbWJpZ19mcm9tIiwiYW1iaWdfdG8iLCJhbWJpZ19waWVjZSIsImdldF9kaXNhbWJpZ3VhdG9yIiwiaW5fY2hlY2siLCJpbl9jaGVja21hdGUiLCJzdHJpcHBlZF9zYW4iLCJkaWZmZXJlbmNlIiwiYmxvY2tlZCIsImluX3N0YWxlbWF0ZSIsImluc3VmZmljaWVudF9tYXRlcmlhbCIsImJpc2hvcHMiLCJudW1fcGllY2VzIiwic3FfY29sb3IiLCJzdW0iLCJpbl90aHJlZWZvbGRfcmVwZXRpdGlvbiIsInBvc2l0aW9ucyIsInJlcGV0aXRpb24iLCJvbGQiLCJtb3ZlX2Zyb21fc2FuIiwiY2xlYW5fbW92ZSIsIm1hdGNoZXMiLCJtYXRjaCIsInN1YnN0cmluZyIsIm1ha2VfcHJldHR5IiwidWdseV9tb3ZlIiwiY2xvbmUiLCJkdXBlIiwic2FuIiwic3RyIiwidWdseV9tb3ZlcyIsImluX2RyYXciLCJnYW1lX292ZXIiLCJuZXdsaW5lIiwibmV3bGluZV9jaGFyIiwibWF4X3dpZHRoIiwiaGVhZGVyX2V4aXN0cyIsInJldmVyc2VkX2hpc3RvcnkiLCJtb3ZlX3N0cmluZyIsIlJlc3VsdCIsImN1cnJlbnRfd2lkdGgiLCJsb2FkX3BnbiIsIm1hc2siLCJyZWdleCIsIlJlZ0V4cCIsImhlYWRlcl9zdHJpbmciLCJoZWFkZXJzIiwiaGVhZGVyX29iaiIsInBhcnNlX3Bnbl9oZWFkZXIiLCJyYXZfcmVnZXgiLCJoYWxmX21vdmUiLCJoYXNfa2V5cyIsImFzY2lpIiwibW92ZV9vYmoiLCJwcmV0dHlfbW92ZSIsInBlcmZ0IiwiZGVwdGgiLCJzcXVhcmVfY29sb3IiLCJzcV8weDg4IiwibW92ZV9oaXN0b3J5Il0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxLQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLElBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsWUFVQSxPQU5BSSxF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OG1CLEVBQUE5VSxNQUNBbEIsRUFDQXNYLEVBQUFydkIsS0FBQWt0QixHQUFBam1CLElBRUFvb0IsRUFBQXJ2QixLQUFBbXJCLEVBQUFsa0IsSUFFQStqQixHQUFBL2pCLEdBR0EsT0FBQW9vQjs7Ozs7R0FRa0NyNEIsRUFBQTRxQixhQUV1Q3RuQixLQUF0Q3FuQixFQUFBLFdBQXFCLE9BQUFDLEdBQWlCdnFCLEtBQUFMLEVBQUFGLEVBQUFFLEVBQUFDLFFBQUFELFFBQUEycUIiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiZGlzdC9cIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDExKTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGNnID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG5leHBvcnRzLmNvbG9ycyA9IFsnd2hpdGUnLCAnYmxhY2snXTtcbmV4cG9ydHMuaW52UmFua3MgPSBbOCwgNywgNiwgNSwgNCwgMywgMiwgMV07XG5leHBvcnRzLmFsbEtleXMgPSAoX2EgPSBBcnJheS5wcm90b3R5cGUpLmNvbmNhdC5hcHBseShfYSwgY2cuZmlsZXMubWFwKGZ1bmN0aW9uIChjKSB7IHJldHVybiBjZy5yYW5rcy5tYXAoZnVuY3Rpb24gKHIpIHsgcmV0dXJuIGMgKyByOyB9KTsgfSkpO1xuZXhwb3J0cy5wb3Mya2V5ID0gZnVuY3Rpb24gKHBvcykgeyByZXR1cm4gZXhwb3J0cy5hbGxLZXlzWzggKiBwb3NbMF0gKyBwb3NbMV0gLSA5XTsgfTtcbmV4cG9ydHMua2V5MnBvcyA9IGZ1bmN0aW9uIChrKSB7IHJldHVybiBbay5jaGFyQ29kZUF0KDApIC0gOTYsIGsuY2hhckNvZGVBdCgxKSAtIDQ4XTsgfTtcbmZ1bmN0aW9uIG1lbW8oZikge1xuICAgIHZhciB2O1xuICAgIHZhciByZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh2ID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICB2ID0gZigpO1xuICAgICAgICByZXR1cm4gdjtcbiAgICB9O1xuICAgIHJldC5jbGVhciA9IGZ1bmN0aW9uICgpIHsgdiA9IHVuZGVmaW5lZDsgfTtcbiAgICByZXR1cm4gcmV0O1xufVxuZXhwb3J0cy5tZW1vID0gbWVtbztcbmV4cG9ydHMudGltZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN0YXJ0QXQ7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RhcnQ6IGZ1bmN0aW9uICgpIHsgc3RhcnRBdCA9IERhdGUubm93KCk7IH0sXG4gICAgICAgIGNhbmNlbDogZnVuY3Rpb24gKCkgeyBzdGFydEF0ID0gdW5kZWZpbmVkOyB9LFxuICAgICAgICBzdG9wOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoIXN0YXJ0QXQpXG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICB2YXIgdGltZSA9IERhdGUubm93KCkgLSBzdGFydEF0O1xuICAgICAgICAgICAgc3RhcnRBdCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIHJldHVybiB0aW1lO1xuICAgICAgICB9XG4gICAgfTtcbn07XG5leHBvcnRzLm9wcG9zaXRlID0gZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGMgPT09ICd3aGl0ZScgPyAnYmxhY2snIDogJ3doaXRlJzsgfTtcbmZ1bmN0aW9uIGNvbnRhaW5zWCh4cywgeCkge1xuICAgIHJldHVybiB4cyAhPT0gdW5kZWZpbmVkICYmIHhzLmluZGV4T2YoeCkgIT09IC0xO1xufVxuZXhwb3J0cy5jb250YWluc1ggPSBjb250YWluc1g7XG5leHBvcnRzLmRpc3RhbmNlU3EgPSBmdW5jdGlvbiAocG9zMSwgcG9zMikge1xuICAgIHJldHVybiBNYXRoLnBvdyhwb3MxWzBdIC0gcG9zMlswXSwgMikgKyBNYXRoLnBvdyhwb3MxWzFdIC0gcG9zMlsxXSwgMik7XG59O1xuZXhwb3J0cy5zYW1lUGllY2UgPSBmdW5jdGlvbiAocDEsIHAyKSB7XG4gICAgcmV0dXJuIHAxLnJvbGUgPT09IHAyLnJvbGUgJiYgcDEuY29sb3IgPT09IHAyLmNvbG9yO1xufTtcbmV4cG9ydHMuY29tcHV0ZUlzVHJpZGVudCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQvJykgPiAtMTsgfTtcbnZhciBwb3NUb1RyYW5zbGF0ZUJhc2UgPSBmdW5jdGlvbiAocG9zLCBhc1doaXRlLCB4RmFjdG9yLCB5RmFjdG9yKSB7IHJldHVybiBbXG4gICAgKGFzV2hpdGUgPyBwb3NbMF0gLSAxIDogOCAtIHBvc1swXSkgKiB4RmFjdG9yLFxuICAgIChhc1doaXRlID8gOCAtIHBvc1sxXSA6IHBvc1sxXSAtIDEpICogeUZhY3RvclxuXTsgfTtcbmV4cG9ydHMucG9zVG9UcmFuc2xhdGVBYnMgPSBmdW5jdGlvbiAoYm91bmRzKSB7XG4gICAgdmFyIHhGYWN0b3IgPSBib3VuZHMud2lkdGggLyA4LCB5RmFjdG9yID0gYm91bmRzLmhlaWdodCAvIDg7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChwb3MsIGFzV2hpdGUpIHsgcmV0dXJuIHBvc1RvVHJhbnNsYXRlQmFzZShwb3MsIGFzV2hpdGUsIHhGYWN0b3IsIHlGYWN0b3IpOyB9O1xufTtcbmV4cG9ydHMucG9zVG9UcmFuc2xhdGVSZWwgPSBmdW5jdGlvbiAocG9zLCBhc1doaXRlKSB7IHJldHVybiBwb3NUb1RyYW5zbGF0ZUJhc2UocG9zLCBhc1doaXRlLCAxMi41LCAxMi41KTsgfTtcbmV4cG9ydHMudHJhbnNsYXRlQWJzID0gZnVuY3Rpb24gKGVsLCBwb3MpIHtcbiAgICBlbC5zdHlsZS50cmFuc2Zvcm0gPSBcInRyYW5zbGF0ZShcIiArIHBvc1swXSArIFwicHgsXCIgKyBwb3NbMV0gKyBcInB4KVwiO1xufTtcbmV4cG9ydHMudHJhbnNsYXRlUmVsID0gZnVuY3Rpb24gKGVsLCBwZXJjZW50cykge1xuICAgIGVsLnN0eWxlLmxlZnQgPSBwZXJjZW50c1swXSArICclJztcbiAgICBlbC5zdHlsZS50b3AgPSBwZXJjZW50c1sxXSArICclJztcbn07XG5leHBvcnRzLnNldFZpc2libGUgPSBmdW5jdGlvbiAoZWwsIHYpIHtcbiAgICBlbC5zdHlsZS52aXNpYmlsaXR5ID0gdiA/ICd2aXNpYmxlJyA6ICdoaWRkZW4nO1xufTtcbmV4cG9ydHMuZXZlbnRQb3NpdGlvbiA9IGZ1bmN0aW9uIChlKSB7XG4gICAgaWYgKGUuY2xpZW50WCB8fCBlLmNsaWVudFggPT09IDApXG4gICAgICAgIHJldHVybiBbZS5jbGllbnRYLCBlLmNsaWVudFldO1xuICAgIGlmIChlLnRvdWNoZXMgJiYgZS50YXJnZXRUb3VjaGVzWzBdKVxuICAgICAgICByZXR1cm4gW2UudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRYLCBlLnRhcmdldFRvdWNoZXNbMF0uY2xpZW50WV07XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5leHBvcnRzLmlzUmlnaHRCdXR0b24gPSBmdW5jdGlvbiAoZSkgeyByZXR1cm4gZS5idXR0b25zID09PSAyIHx8IGUuYnV0dG9uID09PSAyOyB9O1xuZXhwb3J0cy5jcmVhdGVFbCA9IGZ1bmN0aW9uICh0YWdOYW1lLCBjbGFzc05hbWUpIHtcbiAgICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZ05hbWUpO1xuICAgIGlmIChjbGFzc05hbWUpXG4gICAgICAgIGVsLmNsYXNzTmFtZSA9IGNsYXNzTmFtZTtcbiAgICByZXR1cm4gZWw7XG59O1xuZXhwb3J0cy5yYWYgPSAod2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cuc2V0VGltZW91dCkuYmluZCh3aW5kb3cpO1xudmFyIF9hO1xuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cblxudmFyIHN0eWxlc0luRG9tID0ge307XG5cbnZhclx0bWVtb2l6ZSA9IGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbztcblxuXHRyZXR1cm4gZnVuY3Rpb24gKCkge1xuXHRcdGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikgbWVtbyA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0cmV0dXJuIG1lbW87XG5cdH07XG59O1xuXG52YXIgaXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xuXHQvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuXHQvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG5cdC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcblx0Ly8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG5cdC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuXHRyZXR1cm4gd2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7XG59KTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uICh0YXJnZXQsIHBhcmVudCkge1xuICBpZiAocGFyZW50KXtcbiAgICByZXR1cm4gcGFyZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbiAgfVxuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xufTtcblxudmFyIGdldEVsZW1lbnQgPSAoZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vID0ge307XG5cblx0cmV0dXJuIGZ1bmN0aW9uKHRhcmdldCwgcGFyZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgcGFzc2luZyBmdW5jdGlvbiBpbiBvcHRpb25zLCB0aGVuIHVzZSBpdCBmb3IgcmVzb2x2ZSBcImhlYWRcIiBlbGVtZW50LlxuICAgICAgICAgICAgICAgIC8vIFVzZWZ1bCBmb3IgU2hhZG93IFJvb3Qgc3R5bGUgaS5lXG4gICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICAgICAgICAgIC8vICAgaW5zZXJ0SW50bzogZnVuY3Rpb24gKCkgeyByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb29cIikuc2hhZG93Um9vdCB9XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR2YXIgc3R5bGVUYXJnZXQgPSBnZXRUYXJnZXQuY2FsbCh0aGlzLCB0YXJnZXQsIHBhcmVudCk7XG5cdFx0XHQvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXHRcdFx0aWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG5cdFx0XHRcdFx0Ly8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuXHRcdFx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1t0YXJnZXRdXG5cdH07XG59KSgpO1xuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhclx0c2luZ2xldG9uQ291bnRlciA9IDA7XG52YXJcdHN0eWxlc0luc2VydGVkQXRUb3AgPSBbXTtcblxudmFyXHRmaXhVcmxzID0gcmVxdWlyZShcIi4vdXJsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09IFwiYm9vbGVhblwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSA8aGVhZD4gZWxlbWVudFxuICAgICAgICBpZiAoIW9wdGlvbnMuaW5zZXJ0SW50bykgb3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCI7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIHRoZSB0YXJnZXRcblx0aWYgKCFvcHRpb25zLmluc2VydEF0KSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpO1xuXG5cdGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XG5cdFx0fVxuXG5cdFx0aWYobmV3TGlzdCkge1xuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0LCBvcHRpb25zKTtcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcblxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xuXG5cdFx0XHRcdGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIHBhcnRzID0gW107XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzfTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzIChsaXN0LCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xuXHRcdHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdO1xuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcblxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKSBzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xuXHRcdGVsc2UgbmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50IChvcHRpb25zLCBzdHlsZSkge1xuXHR2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pXG5cblx0aWYgKCF0YXJnZXQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcblx0fVxuXG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlc0luc2VydGVkQXRUb3Bbc3R5bGVzSW5zZXJ0ZWRBdFRvcC5sZW5ndGggLSAxXTtcblxuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmICghbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3ApIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIHRhcmdldC5maXJzdENoaWxkKTtcblx0XHR9IGVsc2UgaWYgKGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdFx0fVxuXHRcdHN0eWxlc0luc2VydGVkQXRUb3AucHVzaChzdHlsZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJib3R0b21cIikge1xuXHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwib2JqZWN0XCIgJiYgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpIHtcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlLCB0YXJnZXQpO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIG5leHRTaWJsaW5nKTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXG5cdGlmKG9wdGlvbnMuYXR0cnMubm9uY2UgPT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBub25jZSA9IGdldE5vbmNlKCk7XG5cdFx0aWYgKG5vbmNlKSB7XG5cdFx0XHRvcHRpb25zLmF0dHJzLm5vbmNlID0gbm9uY2U7XG5cdFx0fVxuXHR9XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXHRvcHRpb25zLmF0dHJzLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXG5cdGFkZEF0dHJzKGxpbmssIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGluayk7XG5cblx0cmV0dXJuIGxpbms7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJzIChlbCwgYXR0cnMpIHtcblx0T2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gZ2V0Tm9uY2UoKSB7XG5cdGlmICh0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHRyZXR1cm4gX193ZWJwYWNrX25vbmNlX187XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmosIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xuXG5cdC8vIElmIGEgdHJhbnNmb3JtIGZ1bmN0aW9uIHdhcyBkZWZpbmVkLCBydW4gaXQgb24gdGhlIGNzc1xuXHRpZiAob3B0aW9ucy50cmFuc2Zvcm0gJiYgb2JqLmNzcykge1xuXHQgICAgcmVzdWx0ID0gb3B0aW9ucy50cmFuc2Zvcm0ob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB1dGlsXzEgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xudmFyIHByZW1vdmVfMSA9IHJlcXVpcmUoXCIuL3ByZW1vdmVcIik7XG5mdW5jdGlvbiBjYWxsVXNlckZ1bmN0aW9uKGYpIHtcbiAgICB2YXIgYXJncyA9IFtdO1xuICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIGFyZ3NbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgfVxuICAgIGlmIChmKVxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgcmV0dXJuIGYuYXBwbHkodm9pZCAwLCBhcmdzKTsgfSwgMSk7XG59XG5leHBvcnRzLmNhbGxVc2VyRnVuY3Rpb24gPSBjYWxsVXNlckZ1bmN0aW9uO1xuZnVuY3Rpb24gdG9nZ2xlT3JpZW50YXRpb24oc3RhdGUpIHtcbiAgICBzdGF0ZS5vcmllbnRhdGlvbiA9IHV0aWxfMS5vcHBvc2l0ZShzdGF0ZS5vcmllbnRhdGlvbik7XG4gICAgc3RhdGUuYW5pbWF0aW9uLmN1cnJlbnQgPVxuICAgICAgICBzdGF0ZS5kcmFnZ2FibGUuY3VycmVudCA9XG4gICAgICAgICAgICBzdGF0ZS5zZWxlY3RlZCA9IHVuZGVmaW5lZDtcbn1cbmV4cG9ydHMudG9nZ2xlT3JpZW50YXRpb24gPSB0b2dnbGVPcmllbnRhdGlvbjtcbmZ1bmN0aW9uIHJlc2V0KHN0YXRlKSB7XG4gICAgc3RhdGUubGFzdE1vdmUgPSB1bmRlZmluZWQ7XG4gICAgdW5zZWxlY3Qoc3RhdGUpO1xuICAgIHVuc2V0UHJlbW92ZShzdGF0ZSk7XG4gICAgdW5zZXRQcmVkcm9wKHN0YXRlKTtcbn1cbmV4cG9ydHMucmVzZXQgPSByZXNldDtcbmZ1bmN0aW9uIHNldFBpZWNlcyhzdGF0ZSwgcGllY2VzKSB7XG4gICAgZm9yICh2YXIga2V5IGluIHBpZWNlcykge1xuICAgICAgICB2YXIgcGllY2UgPSBwaWVjZXNba2V5XTtcbiAgICAgICAgaWYgKHBpZWNlKVxuICAgICAgICAgICAgc3RhdGUucGllY2VzW2tleV0gPSBwaWVjZTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgZGVsZXRlIHN0YXRlLnBpZWNlc1trZXldO1xuICAgIH1cbn1cbmV4cG9ydHMuc2V0UGllY2VzID0gc2V0UGllY2VzO1xuZnVuY3Rpb24gc2V0Q2hlY2soc3RhdGUsIGNvbG9yKSB7XG4gICAgaWYgKGNvbG9yID09PSB0cnVlKVxuICAgICAgICBjb2xvciA9IHN0YXRlLnR1cm5Db2xvcjtcbiAgICBpZiAoIWNvbG9yKVxuICAgICAgICBzdGF0ZS5jaGVjayA9IHVuZGVmaW5lZDtcbiAgICBlbHNlXG4gICAgICAgIGZvciAodmFyIGsgaW4gc3RhdGUucGllY2VzKSB7XG4gICAgICAgICAgICBpZiAoc3RhdGUucGllY2VzW2tdLnJvbGUgPT09ICdraW5nJyAmJiBzdGF0ZS5waWVjZXNba10uY29sb3IgPT09IGNvbG9yKSB7XG4gICAgICAgICAgICAgICAgc3RhdGUuY2hlY2sgPSBrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG59XG5leHBvcnRzLnNldENoZWNrID0gc2V0Q2hlY2s7XG5mdW5jdGlvbiBzZXRQcmVtb3ZlKHN0YXRlLCBvcmlnLCBkZXN0LCBtZXRhKSB7XG4gICAgdW5zZXRQcmVkcm9wKHN0YXRlKTtcbiAgICBzdGF0ZS5wcmVtb3ZhYmxlLmN1cnJlbnQgPSBbb3JpZywgZGVzdF07XG4gICAgY2FsbFVzZXJGdW5jdGlvbihzdGF0ZS5wcmVtb3ZhYmxlLmV2ZW50cy5zZXQsIG9yaWcsIGRlc3QsIG1ldGEpO1xufVxuZnVuY3Rpb24gdW5zZXRQcmVtb3ZlKHN0YXRlKSB7XG4gICAgaWYgKHN0YXRlLnByZW1vdmFibGUuY3VycmVudCkge1xuICAgICAgICBzdGF0ZS5wcmVtb3ZhYmxlLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgIGNhbGxVc2VyRnVuY3Rpb24oc3RhdGUucHJlbW92YWJsZS5ldmVudHMudW5zZXQpO1xuICAgIH1cbn1cbmV4cG9ydHMudW5zZXRQcmVtb3ZlID0gdW5zZXRQcmVtb3ZlO1xuZnVuY3Rpb24gc2V0UHJlZHJvcChzdGF0ZSwgcm9sZSwga2V5KSB7XG4gICAgdW5zZXRQcmVtb3ZlKHN0YXRlKTtcbiAgICBzdGF0ZS5wcmVkcm9wcGFibGUuY3VycmVudCA9IHtcbiAgICAgICAgcm9sZTogcm9sZSxcbiAgICAgICAga2V5OiBrZXlcbiAgICB9O1xuICAgIGNhbGxVc2VyRnVuY3Rpb24oc3RhdGUucHJlZHJvcHBhYmxlLmV2ZW50cy5zZXQsIHJvbGUsIGtleSk7XG59XG5mdW5jdGlvbiB1bnNldFByZWRyb3Aoc3RhdGUpIHtcbiAgICB2YXIgcGQgPSBzdGF0ZS5wcmVkcm9wcGFibGU7XG4gICAgaWYgKHBkLmN1cnJlbnQpIHtcbiAgICAgICAgcGQuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgY2FsbFVzZXJGdW5jdGlvbihwZC5ldmVudHMudW5zZXQpO1xuICAgIH1cbn1cbmV4cG9ydHMudW5zZXRQcmVkcm9wID0gdW5zZXRQcmVkcm9wO1xuZnVuY3Rpb24gdHJ5QXV0b0Nhc3RsZShzdGF0ZSwgb3JpZywgZGVzdCkge1xuICAgIGlmICghc3RhdGUuYXV0b0Nhc3RsZSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHZhciBraW5nID0gc3RhdGUucGllY2VzW29yaWddO1xuICAgIGlmIChraW5nLnJvbGUgIT09ICdraW5nJylcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHZhciBvcmlnUG9zID0gdXRpbF8xLmtleTJwb3Mob3JpZyk7XG4gICAgaWYgKG9yaWdQb3NbMF0gIT09IDUpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAob3JpZ1Bvc1sxXSAhPT0gMSAmJiBvcmlnUG9zWzFdICE9PSA4KVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgdmFyIGRlc3RQb3MgPSB1dGlsXzEua2V5MnBvcyhkZXN0KTtcbiAgICB2YXIgb2xkUm9va1BvcywgbmV3Um9va1BvcywgbmV3S2luZ1BvcztcbiAgICBpZiAoZGVzdFBvc1swXSA9PT0gNyB8fCBkZXN0UG9zWzBdID09PSA4KSB7XG4gICAgICAgIG9sZFJvb2tQb3MgPSB1dGlsXzEucG9zMmtleShbOCwgb3JpZ1Bvc1sxXV0pO1xuICAgICAgICBuZXdSb29rUG9zID0gdXRpbF8xLnBvczJrZXkoWzYsIG9yaWdQb3NbMV1dKTtcbiAgICAgICAgbmV3S2luZ1BvcyA9IHV0aWxfMS5wb3Mya2V5KFs3LCBvcmlnUG9zWzFdXSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGRlc3RQb3NbMF0gPT09IDMgfHwgZGVzdFBvc1swXSA9PT0gMSkge1xuICAgICAgICBvbGRSb29rUG9zID0gdXRpbF8xLnBvczJrZXkoWzEsIG9yaWdQb3NbMV1dKTtcbiAgICAgICAgbmV3Um9va1BvcyA9IHV0aWxfMS5wb3Mya2V5KFs0LCBvcmlnUG9zWzFdXSk7XG4gICAgICAgIG5ld0tpbmdQb3MgPSB1dGlsXzEucG9zMmtleShbMywgb3JpZ1Bvc1sxXV0pO1xuICAgIH1cbiAgICBlbHNlXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB2YXIgcm9vayA9IHN0YXRlLnBpZWNlc1tvbGRSb29rUG9zXTtcbiAgICBpZiAocm9vay5yb2xlICE9PSAncm9vaycpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBkZWxldGUgc3RhdGUucGllY2VzW29yaWddO1xuICAgIGRlbGV0ZSBzdGF0ZS5waWVjZXNbb2xkUm9va1Bvc107XG4gICAgc3RhdGUucGllY2VzW25ld0tpbmdQb3NdID0ga2luZztcbiAgICBzdGF0ZS5waWVjZXNbbmV3Um9va1Bvc10gPSByb29rO1xuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gYmFzZU1vdmUoc3RhdGUsIG9yaWcsIGRlc3QpIHtcbiAgICBpZiAob3JpZyA9PT0gZGVzdCB8fCAhc3RhdGUucGllY2VzW29yaWddKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgdmFyIGNhcHR1cmVkID0gKHN0YXRlLnBpZWNlc1tkZXN0XSAmJlxuICAgICAgICBzdGF0ZS5waWVjZXNbZGVzdF0uY29sb3IgIT09IHN0YXRlLnBpZWNlc1tvcmlnXS5jb2xvcikgPyBzdGF0ZS5waWVjZXNbZGVzdF0gOiB1bmRlZmluZWQ7XG4gICAgaWYgKGRlc3QgPT0gc3RhdGUuc2VsZWN0ZWQpXG4gICAgICAgIHVuc2VsZWN0KHN0YXRlKTtcbiAgICBjYWxsVXNlckZ1bmN0aW9uKHN0YXRlLmV2ZW50cy5tb3ZlLCBvcmlnLCBkZXN0LCBjYXB0dXJlZCk7XG4gICAgaWYgKCF0cnlBdXRvQ2FzdGxlKHN0YXRlLCBvcmlnLCBkZXN0KSkge1xuICAgICAgICBzdGF0ZS5waWVjZXNbZGVzdF0gPSBzdGF0ZS5waWVjZXNbb3JpZ107XG4gICAgICAgIGRlbGV0ZSBzdGF0ZS5waWVjZXNbb3JpZ107XG4gICAgfVxuICAgIHN0YXRlLmxhc3RNb3ZlID0gW29yaWcsIGRlc3RdO1xuICAgIHN0YXRlLmNoZWNrID0gdW5kZWZpbmVkO1xuICAgIGNhbGxVc2VyRnVuY3Rpb24oc3RhdGUuZXZlbnRzLmNoYW5nZSk7XG4gICAgcmV0dXJuIGNhcHR1cmVkIHx8IHRydWU7XG59XG5leHBvcnRzLmJhc2VNb3ZlID0gYmFzZU1vdmU7XG5mdW5jdGlvbiBiYXNlTmV3UGllY2Uoc3RhdGUsIHBpZWNlLCBrZXksIGZvcmNlKSB7XG4gICAgaWYgKHN0YXRlLnBpZWNlc1trZXldKSB7XG4gICAgICAgIGlmIChmb3JjZSlcbiAgICAgICAgICAgIGRlbGV0ZSBzdGF0ZS5waWVjZXNba2V5XTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjYWxsVXNlckZ1bmN0aW9uKHN0YXRlLmV2ZW50cy5kcm9wTmV3UGllY2UsIHBpZWNlLCBrZXkpO1xuICAgIHN0YXRlLnBpZWNlc1trZXldID0gcGllY2U7XG4gICAgc3RhdGUubGFzdE1vdmUgPSBba2V5XTtcbiAgICBzdGF0ZS5jaGVjayA9IHVuZGVmaW5lZDtcbiAgICBjYWxsVXNlckZ1bmN0aW9uKHN0YXRlLmV2ZW50cy5jaGFuZ2UpO1xuICAgIHN0YXRlLm1vdmFibGUuZGVzdHMgPSB1bmRlZmluZWQ7XG4gICAgc3RhdGUudHVybkNvbG9yID0gdXRpbF8xLm9wcG9zaXRlKHN0YXRlLnR1cm5Db2xvcik7XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnRzLmJhc2VOZXdQaWVjZSA9IGJhc2VOZXdQaWVjZTtcbmZ1bmN0aW9uIGJhc2VVc2VyTW92ZShzdGF0ZSwgb3JpZywgZGVzdCkge1xuICAgIHZhciByZXN1bHQgPSBiYXNlTW92ZShzdGF0ZSwgb3JpZywgZGVzdCk7XG4gICAgaWYgKHJlc3VsdCkge1xuICAgICAgICBzdGF0ZS5tb3ZhYmxlLmRlc3RzID0gdW5kZWZpbmVkO1xuICAgICAgICBzdGF0ZS50dXJuQ29sb3IgPSB1dGlsXzEub3Bwb3NpdGUoc3RhdGUudHVybkNvbG9yKTtcbiAgICAgICAgc3RhdGUuYW5pbWF0aW9uLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiB1c2VyTW92ZShzdGF0ZSwgb3JpZywgZGVzdCkge1xuICAgIGlmIChjYW5Nb3ZlKHN0YXRlLCBvcmlnLCBkZXN0KSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gYmFzZVVzZXJNb3ZlKHN0YXRlLCBvcmlnLCBkZXN0KTtcbiAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgdmFyIGhvbGRUaW1lID0gc3RhdGUuaG9sZC5zdG9wKCk7XG4gICAgICAgICAgICB1bnNlbGVjdChzdGF0ZSk7XG4gICAgICAgICAgICB2YXIgbWV0YWRhdGEgPSB7XG4gICAgICAgICAgICAgICAgcHJlbW92ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgY3RybEtleTogc3RhdGUuc3RhdHMuY3RybEtleSxcbiAgICAgICAgICAgICAgICBob2xkVGltZTogaG9sZFRpbWVcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAocmVzdWx0ICE9PSB0cnVlKVxuICAgICAgICAgICAgICAgIG1ldGFkYXRhLmNhcHR1cmVkID0gcmVzdWx0O1xuICAgICAgICAgICAgY2FsbFVzZXJGdW5jdGlvbihzdGF0ZS5tb3ZhYmxlLmV2ZW50cy5hZnRlciwgb3JpZywgZGVzdCwgbWV0YWRhdGEpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoY2FuUHJlbW92ZShzdGF0ZSwgb3JpZywgZGVzdCkpIHtcbiAgICAgICAgc2V0UHJlbW92ZShzdGF0ZSwgb3JpZywgZGVzdCwge1xuICAgICAgICAgICAgY3RybEtleTogc3RhdGUuc3RhdHMuY3RybEtleVxuICAgICAgICB9KTtcbiAgICAgICAgdW5zZWxlY3Qoc3RhdGUpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc01vdmFibGUoc3RhdGUsIGRlc3QpIHx8IGlzUHJlbW92YWJsZShzdGF0ZSwgZGVzdCkpIHtcbiAgICAgICAgc2V0U2VsZWN0ZWQoc3RhdGUsIGRlc3QpO1xuICAgICAgICBzdGF0ZS5ob2xkLnN0YXJ0KCk7XG4gICAgfVxuICAgIGVsc2VcbiAgICAgICAgdW5zZWxlY3Qoc3RhdGUpO1xuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydHMudXNlck1vdmUgPSB1c2VyTW92ZTtcbmZ1bmN0aW9uIGRyb3BOZXdQaWVjZShzdGF0ZSwgb3JpZywgZGVzdCwgZm9yY2UpIHtcbiAgICBpZiAoY2FuRHJvcChzdGF0ZSwgb3JpZywgZGVzdCkgfHwgZm9yY2UpIHtcbiAgICAgICAgdmFyIHBpZWNlID0gc3RhdGUucGllY2VzW29yaWddO1xuICAgICAgICBkZWxldGUgc3RhdGUucGllY2VzW29yaWddO1xuICAgICAgICBiYXNlTmV3UGllY2Uoc3RhdGUsIHBpZWNlLCBkZXN0LCBmb3JjZSk7XG4gICAgICAgIGNhbGxVc2VyRnVuY3Rpb24oc3RhdGUubW92YWJsZS5ldmVudHMuYWZ0ZXJOZXdQaWVjZSwgcGllY2Uucm9sZSwgZGVzdCwge1xuICAgICAgICAgICAgcHJlZHJvcDogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGNhblByZWRyb3Aoc3RhdGUsIG9yaWcsIGRlc3QpKSB7XG4gICAgICAgIHNldFByZWRyb3Aoc3RhdGUsIHN0YXRlLnBpZWNlc1tvcmlnXS5yb2xlLCBkZXN0KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHVuc2V0UHJlbW92ZShzdGF0ZSk7XG4gICAgICAgIHVuc2V0UHJlZHJvcChzdGF0ZSk7XG4gICAgfVxuICAgIGRlbGV0ZSBzdGF0ZS5waWVjZXNbb3JpZ107XG4gICAgdW5zZWxlY3Qoc3RhdGUpO1xufVxuZXhwb3J0cy5kcm9wTmV3UGllY2UgPSBkcm9wTmV3UGllY2U7XG5mdW5jdGlvbiBzZWxlY3RTcXVhcmUoc3RhdGUsIGtleSwgZm9yY2UpIHtcbiAgICBpZiAoc3RhdGUuc2VsZWN0ZWQpIHtcbiAgICAgICAgaWYgKHN0YXRlLnNlbGVjdGVkID09PSBrZXkgJiYgIXN0YXRlLmRyYWdnYWJsZS5lbmFibGVkKSB7XG4gICAgICAgICAgICB1bnNlbGVjdChzdGF0ZSk7XG4gICAgICAgICAgICBzdGF0ZS5ob2xkLmNhbmNlbCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKChzdGF0ZS5zZWxlY3RhYmxlLmVuYWJsZWQgfHwgZm9yY2UpICYmIHN0YXRlLnNlbGVjdGVkICE9PSBrZXkpIHtcbiAgICAgICAgICAgIGlmICh1c2VyTW92ZShzdGF0ZSwgc3RhdGUuc2VsZWN0ZWQsIGtleSkpXG4gICAgICAgICAgICAgICAgc3RhdGUuc3RhdHMuZHJhZ2dlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHN0YXRlLmhvbGQuc3RhcnQoKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNNb3ZhYmxlKHN0YXRlLCBrZXkpIHx8IGlzUHJlbW92YWJsZShzdGF0ZSwga2V5KSkge1xuICAgICAgICBzZXRTZWxlY3RlZChzdGF0ZSwga2V5KTtcbiAgICAgICAgc3RhdGUuaG9sZC5zdGFydCgpO1xuICAgIH1cbiAgICBjYWxsVXNlckZ1bmN0aW9uKHN0YXRlLmV2ZW50cy5zZWxlY3QsIGtleSk7XG59XG5leHBvcnRzLnNlbGVjdFNxdWFyZSA9IHNlbGVjdFNxdWFyZTtcbmZ1bmN0aW9uIHNldFNlbGVjdGVkKHN0YXRlLCBrZXkpIHtcbiAgICBzdGF0ZS5zZWxlY3RlZCA9IGtleTtcbiAgICBpZiAoaXNQcmVtb3ZhYmxlKHN0YXRlLCBrZXkpKSB7XG4gICAgICAgIHN0YXRlLnByZW1vdmFibGUuZGVzdHMgPSBwcmVtb3ZlXzEuZGVmYXVsdChzdGF0ZS5waWVjZXMsIGtleSwgc3RhdGUucHJlbW92YWJsZS5jYXN0bGUpO1xuICAgIH1cbiAgICBlbHNlXG4gICAgICAgIHN0YXRlLnByZW1vdmFibGUuZGVzdHMgPSB1bmRlZmluZWQ7XG59XG5leHBvcnRzLnNldFNlbGVjdGVkID0gc2V0U2VsZWN0ZWQ7XG5mdW5jdGlvbiB1bnNlbGVjdChzdGF0ZSkge1xuICAgIHN0YXRlLnNlbGVjdGVkID0gdW5kZWZpbmVkO1xuICAgIHN0YXRlLnByZW1vdmFibGUuZGVzdHMgPSB1bmRlZmluZWQ7XG4gICAgc3RhdGUuaG9sZC5jYW5jZWwoKTtcbn1cbmV4cG9ydHMudW5zZWxlY3QgPSB1bnNlbGVjdDtcbmZ1bmN0aW9uIGlzTW92YWJsZShzdGF0ZSwgb3JpZykge1xuICAgIHZhciBwaWVjZSA9IHN0YXRlLnBpZWNlc1tvcmlnXTtcbiAgICByZXR1cm4gcGllY2UgJiYgKHN0YXRlLm1vdmFibGUuY29sb3IgPT09ICdib3RoJyB8fCAoc3RhdGUubW92YWJsZS5jb2xvciA9PT0gcGllY2UuY29sb3IgJiZcbiAgICAgICAgc3RhdGUudHVybkNvbG9yID09PSBwaWVjZS5jb2xvcikpO1xufVxuZnVuY3Rpb24gY2FuTW92ZShzdGF0ZSwgb3JpZywgZGVzdCkge1xuICAgIHJldHVybiBvcmlnICE9PSBkZXN0ICYmIGlzTW92YWJsZShzdGF0ZSwgb3JpZykgJiYgKHN0YXRlLm1vdmFibGUuZnJlZSB8fCAoISFzdGF0ZS5tb3ZhYmxlLmRlc3RzICYmIHV0aWxfMS5jb250YWluc1goc3RhdGUubW92YWJsZS5kZXN0c1tvcmlnXSwgZGVzdCkpKTtcbn1cbmV4cG9ydHMuY2FuTW92ZSA9IGNhbk1vdmU7XG5mdW5jdGlvbiBjYW5Ecm9wKHN0YXRlLCBvcmlnLCBkZXN0KSB7XG4gICAgdmFyIHBpZWNlID0gc3RhdGUucGllY2VzW29yaWddO1xuICAgIHJldHVybiBwaWVjZSAmJiBkZXN0ICYmIChvcmlnID09PSBkZXN0IHx8ICFzdGF0ZS5waWVjZXNbZGVzdF0pICYmIChzdGF0ZS5tb3ZhYmxlLmNvbG9yID09PSAnYm90aCcgfHwgKHN0YXRlLm1vdmFibGUuY29sb3IgPT09IHBpZWNlLmNvbG9yICYmXG4gICAgICAgIHN0YXRlLnR1cm5Db2xvciA9PT0gcGllY2UuY29sb3IpKTtcbn1cbmZ1bmN0aW9uIGlzUHJlbW92YWJsZShzdGF0ZSwgb3JpZykge1xuICAgIHZhciBwaWVjZSA9IHN0YXRlLnBpZWNlc1tvcmlnXTtcbiAgICByZXR1cm4gcGllY2UgJiYgc3RhdGUucHJlbW92YWJsZS5lbmFibGVkICYmXG4gICAgICAgIHN0YXRlLm1vdmFibGUuY29sb3IgPT09IHBpZWNlLmNvbG9yICYmXG4gICAgICAgIHN0YXRlLnR1cm5Db2xvciAhPT0gcGllY2UuY29sb3I7XG59XG5mdW5jdGlvbiBjYW5QcmVtb3ZlKHN0YXRlLCBvcmlnLCBkZXN0KSB7XG4gICAgcmV0dXJuIG9yaWcgIT09IGRlc3QgJiZcbiAgICAgICAgaXNQcmVtb3ZhYmxlKHN0YXRlLCBvcmlnKSAmJlxuICAgICAgICB1dGlsXzEuY29udGFpbnNYKHByZW1vdmVfMS5kZWZhdWx0KHN0YXRlLnBpZWNlcywgb3JpZywgc3RhdGUucHJlbW92YWJsZS5jYXN0bGUpLCBkZXN0KTtcbn1cbmZ1bmN0aW9uIGNhblByZWRyb3Aoc3RhdGUsIG9yaWcsIGRlc3QpIHtcbiAgICB2YXIgcGllY2UgPSBzdGF0ZS5waWVjZXNbb3JpZ107XG4gICAgcmV0dXJuIHBpZWNlICYmIGRlc3QgJiZcbiAgICAgICAgKCFzdGF0ZS5waWVjZXNbZGVzdF0gfHwgc3RhdGUucGllY2VzW2Rlc3RdLmNvbG9yICE9PSBzdGF0ZS5tb3ZhYmxlLmNvbG9yKSAmJlxuICAgICAgICBzdGF0ZS5wcmVkcm9wcGFibGUuZW5hYmxlZCAmJlxuICAgICAgICAocGllY2Uucm9sZSAhPT0gJ3Bhd24nIHx8IChkZXN0WzFdICE9PSAnMScgJiYgZGVzdFsxXSAhPT0gJzgnKSkgJiZcbiAgICAgICAgc3RhdGUubW92YWJsZS5jb2xvciA9PT0gcGllY2UuY29sb3IgJiZcbiAgICAgICAgc3RhdGUudHVybkNvbG9yICE9PSBwaWVjZS5jb2xvcjtcbn1cbmZ1bmN0aW9uIGlzRHJhZ2dhYmxlKHN0YXRlLCBvcmlnKSB7XG4gICAgdmFyIHBpZWNlID0gc3RhdGUucGllY2VzW29yaWddO1xuICAgIHJldHVybiBwaWVjZSAmJiBzdGF0ZS5kcmFnZ2FibGUuZW5hYmxlZCAmJiAoc3RhdGUubW92YWJsZS5jb2xvciA9PT0gJ2JvdGgnIHx8IChzdGF0ZS5tb3ZhYmxlLmNvbG9yID09PSBwaWVjZS5jb2xvciAmJiAoc3RhdGUudHVybkNvbG9yID09PSBwaWVjZS5jb2xvciB8fCBzdGF0ZS5wcmVtb3ZhYmxlLmVuYWJsZWQpKSk7XG59XG5leHBvcnRzLmlzRHJhZ2dhYmxlID0gaXNEcmFnZ2FibGU7XG5mdW5jdGlvbiBwbGF5UHJlbW92ZShzdGF0ZSkge1xuICAgIHZhciBtb3ZlID0gc3RhdGUucHJlbW92YWJsZS5jdXJyZW50O1xuICAgIGlmICghbW92ZSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHZhciBvcmlnID0gbW92ZVswXSwgZGVzdCA9IG1vdmVbMV07XG4gICAgdmFyIHN1Y2Nlc3MgPSBmYWxzZTtcbiAgICBpZiAoY2FuTW92ZShzdGF0ZSwgb3JpZywgZGVzdCkpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IGJhc2VVc2VyTW92ZShzdGF0ZSwgb3JpZywgZGVzdCk7XG4gICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgIHZhciBtZXRhZGF0YSA9IHsgcHJlbW92ZTogdHJ1ZSB9O1xuICAgICAgICAgICAgaWYgKHJlc3VsdCAhPT0gdHJ1ZSlcbiAgICAgICAgICAgICAgICBtZXRhZGF0YS5jYXB0dXJlZCA9IHJlc3VsdDtcbiAgICAgICAgICAgIGNhbGxVc2VyRnVuY3Rpb24oc3RhdGUubW92YWJsZS5ldmVudHMuYWZ0ZXIsIG9yaWcsIGRlc3QsIG1ldGFkYXRhKTtcbiAgICAgICAgICAgIHN1Y2Nlc3MgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVuc2V0UHJlbW92ZShzdGF0ZSk7XG4gICAgcmV0dXJuIHN1Y2Nlc3M7XG59XG5leHBvcnRzLnBsYXlQcmVtb3ZlID0gcGxheVByZW1vdmU7XG5mdW5jdGlvbiBwbGF5UHJlZHJvcChzdGF0ZSwgdmFsaWRhdGUpIHtcbiAgICB2YXIgZHJvcCA9IHN0YXRlLnByZWRyb3BwYWJsZS5jdXJyZW50LCBzdWNjZXNzID0gZmFsc2U7XG4gICAgaWYgKCFkcm9wKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHZhbGlkYXRlKGRyb3ApKSB7XG4gICAgICAgIHZhciBwaWVjZSA9IHtcbiAgICAgICAgICAgIHJvbGU6IGRyb3Aucm9sZSxcbiAgICAgICAgICAgIGNvbG9yOiBzdGF0ZS5tb3ZhYmxlLmNvbG9yXG4gICAgICAgIH07XG4gICAgICAgIGlmIChiYXNlTmV3UGllY2Uoc3RhdGUsIHBpZWNlLCBkcm9wLmtleSkpIHtcbiAgICAgICAgICAgIGNhbGxVc2VyRnVuY3Rpb24oc3RhdGUubW92YWJsZS5ldmVudHMuYWZ0ZXJOZXdQaWVjZSwgZHJvcC5yb2xlLCBkcm9wLmtleSwge1xuICAgICAgICAgICAgICAgIHByZWRyb3A6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc3VjY2VzcyA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdW5zZXRQcmVkcm9wKHN0YXRlKTtcbiAgICByZXR1cm4gc3VjY2Vzcztcbn1cbmV4cG9ydHMucGxheVByZWRyb3AgPSBwbGF5UHJlZHJvcDtcbmZ1bmN0aW9uIGNhbmNlbE1vdmUoc3RhdGUpIHtcbiAgICB1bnNldFByZW1vdmUoc3RhdGUpO1xuICAgIHVuc2V0UHJlZHJvcChzdGF0ZSk7XG4gICAgdW5zZWxlY3Qoc3RhdGUpO1xufVxuZXhwb3J0cy5jYW5jZWxNb3ZlID0gY2FuY2VsTW92ZTtcbmZ1bmN0aW9uIHN0b3Aoc3RhdGUpIHtcbiAgICBzdGF0ZS5tb3ZhYmxlLmNvbG9yID1cbiAgICAgICAgc3RhdGUubW92YWJsZS5kZXN0cyA9XG4gICAgICAgICAgICBzdGF0ZS5hbmltYXRpb24uY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICBjYW5jZWxNb3ZlKHN0YXRlKTtcbn1cbmV4cG9ydHMuc3RvcCA9IHN0b3A7XG5mdW5jdGlvbiBnZXRLZXlBdERvbVBvcyhwb3MsIGFzV2hpdGUsIGJvdW5kcykge1xuICAgIHZhciBmaWxlID0gTWF0aC5jZWlsKDggKiAoKHBvc1swXSAtIGJvdW5kcy5sZWZ0KSAvIGJvdW5kcy53aWR0aCkpO1xuICAgIGlmICghYXNXaGl0ZSlcbiAgICAgICAgZmlsZSA9IDkgLSBmaWxlO1xuICAgIHZhciByYW5rID0gTWF0aC5jZWlsKDggLSAoOCAqICgocG9zWzFdIC0gYm91bmRzLnRvcCkgLyBib3VuZHMuaGVpZ2h0KSkpO1xuICAgIGlmICghYXNXaGl0ZSlcbiAgICAgICAgcmFuayA9IDkgLSByYW5rO1xuICAgIHJldHVybiAoZmlsZSA+IDAgJiYgZmlsZSA8IDkgJiYgcmFuayA+IDAgJiYgcmFuayA8IDkpID8gdXRpbF8xLnBvczJrZXkoW2ZpbGUsIHJhbmtdKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydHMuZ2V0S2V5QXREb21Qb3MgPSBnZXRLZXlBdERvbVBvcztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5maWxlcyA9IFsnYScsICdiJywgJ2MnLCAnZCcsICdlJywgJ2YnLCAnZycsICdoJ107XG5leHBvcnRzLnJhbmtzID0gWzEsIDIsIDMsIDQsIDUsIDYsIDcsIDhdO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdXRpbF8xID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcbnZhciBjZyA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xuZXhwb3J0cy5pbml0aWFsID0gJ3JuYnFrYm5yL3BwcHBwcHBwLzgvOC84LzgvUFBQUFBQUFAvUk5CUUtCTlInO1xudmFyIHJvbGVzID0geyBwOiAncGF3bicsIHI6ICdyb29rJywgbjogJ2tuaWdodCcsIGI6ICdiaXNob3AnLCBxOiAncXVlZW4nLCBrOiAna2luZycgfTtcbnZhciBsZXR0ZXJzID0geyBwYXduOiAncCcsIHJvb2s6ICdyJywga25pZ2h0OiAnbicsIGJpc2hvcDogJ2InLCBxdWVlbjogJ3EnLCBraW5nOiAnaycgfTtcbmZ1bmN0aW9uIHJlYWQoZmVuKSB7XG4gICAgaWYgKGZlbiA9PT0gJ3N0YXJ0JylcbiAgICAgICAgZmVuID0gZXhwb3J0cy5pbml0aWFsO1xuICAgIHZhciBwaWVjZXMgPSB7fTtcbiAgICB2YXIgcm93ID0gODtcbiAgICB2YXIgY29sID0gMDtcbiAgICBmb3IgKHZhciBfaSA9IDAsIGZlbl8xID0gZmVuOyBfaSA8IGZlbl8xLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIgYyA9IGZlbl8xW19pXTtcbiAgICAgICAgc3dpdGNoIChjKSB7XG4gICAgICAgICAgICBjYXNlICcgJzogcmV0dXJuIHBpZWNlcztcbiAgICAgICAgICAgIGNhc2UgJy8nOlxuICAgICAgICAgICAgICAgIC0tcm93O1xuICAgICAgICAgICAgICAgIGlmIChyb3cgPT09IDApXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwaWVjZXM7XG4gICAgICAgICAgICAgICAgY29sID0gMDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ34nOlxuICAgICAgICAgICAgICAgIHBpZWNlc1t1dGlsXzEucG9zMmtleShbY29sLCByb3ddKV0ucHJvbW90ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB2YXIgbmIgPSBjLmNoYXJDb2RlQXQoMCk7XG4gICAgICAgICAgICAgICAgaWYgKG5iIDwgNTcpXG4gICAgICAgICAgICAgICAgICAgIGNvbCArPSBuYiAtIDQ4O1xuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICArK2NvbDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJvbGUgPSBjLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgICAgIHBpZWNlc1t1dGlsXzEucG9zMmtleShbY29sLCByb3ddKV0gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByb2xlOiByb2xlc1tyb2xlXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAoYyA9PT0gcm9sZSA/ICdibGFjaycgOiAnd2hpdGUnKVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcGllY2VzO1xufVxuZXhwb3J0cy5yZWFkID0gcmVhZDtcbmZ1bmN0aW9uIHdyaXRlKHBpZWNlcykge1xuICAgIHZhciBwaWVjZSwgbGV0dGVyO1xuICAgIHJldHVybiB1dGlsXzEuaW52UmFua3MubWFwKGZ1bmN0aW9uICh5KSB7IHJldHVybiBjZy5yYW5rcy5tYXAoZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgcGllY2UgPSBwaWVjZXNbdXRpbF8xLnBvczJrZXkoW3gsIHldKV07XG4gICAgICAgIGlmIChwaWVjZSkge1xuICAgICAgICAgICAgbGV0dGVyID0gbGV0dGVyc1twaWVjZS5yb2xlXTtcbiAgICAgICAgICAgIHJldHVybiBwaWVjZS5jb2xvciA9PT0gJ3doaXRlJyA/IGxldHRlci50b1VwcGVyQ2FzZSgpIDogbGV0dGVyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiAnMSc7XG4gICAgfSkuam9pbignJyk7IH0pLmpvaW4oJy8nKS5yZXBsYWNlKC8xezIsfS9nLCBmdW5jdGlvbiAocykgeyByZXR1cm4gcy5sZW5ndGgudG9TdHJpbmcoKTsgfSk7XG59XG5leHBvcnRzLndyaXRlID0gd3JpdGU7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBib2FyZF8xID0gcmVxdWlyZShcIi4vYm9hcmRcIik7XG52YXIgZmVuXzEgPSByZXF1aXJlKFwiLi9mZW5cIik7XG5mdW5jdGlvbiBjb25maWd1cmUoc3RhdGUsIGNvbmZpZykge1xuICAgIGlmIChjb25maWcubW92YWJsZSAmJiBjb25maWcubW92YWJsZS5kZXN0cylcbiAgICAgICAgc3RhdGUubW92YWJsZS5kZXN0cyA9IHVuZGVmaW5lZDtcbiAgICBtZXJnZShzdGF0ZSwgY29uZmlnKTtcbiAgICBpZiAoY29uZmlnLmZlbikge1xuICAgICAgICBzdGF0ZS5waWVjZXMgPSBmZW5fMS5yZWFkKGNvbmZpZy5mZW4pO1xuICAgICAgICBzdGF0ZS5kcmF3YWJsZS5zaGFwZXMgPSBbXTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZy5oYXNPd25Qcm9wZXJ0eSgnY2hlY2snKSlcbiAgICAgICAgYm9hcmRfMS5zZXRDaGVjayhzdGF0ZSwgY29uZmlnLmNoZWNrIHx8IGZhbHNlKTtcbiAgICBpZiAoY29uZmlnLmhhc093blByb3BlcnR5KCdsYXN0TW92ZScpICYmICFjb25maWcubGFzdE1vdmUpXG4gICAgICAgIHN0YXRlLmxhc3RNb3ZlID0gdW5kZWZpbmVkO1xuICAgIGVsc2UgaWYgKGNvbmZpZy5sYXN0TW92ZSlcbiAgICAgICAgc3RhdGUubGFzdE1vdmUgPSBjb25maWcubGFzdE1vdmU7XG4gICAgaWYgKHN0YXRlLnNlbGVjdGVkKVxuICAgICAgICBib2FyZF8xLnNldFNlbGVjdGVkKHN0YXRlLCBzdGF0ZS5zZWxlY3RlZCk7XG4gICAgaWYgKCFzdGF0ZS5hbmltYXRpb24uZHVyYXRpb24gfHwgc3RhdGUuYW5pbWF0aW9uLmR1cmF0aW9uIDwgMTAwKVxuICAgICAgICBzdGF0ZS5hbmltYXRpb24uZW5hYmxlZCA9IGZhbHNlO1xuICAgIGlmICghc3RhdGUubW92YWJsZS5yb29rQ2FzdGxlICYmIHN0YXRlLm1vdmFibGUuZGVzdHMpIHtcbiAgICAgICAgdmFyIHJhbmtfMSA9IHN0YXRlLm1vdmFibGUuY29sb3IgPT09ICd3aGl0ZScgPyAxIDogODtcbiAgICAgICAgdmFyIGtpbmdTdGFydFBvcyA9ICdlJyArIHJhbmtfMTtcbiAgICAgICAgdmFyIGRlc3RzXzEgPSBzdGF0ZS5tb3ZhYmxlLmRlc3RzW2tpbmdTdGFydFBvc107XG4gICAgICAgIGlmICghZGVzdHNfMSB8fCBzdGF0ZS5waWVjZXNba2luZ1N0YXJ0UG9zXS5yb2xlICE9PSAna2luZycpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHN0YXRlLm1vdmFibGUuZGVzdHNba2luZ1N0YXJ0UG9zXSA9IGRlc3RzXzEuZmlsdGVyKGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICByZXR1cm4gISgoZCA9PT0gJ2EnICsgcmFua18xKSAmJiBkZXN0c18xLmluZGV4T2YoJ2MnICsgcmFua18xKSAhPT0gLTEpICYmXG4gICAgICAgICAgICAgICAgISgoZCA9PT0gJ2gnICsgcmFua18xKSAmJiBkZXN0c18xLmluZGV4T2YoJ2cnICsgcmFua18xKSAhPT0gLTEpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLmNvbmZpZ3VyZSA9IGNvbmZpZ3VyZTtcbjtcbmZ1bmN0aW9uIG1lcmdlKGJhc2UsIGV4dGVuZCkge1xuICAgIGZvciAodmFyIGtleSBpbiBleHRlbmQpIHtcbiAgICAgICAgaWYgKGlzT2JqZWN0KGJhc2Vba2V5XSkgJiYgaXNPYmplY3QoZXh0ZW5kW2tleV0pKVxuICAgICAgICAgICAgbWVyZ2UoYmFzZVtrZXldLCBleHRlbmRba2V5XSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGJhc2Vba2V5XSA9IGV4dGVuZFtrZXldO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGlzT2JqZWN0KG8pIHtcbiAgICByZXR1cm4gdHlwZW9mIG8gPT09ICdvYmplY3QnO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgfVxuICAgIHJldHVybiB0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB1dGlsID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcbmZ1bmN0aW9uIGFuaW0obXV0YXRpb24sIHN0YXRlKSB7XG4gICAgcmV0dXJuIHN0YXRlLmFuaW1hdGlvbi5lbmFibGVkID8gYW5pbWF0ZShtdXRhdGlvbiwgc3RhdGUpIDogcmVuZGVyKG11dGF0aW9uLCBzdGF0ZSk7XG59XG5leHBvcnRzLmFuaW0gPSBhbmltO1xuZnVuY3Rpb24gcmVuZGVyKG11dGF0aW9uLCBzdGF0ZSkge1xuICAgIHZhciByZXN1bHQgPSBtdXRhdGlvbihzdGF0ZSk7XG4gICAgc3RhdGUuZG9tLnJlZHJhdygpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLnJlbmRlciA9IHJlbmRlcjtcbmZ1bmN0aW9uIG1ha2VQaWVjZShrZXksIHBpZWNlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAga2V5OiBrZXksXG4gICAgICAgIHBvczogdXRpbC5rZXkycG9zKGtleSksXG4gICAgICAgIHBpZWNlOiBwaWVjZVxuICAgIH07XG59XG5mdW5jdGlvbiBjbG9zZXIocGllY2UsIHBpZWNlcykge1xuICAgIHJldHVybiBwaWVjZXMuc29ydChmdW5jdGlvbiAocDEsIHAyKSB7XG4gICAgICAgIHJldHVybiB1dGlsLmRpc3RhbmNlU3EocGllY2UucG9zLCBwMS5wb3MpIC0gdXRpbC5kaXN0YW5jZVNxKHBpZWNlLnBvcywgcDIucG9zKTtcbiAgICB9KVswXTtcbn1cbmZ1bmN0aW9uIGNvbXB1dGVQbGFuKHByZXZQaWVjZXMsIGN1cnJlbnQpIHtcbiAgICB2YXIgYW5pbXMgPSB7fSwgYW5pbWVkT3JpZ3MgPSBbXSwgZmFkaW5ncyA9IHt9LCBtaXNzaW5ncyA9IFtdLCBuZXdzID0gW10sIHByZVBpZWNlcyA9IHt9O1xuICAgIHZhciBjdXJQLCBwcmVQLCBpLCB2ZWN0b3I7XG4gICAgZm9yIChpIGluIHByZXZQaWVjZXMpIHtcbiAgICAgICAgcHJlUGllY2VzW2ldID0gbWFrZVBpZWNlKGksIHByZXZQaWVjZXNbaV0pO1xuICAgIH1cbiAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gdXRpbC5hbGxLZXlzOyBfaSA8IF9hLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIga2V5ID0gX2FbX2ldO1xuICAgICAgICBjdXJQID0gY3VycmVudC5waWVjZXNba2V5XTtcbiAgICAgICAgcHJlUCA9IHByZVBpZWNlc1trZXldO1xuICAgICAgICBpZiAoY3VyUCkge1xuICAgICAgICAgICAgaWYgKHByZVApIHtcbiAgICAgICAgICAgICAgICBpZiAoIXV0aWwuc2FtZVBpZWNlKGN1clAsIHByZVAucGllY2UpKSB7XG4gICAgICAgICAgICAgICAgICAgIG1pc3NpbmdzLnB1c2gocHJlUCk7XG4gICAgICAgICAgICAgICAgICAgIG5ld3MucHVzaChtYWtlUGllY2Uoa2V5LCBjdXJQKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIG5ld3MucHVzaChtYWtlUGllY2Uoa2V5LCBjdXJQKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocHJlUClcbiAgICAgICAgICAgIG1pc3NpbmdzLnB1c2gocHJlUCk7XG4gICAgfVxuICAgIG5ld3MuZm9yRWFjaChmdW5jdGlvbiAobmV3UCkge1xuICAgICAgICBwcmVQID0gY2xvc2VyKG5ld1AsIG1pc3NpbmdzLmZpbHRlcihmdW5jdGlvbiAocCkgeyByZXR1cm4gdXRpbC5zYW1lUGllY2UobmV3UC5waWVjZSwgcC5waWVjZSk7IH0pKTtcbiAgICAgICAgaWYgKHByZVApIHtcbiAgICAgICAgICAgIHZlY3RvciA9IFtwcmVQLnBvc1swXSAtIG5ld1AucG9zWzBdLCBwcmVQLnBvc1sxXSAtIG5ld1AucG9zWzFdXTtcbiAgICAgICAgICAgIGFuaW1zW25ld1Aua2V5XSA9IHZlY3Rvci5jb25jYXQodmVjdG9yKTtcbiAgICAgICAgICAgIGFuaW1lZE9yaWdzLnB1c2gocHJlUC5rZXkpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgbWlzc2luZ3MuZm9yRWFjaChmdW5jdGlvbiAocCkge1xuICAgICAgICBpZiAoIXV0aWwuY29udGFpbnNYKGFuaW1lZE9yaWdzLCBwLmtleSkgJiZcbiAgICAgICAgICAgICEoY3VycmVudC5pdGVtcyA/IGN1cnJlbnQuaXRlbXMocC5wb3MsIHAua2V5KSA6IGZhbHNlKSlcbiAgICAgICAgICAgIGZhZGluZ3NbcC5rZXldID0gcC5waWVjZTtcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBhbmltczogYW5pbXMsXG4gICAgICAgIGZhZGluZ3M6IGZhZGluZ3NcbiAgICB9O1xufVxudmFyIHBlcmYgPSB3aW5kb3cucGVyZm9ybWFuY2UgIT09IHVuZGVmaW5lZCA/IHdpbmRvdy5wZXJmb3JtYW5jZSA6IERhdGU7XG5mdW5jdGlvbiBzdGVwKHN0YXRlLCBub3cpIHtcbiAgICB2YXIgY3VyID0gc3RhdGUuYW5pbWF0aW9uLmN1cnJlbnQ7XG4gICAgaWYgKGN1ciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmICghc3RhdGUuZG9tLmRlc3Ryb3llZClcbiAgICAgICAgICAgIHN0YXRlLmRvbS5yZWRyYXdOb3coKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgcmVzdCA9IDEgLSAobm93IC0gY3VyLnN0YXJ0KSAqIGN1ci5mcmVxdWVuY3k7XG4gICAgaWYgKHJlc3QgPD0gMCkge1xuICAgICAgICBzdGF0ZS5hbmltYXRpb24uY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgc3RhdGUuZG9tLnJlZHJhd05vdygpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdmFyIGVhc2UgPSBlYXNpbmcocmVzdCk7XG4gICAgICAgIGZvciAodmFyIGkgaW4gY3VyLnBsYW4uYW5pbXMpIHtcbiAgICAgICAgICAgIHZhciBjZmcgPSBjdXIucGxhbi5hbmltc1tpXTtcbiAgICAgICAgICAgIGNmZ1syXSA9IGNmZ1swXSAqIGVhc2U7XG4gICAgICAgICAgICBjZmdbM10gPSBjZmdbMV0gKiBlYXNlO1xuICAgICAgICB9XG4gICAgICAgIHN0YXRlLmRvbS5yZWRyYXdOb3codHJ1ZSk7XG4gICAgICAgIHV0aWwucmFmKGZ1bmN0aW9uIChub3cpIHtcbiAgICAgICAgICAgIGlmIChub3cgPT09IHZvaWQgMCkgeyBub3cgPSBwZXJmLm5vdygpOyB9XG4gICAgICAgICAgICByZXR1cm4gc3RlcChzdGF0ZSwgbm93KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZnVuY3Rpb24gYW5pbWF0ZShtdXRhdGlvbiwgc3RhdGUpIHtcbiAgICB2YXIgcHJldlBpZWNlcyA9IF9fYXNzaWduKHt9LCBzdGF0ZS5waWVjZXMpO1xuICAgIHZhciByZXN1bHQgPSBtdXRhdGlvbihzdGF0ZSk7XG4gICAgdmFyIHBsYW4gPSBjb21wdXRlUGxhbihwcmV2UGllY2VzLCBzdGF0ZSk7XG4gICAgaWYgKCFpc09iamVjdEVtcHR5KHBsYW4uYW5pbXMpIHx8ICFpc09iamVjdEVtcHR5KHBsYW4uZmFkaW5ncykpIHtcbiAgICAgICAgdmFyIGFscmVhZHlSdW5uaW5nID0gc3RhdGUuYW5pbWF0aW9uLmN1cnJlbnQgJiYgc3RhdGUuYW5pbWF0aW9uLmN1cnJlbnQuc3RhcnQ7XG4gICAgICAgIHN0YXRlLmFuaW1hdGlvbi5jdXJyZW50ID0ge1xuICAgICAgICAgICAgc3RhcnQ6IHBlcmYubm93KCksXG4gICAgICAgICAgICBmcmVxdWVuY3k6IDEgLyBzdGF0ZS5hbmltYXRpb24uZHVyYXRpb24sXG4gICAgICAgICAgICBwbGFuOiBwbGFuXG4gICAgICAgIH07XG4gICAgICAgIGlmICghYWxyZWFkeVJ1bm5pbmcpXG4gICAgICAgICAgICBzdGVwKHN0YXRlLCBwZXJmLm5vdygpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHN0YXRlLmRvbS5yZWRyYXcoKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGlzT2JqZWN0RW1wdHkobykge1xuICAgIGZvciAodmFyIF8gaW4gbylcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gZWFzaW5nKHQpIHtcbiAgICByZXR1cm4gdCA8IDAuNSA/IDQgKiB0ICogdCAqIHQgOiAodCAtIDEpICogKDIgKiB0IC0gMikgKiAoMiAqIHQgLSAyKSArIDE7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBib2FyZCA9IHJlcXVpcmUoXCIuL2JvYXJkXCIpO1xudmFyIHV0aWwgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xudmFyIGRyYXdfMSA9IHJlcXVpcmUoXCIuL2RyYXdcIik7XG52YXIgYW5pbV8xID0gcmVxdWlyZShcIi4vYW5pbVwiKTtcbmZ1bmN0aW9uIHN0YXJ0KHMsIGUpIHtcbiAgICBpZiAoZS5idXR0b24gIT09IHVuZGVmaW5lZCAmJiBlLmJ1dHRvbiAhPT0gMClcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChlLnRvdWNoZXMgJiYgZS50b3VjaGVzLmxlbmd0aCA+IDEpXG4gICAgICAgIHJldHVybjtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIGFzV2hpdGUgPSBzLm9yaWVudGF0aW9uID09PSAnd2hpdGUnLCBib3VuZHMgPSBzLmRvbS5ib3VuZHMoKSwgcG9zaXRpb24gPSB1dGlsLmV2ZW50UG9zaXRpb24oZSksIG9yaWcgPSBib2FyZC5nZXRLZXlBdERvbVBvcyhwb3NpdGlvbiwgYXNXaGl0ZSwgYm91bmRzKTtcbiAgICBpZiAoIW9yaWcpXG4gICAgICAgIHJldHVybjtcbiAgICB2YXIgcGllY2UgPSBzLnBpZWNlc1tvcmlnXTtcbiAgICB2YXIgcHJldmlvdXNseVNlbGVjdGVkID0gcy5zZWxlY3RlZDtcbiAgICBpZiAoIXByZXZpb3VzbHlTZWxlY3RlZCAmJiBzLmRyYXdhYmxlLmVuYWJsZWQgJiYgKHMuZHJhd2FibGUuZXJhc2VPbkNsaWNrIHx8ICghcGllY2UgfHwgcGllY2UuY29sb3IgIT09IHMudHVybkNvbG9yKSkpXG4gICAgICAgIGRyYXdfMS5jbGVhcihzKTtcbiAgICB2YXIgaGFkUHJlbW92ZSA9ICEhcy5wcmVtb3ZhYmxlLmN1cnJlbnQ7XG4gICAgdmFyIGhhZFByZWRyb3AgPSAhIXMucHJlZHJvcHBhYmxlLmN1cnJlbnQ7XG4gICAgcy5zdGF0cy5jdHJsS2V5ID0gZS5jdHJsS2V5O1xuICAgIGlmIChzLnNlbGVjdGVkICYmIGJvYXJkLmNhbk1vdmUocywgcy5zZWxlY3RlZCwgb3JpZykpIHtcbiAgICAgICAgYW5pbV8xLmFuaW0oZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBib2FyZC5zZWxlY3RTcXVhcmUoc3RhdGUsIG9yaWcpOyB9LCBzKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGJvYXJkLnNlbGVjdFNxdWFyZShzLCBvcmlnKTtcbiAgICB9XG4gICAgdmFyIHN0aWxsU2VsZWN0ZWQgPSBzLnNlbGVjdGVkID09PSBvcmlnO1xuICAgIHZhciBlbGVtZW50ID0gcGllY2VFbGVtZW50QnlLZXkocywgb3JpZyk7XG4gICAgaWYgKHBpZWNlICYmIGVsZW1lbnQgJiYgc3RpbGxTZWxlY3RlZCAmJiBib2FyZC5pc0RyYWdnYWJsZShzLCBvcmlnKSkge1xuICAgICAgICB2YXIgc3F1YXJlQm91bmRzID0gY29tcHV0ZVNxdWFyZUJvdW5kcyhvcmlnLCBhc1doaXRlLCBib3VuZHMpO1xuICAgICAgICBzLmRyYWdnYWJsZS5jdXJyZW50ID0ge1xuICAgICAgICAgICAgb3JpZzogb3JpZyxcbiAgICAgICAgICAgIG9yaWdQb3M6IHV0aWwua2V5MnBvcyhvcmlnKSxcbiAgICAgICAgICAgIHBpZWNlOiBwaWVjZSxcbiAgICAgICAgICAgIHJlbDogcG9zaXRpb24sXG4gICAgICAgICAgICBlcG9zOiBwb3NpdGlvbixcbiAgICAgICAgICAgIHBvczogWzAsIDBdLFxuICAgICAgICAgICAgZGVjOiBzLmRyYWdnYWJsZS5jZW50ZXJQaWVjZSA/IFtcbiAgICAgICAgICAgICAgICBwb3NpdGlvblswXSAtIChzcXVhcmVCb3VuZHMubGVmdCArIHNxdWFyZUJvdW5kcy53aWR0aCAvIDIpLFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uWzFdIC0gKHNxdWFyZUJvdW5kcy50b3AgKyBzcXVhcmVCb3VuZHMuaGVpZ2h0IC8gMilcbiAgICAgICAgICAgIF0gOiBbMCwgMF0sXG4gICAgICAgICAgICBzdGFydGVkOiBzLmRyYWdnYWJsZS5hdXRvRGlzdGFuY2UgJiYgcy5zdGF0cy5kcmFnZ2VkLFxuICAgICAgICAgICAgZWxlbWVudDogZWxlbWVudCxcbiAgICAgICAgICAgIHByZXZpb3VzbHlTZWxlY3RlZDogcHJldmlvdXNseVNlbGVjdGVkLFxuICAgICAgICAgICAgb3JpZ2luVGFyZ2V0OiBlLnRhcmdldFxuICAgICAgICB9O1xuICAgICAgICBlbGVtZW50LmNnRHJhZ2dpbmcgPSB0cnVlO1xuICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2RyYWdnaW5nJyk7XG4gICAgICAgIHZhciBnaG9zdCA9IHMuZG9tLmVsZW1lbnRzLmdob3N0O1xuICAgICAgICBpZiAoZ2hvc3QpIHtcbiAgICAgICAgICAgIGdob3N0LmNsYXNzTmFtZSA9IFwiZ2hvc3QgXCIgKyBwaWVjZS5jb2xvciArIFwiIFwiICsgcGllY2Uucm9sZTtcbiAgICAgICAgICAgIHV0aWwudHJhbnNsYXRlQWJzKGdob3N0LCB1dGlsLnBvc1RvVHJhbnNsYXRlQWJzKGJvdW5kcykodXRpbC5rZXkycG9zKG9yaWcpLCBhc1doaXRlKSk7XG4gICAgICAgICAgICB1dGlsLnNldFZpc2libGUoZ2hvc3QsIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIHByb2Nlc3NEcmFnKHMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKGhhZFByZW1vdmUpXG4gICAgICAgICAgICBib2FyZC51bnNldFByZW1vdmUocyk7XG4gICAgICAgIGlmIChoYWRQcmVkcm9wKVxuICAgICAgICAgICAgYm9hcmQudW5zZXRQcmVkcm9wKHMpO1xuICAgIH1cbiAgICBzLmRvbS5yZWRyYXcoKTtcbn1cbmV4cG9ydHMuc3RhcnQgPSBzdGFydDtcbmZ1bmN0aW9uIGRyYWdOZXdQaWVjZShzLCBwaWVjZSwgZSwgZm9yY2UpIHtcbiAgICB2YXIga2V5ID0gJ2EwJztcbiAgICBzLnBpZWNlc1trZXldID0gcGllY2U7XG4gICAgcy5kb20ucmVkcmF3KCk7XG4gICAgdmFyIHBvc2l0aW9uID0gdXRpbC5ldmVudFBvc2l0aW9uKGUpLCBhc1doaXRlID0gcy5vcmllbnRhdGlvbiA9PT0gJ3doaXRlJywgYm91bmRzID0gcy5kb20uYm91bmRzKCksIHNxdWFyZUJvdW5kcyA9IGNvbXB1dGVTcXVhcmVCb3VuZHMoa2V5LCBhc1doaXRlLCBib3VuZHMpO1xuICAgIHZhciByZWwgPSBbXG4gICAgICAgIChhc1doaXRlID8gMCA6IDcpICogc3F1YXJlQm91bmRzLndpZHRoICsgYm91bmRzLmxlZnQsXG4gICAgICAgIChhc1doaXRlID8gOCA6IC0xKSAqIHNxdWFyZUJvdW5kcy5oZWlnaHQgKyBib3VuZHMudG9wXG4gICAgXTtcbiAgICBzLmRyYWdnYWJsZS5jdXJyZW50ID0ge1xuICAgICAgICBvcmlnOiBrZXksXG4gICAgICAgIG9yaWdQb3M6IHV0aWwua2V5MnBvcyhrZXkpLFxuICAgICAgICBwaWVjZTogcGllY2UsXG4gICAgICAgIHJlbDogcmVsLFxuICAgICAgICBlcG9zOiBwb3NpdGlvbixcbiAgICAgICAgcG9zOiBbcG9zaXRpb25bMF0gLSByZWxbMF0sIHBvc2l0aW9uWzFdIC0gcmVsWzFdXSxcbiAgICAgICAgZGVjOiBbLXNxdWFyZUJvdW5kcy53aWR0aCAvIDIsIC1zcXVhcmVCb3VuZHMuaGVpZ2h0IC8gMl0sXG4gICAgICAgIHN0YXJ0ZWQ6IHRydWUsXG4gICAgICAgIGVsZW1lbnQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBpZWNlRWxlbWVudEJ5S2V5KHMsIGtleSk7IH0sXG4gICAgICAgIG9yaWdpblRhcmdldDogZS50YXJnZXQsXG4gICAgICAgIG5ld1BpZWNlOiB0cnVlLFxuICAgICAgICBmb3JjZTogZm9yY2UgfHwgZmFsc2VcbiAgICB9O1xuICAgIHByb2Nlc3NEcmFnKHMpO1xufVxuZXhwb3J0cy5kcmFnTmV3UGllY2UgPSBkcmFnTmV3UGllY2U7XG5mdW5jdGlvbiBwcm9jZXNzRHJhZyhzKSB7XG4gICAgdXRpbC5yYWYoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY3VyID0gcy5kcmFnZ2FibGUuY3VycmVudDtcbiAgICAgICAgaWYgKCFjdXIpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlmIChzLmFuaW1hdGlvbi5jdXJyZW50ICYmIHMuYW5pbWF0aW9uLmN1cnJlbnQucGxhbi5hbmltc1tjdXIub3JpZ10pXG4gICAgICAgICAgICBzLmFuaW1hdGlvbi5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgICAgICB2YXIgb3JpZ1BpZWNlID0gcy5waWVjZXNbY3VyLm9yaWddO1xuICAgICAgICBpZiAoIW9yaWdQaWVjZSB8fCAhdXRpbC5zYW1lUGllY2Uob3JpZ1BpZWNlLCBjdXIucGllY2UpKVxuICAgICAgICAgICAgY2FuY2VsKHMpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmICghY3VyLnN0YXJ0ZWQgJiYgdXRpbC5kaXN0YW5jZVNxKGN1ci5lcG9zLCBjdXIucmVsKSA+PSBNYXRoLnBvdyhzLmRyYWdnYWJsZS5kaXN0YW5jZSwgMikpXG4gICAgICAgICAgICAgICAgY3VyLnN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKGN1ci5zdGFydGVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjdXIuZWxlbWVudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZm91bmQgPSBjdXIuZWxlbWVudCgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWZvdW5kKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICBjdXIuZWxlbWVudCA9IGZvdW5kO1xuICAgICAgICAgICAgICAgICAgICBjdXIuZWxlbWVudC5jZ0RyYWdnaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgY3VyLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZHJhZ2dpbmcnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGFzV2hpdGUgPSBzLm9yaWVudGF0aW9uID09PSAnd2hpdGUnLCBib3VuZHMgPSBzLmRvbS5ib3VuZHMoKTtcbiAgICAgICAgICAgICAgICBjdXIucG9zID0gW1xuICAgICAgICAgICAgICAgICAgICBjdXIuZXBvc1swXSAtIGN1ci5yZWxbMF0sXG4gICAgICAgICAgICAgICAgICAgIGN1ci5lcG9zWzFdIC0gY3VyLnJlbFsxXVxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgdmFyIHRyYW5zbGF0aW9uID0gdXRpbC5wb3NUb1RyYW5zbGF0ZUFicyhib3VuZHMpKGN1ci5vcmlnUG9zLCBhc1doaXRlKTtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvblswXSArPSBjdXIucG9zWzBdICsgY3VyLmRlY1swXTtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvblsxXSArPSBjdXIucG9zWzFdICsgY3VyLmRlY1sxXTtcbiAgICAgICAgICAgICAgICB1dGlsLnRyYW5zbGF0ZUFicyhjdXIuZWxlbWVudCwgdHJhbnNsYXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHByb2Nlc3NEcmFnKHMpO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gbW92ZShzLCBlKSB7XG4gICAgaWYgKHMuZHJhZ2dhYmxlLmN1cnJlbnQgJiYgKCFlLnRvdWNoZXMgfHwgZS50b3VjaGVzLmxlbmd0aCA8IDIpKSB7XG4gICAgICAgIHMuZHJhZ2dhYmxlLmN1cnJlbnQuZXBvcyA9IHV0aWwuZXZlbnRQb3NpdGlvbihlKTtcbiAgICB9XG59XG5leHBvcnRzLm1vdmUgPSBtb3ZlO1xuZnVuY3Rpb24gZW5kKHMsIGUpIHtcbiAgICB2YXIgY3VyID0gcy5kcmFnZ2FibGUuY3VycmVudDtcbiAgICBpZiAoIWN1cilcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChlLnR5cGUgPT09ICd0b3VjaGVuZCcgJiYgY3VyICYmIGN1ci5vcmlnaW5UYXJnZXQgIT09IGUudGFyZ2V0ICYmICFjdXIubmV3UGllY2UpIHtcbiAgICAgICAgcy5kcmFnZ2FibGUuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBib2FyZC51bnNldFByZW1vdmUocyk7XG4gICAgYm9hcmQudW5zZXRQcmVkcm9wKHMpO1xuICAgIHZhciBldmVudFBvcyA9IHV0aWwuZXZlbnRQb3NpdGlvbihlKSB8fCBjdXIuZXBvcztcbiAgICB2YXIgZGVzdCA9IGJvYXJkLmdldEtleUF0RG9tUG9zKGV2ZW50UG9zLCBzLm9yaWVudGF0aW9uID09PSAnd2hpdGUnLCBzLmRvbS5ib3VuZHMoKSk7XG4gICAgaWYgKGRlc3QgJiYgY3VyLnN0YXJ0ZWQpIHtcbiAgICAgICAgaWYgKGN1ci5uZXdQaWVjZSlcbiAgICAgICAgICAgIGJvYXJkLmRyb3BOZXdQaWVjZShzLCBjdXIub3JpZywgZGVzdCwgY3VyLmZvcmNlKTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzLnN0YXRzLmN0cmxLZXkgPSBlLmN0cmxLZXk7XG4gICAgICAgICAgICBpZiAoYm9hcmQudXNlck1vdmUocywgY3VyLm9yaWcsIGRlc3QpKVxuICAgICAgICAgICAgICAgIHMuc3RhdHMuZHJhZ2dlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoY3VyLm5ld1BpZWNlKSB7XG4gICAgICAgIGRlbGV0ZSBzLnBpZWNlc1tjdXIub3JpZ107XG4gICAgfVxuICAgIGVsc2UgaWYgKHMuZHJhZ2dhYmxlLmRlbGV0ZU9uRHJvcE9mZikge1xuICAgICAgICBkZWxldGUgcy5waWVjZXNbY3VyLm9yaWddO1xuICAgICAgICBib2FyZC5jYWxsVXNlckZ1bmN0aW9uKHMuZXZlbnRzLmNoYW5nZSk7XG4gICAgfVxuICAgIGlmIChjdXIgJiYgY3VyLm9yaWcgPT09IGN1ci5wcmV2aW91c2x5U2VsZWN0ZWQgJiYgKGN1ci5vcmlnID09PSBkZXN0IHx8ICFkZXN0KSlcbiAgICAgICAgYm9hcmQudW5zZWxlY3Qocyk7XG4gICAgZWxzZSBpZiAoIXMuc2VsZWN0YWJsZS5lbmFibGVkKVxuICAgICAgICBib2FyZC51bnNlbGVjdChzKTtcbiAgICByZW1vdmVEcmFnRWxlbWVudHMocyk7XG4gICAgcy5kcmFnZ2FibGUuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICBzLmRvbS5yZWRyYXcoKTtcbn1cbmV4cG9ydHMuZW5kID0gZW5kO1xuZnVuY3Rpb24gY2FuY2VsKHMpIHtcbiAgICB2YXIgY3VyID0gcy5kcmFnZ2FibGUuY3VycmVudDtcbiAgICBpZiAoY3VyKSB7XG4gICAgICAgIGlmIChjdXIubmV3UGllY2UpXG4gICAgICAgICAgICBkZWxldGUgcy5waWVjZXNbY3VyLm9yaWddO1xuICAgICAgICBzLmRyYWdnYWJsZS5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgICAgICBib2FyZC51bnNlbGVjdChzKTtcbiAgICAgICAgcmVtb3ZlRHJhZ0VsZW1lbnRzKHMpO1xuICAgICAgICBzLmRvbS5yZWRyYXcoKTtcbiAgICB9XG59XG5leHBvcnRzLmNhbmNlbCA9IGNhbmNlbDtcbmZ1bmN0aW9uIHJlbW92ZURyYWdFbGVtZW50cyhzKSB7XG4gICAgdmFyIGUgPSBzLmRvbS5lbGVtZW50cztcbiAgICBpZiAoZS5naG9zdClcbiAgICAgICAgdXRpbC5zZXRWaXNpYmxlKGUuZ2hvc3QsIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIGNvbXB1dGVTcXVhcmVCb3VuZHMoa2V5LCBhc1doaXRlLCBib3VuZHMpIHtcbiAgICB2YXIgcG9zID0gdXRpbC5rZXkycG9zKGtleSk7XG4gICAgaWYgKCFhc1doaXRlKSB7XG4gICAgICAgIHBvc1swXSA9IDkgLSBwb3NbMF07XG4gICAgICAgIHBvc1sxXSA9IDkgLSBwb3NbMV07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGxlZnQ6IGJvdW5kcy5sZWZ0ICsgYm91bmRzLndpZHRoICogKHBvc1swXSAtIDEpIC8gOCxcbiAgICAgICAgdG9wOiBib3VuZHMudG9wICsgYm91bmRzLmhlaWdodCAqICg4IC0gcG9zWzFdKSAvIDgsXG4gICAgICAgIHdpZHRoOiBib3VuZHMud2lkdGggLyA4LFxuICAgICAgICBoZWlnaHQ6IGJvdW5kcy5oZWlnaHQgLyA4XG4gICAgfTtcbn1cbmZ1bmN0aW9uIHBpZWNlRWxlbWVudEJ5S2V5KHMsIGtleSkge1xuICAgIHZhciBlbCA9IHMuZG9tLmVsZW1lbnRzLmJvYXJkLmZpcnN0Q2hpbGQ7XG4gICAgd2hpbGUgKGVsKSB7XG4gICAgICAgIGlmIChlbC5jZ0tleSA9PT0ga2V5ICYmIGVsLnRhZ05hbWUgPT09ICdQSUVDRScpXG4gICAgICAgICAgICByZXR1cm4gZWw7XG4gICAgICAgIGVsID0gZWwubmV4dFNpYmxpbmc7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBib2FyZF8xID0gcmVxdWlyZShcIi4vYm9hcmRcIik7XG52YXIgdXRpbF8xID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcbnZhciBicnVzaGVzID0gWydncmVlbicsICdyZWQnLCAnYmx1ZScsICd5ZWxsb3cnXTtcbmZ1bmN0aW9uIHN0YXJ0KHN0YXRlLCBlKSB7XG4gICAgaWYgKGUudG91Y2hlcyAmJiBlLnRvdWNoZXMubGVuZ3RoID4gMSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGUuY3RybEtleSA/IGJvYXJkXzEudW5zZWxlY3Qoc3RhdGUpIDogYm9hcmRfMS5jYW5jZWxNb3ZlKHN0YXRlKTtcbiAgICB2YXIgcG9zaXRpb24gPSB1dGlsXzEuZXZlbnRQb3NpdGlvbihlKTtcbiAgICB2YXIgb3JpZyA9IGJvYXJkXzEuZ2V0S2V5QXREb21Qb3MocG9zaXRpb24sIHN0YXRlLm9yaWVudGF0aW9uID09PSAnd2hpdGUnLCBzdGF0ZS5kb20uYm91bmRzKCkpO1xuICAgIGlmICghb3JpZylcbiAgICAgICAgcmV0dXJuO1xuICAgIHN0YXRlLmRyYXdhYmxlLmN1cnJlbnQgPSB7XG4gICAgICAgIG9yaWc6IG9yaWcsXG4gICAgICAgIHBvczogcG9zaXRpb24sXG4gICAgICAgIGJydXNoOiBldmVudEJydXNoKGUpXG4gICAgfTtcbiAgICBwcm9jZXNzRHJhdyhzdGF0ZSk7XG59XG5leHBvcnRzLnN0YXJ0ID0gc3RhcnQ7XG5mdW5jdGlvbiBwcm9jZXNzRHJhdyhzdGF0ZSkge1xuICAgIHV0aWxfMS5yYWYoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY3VyID0gc3RhdGUuZHJhd2FibGUuY3VycmVudDtcbiAgICAgICAgaWYgKGN1cikge1xuICAgICAgICAgICAgdmFyIG1vdXNlU3EgPSBib2FyZF8xLmdldEtleUF0RG9tUG9zKGN1ci5wb3MsIHN0YXRlLm9yaWVudGF0aW9uID09PSAnd2hpdGUnLCBzdGF0ZS5kb20uYm91bmRzKCkpO1xuICAgICAgICAgICAgaWYgKG1vdXNlU3EgIT09IGN1ci5tb3VzZVNxKSB7XG4gICAgICAgICAgICAgICAgY3VyLm1vdXNlU3EgPSBtb3VzZVNxO1xuICAgICAgICAgICAgICAgIGN1ci5kZXN0ID0gbW91c2VTcSAhPT0gY3VyLm9yaWcgPyBtb3VzZVNxIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIHN0YXRlLmRvbS5yZWRyYXdOb3coKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHByb2Nlc3NEcmF3KHN0YXRlKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5wcm9jZXNzRHJhdyA9IHByb2Nlc3NEcmF3O1xuZnVuY3Rpb24gbW92ZShzdGF0ZSwgZSkge1xuICAgIGlmIChzdGF0ZS5kcmF3YWJsZS5jdXJyZW50KVxuICAgICAgICBzdGF0ZS5kcmF3YWJsZS5jdXJyZW50LnBvcyA9IHV0aWxfMS5ldmVudFBvc2l0aW9uKGUpO1xufVxuZXhwb3J0cy5tb3ZlID0gbW92ZTtcbmZ1bmN0aW9uIGVuZChzdGF0ZSkge1xuICAgIHZhciBjdXIgPSBzdGF0ZS5kcmF3YWJsZS5jdXJyZW50O1xuICAgIGlmIChjdXIpIHtcbiAgICAgICAgaWYgKGN1ci5tb3VzZVNxKVxuICAgICAgICAgICAgYWRkU2hhcGUoc3RhdGUuZHJhd2FibGUsIGN1cik7XG4gICAgICAgIGNhbmNlbChzdGF0ZSk7XG4gICAgfVxufVxuZXhwb3J0cy5lbmQgPSBlbmQ7XG5mdW5jdGlvbiBjYW5jZWwoc3RhdGUpIHtcbiAgICBpZiAoc3RhdGUuZHJhd2FibGUuY3VycmVudCkge1xuICAgICAgICBzdGF0ZS5kcmF3YWJsZS5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgICAgICBzdGF0ZS5kb20ucmVkcmF3KCk7XG4gICAgfVxufVxuZXhwb3J0cy5jYW5jZWwgPSBjYW5jZWw7XG5mdW5jdGlvbiBjbGVhcihzdGF0ZSkge1xuICAgIGlmIChzdGF0ZS5kcmF3YWJsZS5zaGFwZXMubGVuZ3RoKSB7XG4gICAgICAgIHN0YXRlLmRyYXdhYmxlLnNoYXBlcyA9IFtdO1xuICAgICAgICBzdGF0ZS5kb20ucmVkcmF3KCk7XG4gICAgICAgIG9uQ2hhbmdlKHN0YXRlLmRyYXdhYmxlKTtcbiAgICB9XG59XG5leHBvcnRzLmNsZWFyID0gY2xlYXI7XG5mdW5jdGlvbiBldmVudEJydXNoKGUpIHtcbiAgICB2YXIgYSA9IGUuc2hpZnRLZXkgJiYgdXRpbF8xLmlzUmlnaHRCdXR0b24oZSkgPyAxIDogMDtcbiAgICB2YXIgYiA9IGUuYWx0S2V5ID8gMiA6IDA7XG4gICAgcmV0dXJuIGJydXNoZXNbYSArIGJdO1xufVxuZnVuY3Rpb24gbm90KGYpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHgpIHsgcmV0dXJuICFmKHgpOyB9O1xufVxuZnVuY3Rpb24gYWRkU2hhcGUoZHJhd2FibGUsIGN1cikge1xuICAgIHZhciBzYW1lU2hhcGUgPSBmdW5jdGlvbiAocykge1xuICAgICAgICByZXR1cm4gcy5vcmlnID09PSBjdXIub3JpZyAmJiBzLmRlc3QgPT09IGN1ci5kZXN0O1xuICAgIH07XG4gICAgdmFyIHNpbWlsYXIgPSBkcmF3YWJsZS5zaGFwZXMuZmlsdGVyKHNhbWVTaGFwZSlbMF07XG4gICAgaWYgKHNpbWlsYXIpXG4gICAgICAgIGRyYXdhYmxlLnNoYXBlcyA9IGRyYXdhYmxlLnNoYXBlcy5maWx0ZXIobm90KHNhbWVTaGFwZSkpO1xuICAgIGlmICghc2ltaWxhciB8fCBzaW1pbGFyLmJydXNoICE9PSBjdXIuYnJ1c2gpXG4gICAgICAgIGRyYXdhYmxlLnNoYXBlcy5wdXNoKGN1cik7XG4gICAgb25DaGFuZ2UoZHJhd2FibGUpO1xufVxuZnVuY3Rpb24gb25DaGFuZ2UoZHJhd2FibGUpIHtcbiAgICBpZiAoZHJhd2FibGUub25DaGFuZ2UpXG4gICAgICAgIGRyYXdhYmxlLm9uQ2hhbmdlKGRyYXdhYmxlLnNoYXBlcyk7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB1dGlsXzEgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuZnVuY3Rpb24gY3JlYXRlRWxlbWVudCh0YWdOYW1lKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCB0YWdOYW1lKTtcbn1cbmV4cG9ydHMuY3JlYXRlRWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQ7XG52YXIgaXNUcmlkZW50O1xuZnVuY3Rpb24gcmVuZGVyU3ZnKHN0YXRlLCByb290KSB7XG4gICAgdmFyIGQgPSBzdGF0ZS5kcmF3YWJsZSwgY3VyRCA9IGQuY3VycmVudCwgY3VyID0gY3VyRCAmJiBjdXJELm1vdXNlU3EgPyBjdXJEIDogdW5kZWZpbmVkLCBhcnJvd0Rlc3RzID0ge307XG4gICAgZC5zaGFwZXMuY29uY2F0KGQuYXV0b1NoYXBlcykuY29uY2F0KGN1ciA/IFtjdXJdIDogW10pLmZvckVhY2goZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgaWYgKHMuZGVzdClcbiAgICAgICAgICAgIGFycm93RGVzdHNbcy5kZXN0XSA9IChhcnJvd0Rlc3RzW3MuZGVzdF0gfHwgMCkgKyAxO1xuICAgIH0pO1xuICAgIHZhciBzaGFwZXMgPSBkLnNoYXBlcy5jb25jYXQoZC5hdXRvU2hhcGVzKS5tYXAoZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNoYXBlOiBzLFxuICAgICAgICAgICAgY3VycmVudDogZmFsc2UsXG4gICAgICAgICAgICBoYXNoOiBzaGFwZUhhc2gocywgYXJyb3dEZXN0cywgZmFsc2UpXG4gICAgICAgIH07XG4gICAgfSk7XG4gICAgaWYgKGN1cilcbiAgICAgICAgc2hhcGVzLnB1c2goe1xuICAgICAgICAgICAgc2hhcGU6IGN1cixcbiAgICAgICAgICAgIGN1cnJlbnQ6IHRydWUsXG4gICAgICAgICAgICBoYXNoOiBzaGFwZUhhc2goY3VyLCBhcnJvd0Rlc3RzLCB0cnVlKVxuICAgICAgICB9KTtcbiAgICB2YXIgZnVsbEhhc2ggPSBzaGFwZXMubWFwKGZ1bmN0aW9uIChzYykgeyByZXR1cm4gc2MuaGFzaDsgfSkuam9pbignJyk7XG4gICAgaWYgKGZ1bGxIYXNoID09PSBzdGF0ZS5kcmF3YWJsZS5wcmV2U3ZnSGFzaClcbiAgICAgICAgcmV0dXJuO1xuICAgIHN0YXRlLmRyYXdhYmxlLnByZXZTdmdIYXNoID0gZnVsbEhhc2g7XG4gICAgdmFyIGRlZnNFbCA9IHJvb3QuZmlyc3RDaGlsZDtcbiAgICBzeW5jRGVmcyhkLCBzaGFwZXMsIGRlZnNFbCk7XG4gICAgc3luY1NoYXBlcyhzdGF0ZSwgc2hhcGVzLCBkLmJydXNoZXMsIGFycm93RGVzdHMsIHJvb3QsIGRlZnNFbCk7XG59XG5leHBvcnRzLnJlbmRlclN2ZyA9IHJlbmRlclN2ZztcbmZ1bmN0aW9uIHN5bmNEZWZzKGQsIHNoYXBlcywgZGVmc0VsKSB7XG4gICAgdmFyIGJydXNoZXMgPSB7fTtcbiAgICB2YXIgYnJ1c2g7XG4gICAgc2hhcGVzLmZvckVhY2goZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgaWYgKHMuc2hhcGUuZGVzdCkge1xuICAgICAgICAgICAgYnJ1c2ggPSBkLmJydXNoZXNbcy5zaGFwZS5icnVzaF07XG4gICAgICAgICAgICBpZiAocy5zaGFwZS5tb2RpZmllcnMpXG4gICAgICAgICAgICAgICAgYnJ1c2ggPSBtYWtlQ3VzdG9tQnJ1c2goYnJ1c2gsIHMuc2hhcGUubW9kaWZpZXJzKTtcbiAgICAgICAgICAgIGJydXNoZXNbYnJ1c2gua2V5XSA9IGJydXNoO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgdmFyIGtleXNJbkRvbSA9IHt9O1xuICAgIHZhciBlbCA9IGRlZnNFbC5maXJzdENoaWxkO1xuICAgIHdoaWxlIChlbCkge1xuICAgICAgICBrZXlzSW5Eb21bZWwuZ2V0QXR0cmlidXRlKCdjZ0tleScpXSA9IHRydWU7XG4gICAgICAgIGVsID0gZWwubmV4dFNpYmxpbmc7XG4gICAgfVxuICAgIGZvciAodmFyIGtleSBpbiBicnVzaGVzKSB7XG4gICAgICAgIGlmICgha2V5c0luRG9tW2tleV0pXG4gICAgICAgICAgICBkZWZzRWwuYXBwZW5kQ2hpbGQocmVuZGVyTWFya2VyKGJydXNoZXNba2V5XSkpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHN5bmNTaGFwZXMoc3RhdGUsIHNoYXBlcywgYnJ1c2hlcywgYXJyb3dEZXN0cywgcm9vdCwgZGVmc0VsKSB7XG4gICAgaWYgKGlzVHJpZGVudCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICBpc1RyaWRlbnQgPSB1dGlsXzEuY29tcHV0ZUlzVHJpZGVudCgpO1xuICAgIHZhciBib3VuZHMgPSBzdGF0ZS5kb20uYm91bmRzKCksIGhhc2hlc0luRG9tID0ge30sIHRvUmVtb3ZlID0gW107XG4gICAgc2hhcGVzLmZvckVhY2goZnVuY3Rpb24gKHNjKSB7IGhhc2hlc0luRG9tW3NjLmhhc2hdID0gZmFsc2U7IH0pO1xuICAgIHZhciBlbCA9IGRlZnNFbC5uZXh0U2libGluZywgZWxIYXNoO1xuICAgIHdoaWxlIChlbCkge1xuICAgICAgICBlbEhhc2ggPSBlbC5nZXRBdHRyaWJ1dGUoJ2NnSGFzaCcpO1xuICAgICAgICBpZiAoaGFzaGVzSW5Eb20uaGFzT3duUHJvcGVydHkoZWxIYXNoKSlcbiAgICAgICAgICAgIGhhc2hlc0luRG9tW2VsSGFzaF0gPSB0cnVlO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICB0b1JlbW92ZS5wdXNoKGVsKTtcbiAgICAgICAgZWwgPSBlbC5uZXh0U2libGluZztcbiAgICB9XG4gICAgdG9SZW1vdmUuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHsgcmV0dXJuIHJvb3QucmVtb3ZlQ2hpbGQoZWwpOyB9KTtcbiAgICBzaGFwZXMuZm9yRWFjaChmdW5jdGlvbiAoc2MpIHtcbiAgICAgICAgaWYgKCFoYXNoZXNJbkRvbVtzYy5oYXNoXSlcbiAgICAgICAgICAgIHJvb3QuYXBwZW5kQ2hpbGQocmVuZGVyU2hhcGUoc3RhdGUsIHNjLCBicnVzaGVzLCBhcnJvd0Rlc3RzLCBib3VuZHMpKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIHNoYXBlSGFzaChfYSwgYXJyb3dEZXN0cywgY3VycmVudCkge1xuICAgIHZhciBvcmlnID0gX2Eub3JpZywgZGVzdCA9IF9hLmRlc3QsIGJydXNoID0gX2EuYnJ1c2gsIHBpZWNlID0gX2EucGllY2UsIG1vZGlmaWVycyA9IF9hLm1vZGlmaWVycztcbiAgICByZXR1cm4gW2N1cnJlbnQsIG9yaWcsIGRlc3QsIGJydXNoLCBkZXN0ICYmIGFycm93RGVzdHNbZGVzdF0gPiAxLFxuICAgICAgICBwaWVjZSAmJiBwaWVjZUhhc2gocGllY2UpLFxuICAgICAgICBtb2RpZmllcnMgJiYgbW9kaWZpZXJzSGFzaChtb2RpZmllcnMpXG4gICAgXS5maWx0ZXIoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHg7IH0pLmpvaW4oJycpO1xufVxuZnVuY3Rpb24gcGllY2VIYXNoKHBpZWNlKSB7XG4gICAgcmV0dXJuIFtwaWVjZS5jb2xvciwgcGllY2Uucm9sZSwgcGllY2Uuc2NhbGVdLmZpbHRlcihmdW5jdGlvbiAoeCkgeyByZXR1cm4geDsgfSkuam9pbignJyk7XG59XG5mdW5jdGlvbiBtb2RpZmllcnNIYXNoKG0pIHtcbiAgICByZXR1cm4gJycgKyAobS5saW5lV2lkdGggfHwgJycpO1xufVxuZnVuY3Rpb24gcmVuZGVyU2hhcGUoc3RhdGUsIF9hLCBicnVzaGVzLCBhcnJvd0Rlc3RzLCBib3VuZHMpIHtcbiAgICB2YXIgc2hhcGUgPSBfYS5zaGFwZSwgY3VycmVudCA9IF9hLmN1cnJlbnQsIGhhc2ggPSBfYS5oYXNoO1xuICAgIHZhciBlbDtcbiAgICBpZiAoc2hhcGUucGllY2UpXG4gICAgICAgIGVsID0gcmVuZGVyUGllY2Uoc3RhdGUuZHJhd2FibGUucGllY2VzLmJhc2VVcmwsIG9yaWVudCh1dGlsXzEua2V5MnBvcyhzaGFwZS5vcmlnKSwgc3RhdGUub3JpZW50YXRpb24pLCBzaGFwZS5waWVjZSwgYm91bmRzKTtcbiAgICBlbHNlIHtcbiAgICAgICAgdmFyIG9yaWcgPSBvcmllbnQodXRpbF8xLmtleTJwb3Moc2hhcGUub3JpZyksIHN0YXRlLm9yaWVudGF0aW9uKTtcbiAgICAgICAgaWYgKHNoYXBlLm9yaWcgJiYgc2hhcGUuZGVzdCkge1xuICAgICAgICAgICAgdmFyIGJydXNoID0gYnJ1c2hlc1tzaGFwZS5icnVzaF07XG4gICAgICAgICAgICBpZiAoc2hhcGUubW9kaWZpZXJzKVxuICAgICAgICAgICAgICAgIGJydXNoID0gbWFrZUN1c3RvbUJydXNoKGJydXNoLCBzaGFwZS5tb2RpZmllcnMpO1xuICAgICAgICAgICAgZWwgPSByZW5kZXJBcnJvdyhicnVzaCwgb3JpZywgb3JpZW50KHV0aWxfMS5rZXkycG9zKHNoYXBlLmRlc3QpLCBzdGF0ZS5vcmllbnRhdGlvbiksIGN1cnJlbnQsIGFycm93RGVzdHNbc2hhcGUuZGVzdF0gPiAxLCBib3VuZHMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGVsID0gcmVuZGVyQ2lyY2xlKGJydXNoZXNbc2hhcGUuYnJ1c2hdLCBvcmlnLCBjdXJyZW50LCBib3VuZHMpO1xuICAgIH1cbiAgICBlbC5zZXRBdHRyaWJ1dGUoJ2NnSGFzaCcsIGhhc2gpO1xuICAgIHJldHVybiBlbDtcbn1cbmZ1bmN0aW9uIHJlbmRlckNpcmNsZShicnVzaCwgcG9zLCBjdXJyZW50LCBib3VuZHMpIHtcbiAgICB2YXIgbyA9IHBvczJweChwb3MsIGJvdW5kcyksIHdpZHRocyA9IGNpcmNsZVdpZHRoKGJvdW5kcyksIHJhZGl1cyA9IChib3VuZHMud2lkdGggKyBib3VuZHMuaGVpZ2h0KSAvIDMyO1xuICAgIHJldHVybiBzZXRBdHRyaWJ1dGVzKGNyZWF0ZUVsZW1lbnQoJ2NpcmNsZScpLCB7XG4gICAgICAgIHN0cm9rZTogYnJ1c2guY29sb3IsXG4gICAgICAgICdzdHJva2Utd2lkdGgnOiB3aWR0aHNbY3VycmVudCA/IDAgOiAxXSxcbiAgICAgICAgZmlsbDogJ25vbmUnLFxuICAgICAgICBvcGFjaXR5OiBvcGFjaXR5KGJydXNoLCBjdXJyZW50KSxcbiAgICAgICAgY3g6IG9bMF0sXG4gICAgICAgIGN5OiBvWzFdLFxuICAgICAgICByOiByYWRpdXMgLSB3aWR0aHNbMV0gLyAyXG4gICAgfSk7XG59XG5mdW5jdGlvbiByZW5kZXJBcnJvdyhicnVzaCwgb3JpZywgZGVzdCwgY3VycmVudCwgc2hvcnRlbiwgYm91bmRzKSB7XG4gICAgdmFyIG0gPSBhcnJvd01hcmdpbihib3VuZHMsIHNob3J0ZW4gJiYgIWN1cnJlbnQpLCBhID0gcG9zMnB4KG9yaWcsIGJvdW5kcyksIGIgPSBwb3MycHgoZGVzdCwgYm91bmRzKSwgZHggPSBiWzBdIC0gYVswXSwgZHkgPSBiWzFdIC0gYVsxXSwgYW5nbGUgPSBNYXRoLmF0YW4yKGR5LCBkeCksIHhvID0gTWF0aC5jb3MoYW5nbGUpICogbSwgeW8gPSBNYXRoLnNpbihhbmdsZSkgKiBtO1xuICAgIHJldHVybiBzZXRBdHRyaWJ1dGVzKGNyZWF0ZUVsZW1lbnQoJ2xpbmUnKSwge1xuICAgICAgICBzdHJva2U6IGJydXNoLmNvbG9yLFxuICAgICAgICAnc3Ryb2tlLXdpZHRoJzogbGluZVdpZHRoKGJydXNoLCBjdXJyZW50LCBib3VuZHMpLFxuICAgICAgICAnc3Ryb2tlLWxpbmVjYXAnOiAncm91bmQnLFxuICAgICAgICAnbWFya2VyLWVuZCc6IGlzVHJpZGVudCA/IHVuZGVmaW5lZCA6ICd1cmwoI2Fycm93aGVhZC0nICsgYnJ1c2gua2V5ICsgJyknLFxuICAgICAgICBvcGFjaXR5OiBvcGFjaXR5KGJydXNoLCBjdXJyZW50KSxcbiAgICAgICAgeDE6IGFbMF0sXG4gICAgICAgIHkxOiBhWzFdLFxuICAgICAgICB4MjogYlswXSAtIHhvLFxuICAgICAgICB5MjogYlsxXSAtIHlvXG4gICAgfSk7XG59XG5mdW5jdGlvbiByZW5kZXJQaWVjZShiYXNlVXJsLCBwb3MsIHBpZWNlLCBib3VuZHMpIHtcbiAgICB2YXIgbyA9IHBvczJweChwb3MsIGJvdW5kcyksIHNpemUgPSBib3VuZHMud2lkdGggLyA4ICogKHBpZWNlLnNjYWxlIHx8IDEpLCBuYW1lID0gcGllY2UuY29sb3JbMF0gKyAocGllY2Uucm9sZSA9PT0gJ2tuaWdodCcgPyAnbicgOiBwaWVjZS5yb2xlWzBdKS50b1VwcGVyQ2FzZSgpO1xuICAgIHJldHVybiBzZXRBdHRyaWJ1dGVzKGNyZWF0ZUVsZW1lbnQoJ2ltYWdlJyksIHtcbiAgICAgICAgY2xhc3NOYW1lOiBwaWVjZS5yb2xlICsgXCIgXCIgKyBwaWVjZS5jb2xvcixcbiAgICAgICAgeDogb1swXSAtIHNpemUgLyAyLFxuICAgICAgICB5OiBvWzFdIC0gc2l6ZSAvIDIsXG4gICAgICAgIHdpZHRoOiBzaXplLFxuICAgICAgICBoZWlnaHQ6IHNpemUsXG4gICAgICAgIGhyZWY6IGJhc2VVcmwgKyBuYW1lICsgJy5zdmcnXG4gICAgfSk7XG59XG5mdW5jdGlvbiByZW5kZXJNYXJrZXIoYnJ1c2gpIHtcbiAgICB2YXIgbWFya2VyID0gc2V0QXR0cmlidXRlcyhjcmVhdGVFbGVtZW50KCdtYXJrZXInKSwge1xuICAgICAgICBpZDogJ2Fycm93aGVhZC0nICsgYnJ1c2gua2V5LFxuICAgICAgICBvcmllbnQ6ICdhdXRvJyxcbiAgICAgICAgbWFya2VyV2lkdGg6IDQsXG4gICAgICAgIG1hcmtlckhlaWdodDogOCxcbiAgICAgICAgcmVmWDogMi4wNSxcbiAgICAgICAgcmVmWTogMi4wMVxuICAgIH0pO1xuICAgIG1hcmtlci5hcHBlbmRDaGlsZChzZXRBdHRyaWJ1dGVzKGNyZWF0ZUVsZW1lbnQoJ3BhdGgnKSwge1xuICAgICAgICBkOiAnTTAsMCBWNCBMMywyIFonLFxuICAgICAgICBmaWxsOiBicnVzaC5jb2xvclxuICAgIH0pKTtcbiAgICBtYXJrZXIuc2V0QXR0cmlidXRlKCdjZ0tleScsIGJydXNoLmtleSk7XG4gICAgcmV0dXJuIG1hcmtlcjtcbn1cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXMoZWwsIGF0dHJzKSB7XG4gICAgZm9yICh2YXIga2V5IGluIGF0dHJzKVxuICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcbiAgICByZXR1cm4gZWw7XG59XG5mdW5jdGlvbiBvcmllbnQocG9zLCBjb2xvcikge1xuICAgIHJldHVybiBjb2xvciA9PT0gJ3doaXRlJyA/IHBvcyA6IFs5IC0gcG9zWzBdLCA5IC0gcG9zWzFdXTtcbn1cbmZ1bmN0aW9uIG1ha2VDdXN0b21CcnVzaChiYXNlLCBtb2RpZmllcnMpIHtcbiAgICB2YXIgYnJ1c2ggPSB7XG4gICAgICAgIGNvbG9yOiBiYXNlLmNvbG9yLFxuICAgICAgICBvcGFjaXR5OiBNYXRoLnJvdW5kKGJhc2Uub3BhY2l0eSAqIDEwKSAvIDEwLFxuICAgICAgICBsaW5lV2lkdGg6IE1hdGgucm91bmQobW9kaWZpZXJzLmxpbmVXaWR0aCB8fCBiYXNlLmxpbmVXaWR0aClcbiAgICB9O1xuICAgIGJydXNoLmtleSA9IFtiYXNlLmtleSwgbW9kaWZpZXJzLmxpbmVXaWR0aF0uZmlsdGVyKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4OyB9KS5qb2luKCcnKTtcbiAgICByZXR1cm4gYnJ1c2g7XG59XG5mdW5jdGlvbiBjaXJjbGVXaWR0aChib3VuZHMpIHtcbiAgICB2YXIgYmFzZSA9IGJvdW5kcy53aWR0aCAvIDUxMjtcbiAgICByZXR1cm4gWzMgKiBiYXNlLCA0ICogYmFzZV07XG59XG5mdW5jdGlvbiBsaW5lV2lkdGgoYnJ1c2gsIGN1cnJlbnQsIGJvdW5kcykge1xuICAgIHJldHVybiAoYnJ1c2gubGluZVdpZHRoIHx8IDEwKSAqIChjdXJyZW50ID8gMC44NSA6IDEpIC8gNTEyICogYm91bmRzLndpZHRoO1xufVxuZnVuY3Rpb24gb3BhY2l0eShicnVzaCwgY3VycmVudCkge1xuICAgIHJldHVybiAoYnJ1c2gub3BhY2l0eSB8fCAxKSAqIChjdXJyZW50ID8gMC45IDogMSk7XG59XG5mdW5jdGlvbiBhcnJvd01hcmdpbihib3VuZHMsIHNob3J0ZW4pIHtcbiAgICByZXR1cm4gaXNUcmlkZW50ID8gMCA6ICgoc2hvcnRlbiA/IDIwIDogMTApIC8gNTEyICogYm91bmRzLndpZHRoKTtcbn1cbmZ1bmN0aW9uIHBvczJweChwb3MsIGJvdW5kcykge1xuICAgIHJldHVybiBbKHBvc1swXSAtIDAuNSkgKiBib3VuZHMud2lkdGggLyA4LCAoOC41IC0gcG9zWzFdKSAqIGJvdW5kcy5oZWlnaHQgLyA4XTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnJlcXVpcmUoXCIuL2Fzc2V0cy9jaGVzc2dyb3VuZC5jc3NcIik7XG5yZXF1aXJlKFwiLi9hc3NldHMvdGhlbWUuY3NzXCIpO1xucmVxdWlyZShcIi4vc3R5bGUuY3NzXCIpO1xucmVxdWlyZShcIi4vc3R5bGUuc2Nzc1wiKTtcbnZhciBjaGVzc2dyb3VuZF8xID0gcmVxdWlyZShcImNoZXNzZ3JvdW5kXCIpO1xudmFyIGNoZXNzX2pzID0gcmVxdWlyZShcImNoZXNzLmpzXCIpO1xuZnVuY3Rpb24gdG9EZXN0cyhjaGVzcykge1xuICAgIHZhciBkZXN0cyA9IHt9O1xuICAgIGNoZXNzLlNRVUFSRVMuZm9yRWFjaChmdW5jdGlvbiAocykge1xuICAgICAgICB2YXIgbXMgPSBjaGVzcy5tb3Zlcyh7IHNxdWFyZTogcywgdmVyYm9zZTogdHJ1ZSB9KTtcbiAgICAgICAgaWYgKG1zLmxlbmd0aClcbiAgICAgICAgICAgIGRlc3RzW3NdID0gbXMubWFwKGZ1bmN0aW9uIChtKSB7IHJldHVybiBtLnRvOyB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gZGVzdHM7XG59XG5leHBvcnRzLnRvRGVzdHMgPSB0b0Rlc3RzO1xuZnVuY3Rpb24gdG9Db2xvcihjaGVzcykge1xuICAgIHJldHVybiBjaGVzcy50dXJuKCkgPT09IFwid1wiID8gXCJ3aGl0ZVwiIDogXCJibGFja1wiO1xufVxuZXhwb3J0cy50b0NvbG9yID0gdG9Db2xvcjtcbmZ1bmN0aW9uIHBsYXlPdGhlclNpZGUoY2csIGNoZXNzKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChvcmlnLCBkZXN0KSB7XG4gICAgICAgIGNoZXNzLm1vdmUoeyBmcm9tOiBvcmlnLCB0bzogZGVzdCB9KTtcbiAgICAgICAgcmV3cml0ZVBnbigpO1xuICAgICAgICBjZy5zZXQoe1xuICAgICAgICAgICAgdHVybkNvbG9yOiB0b0NvbG9yKGNoZXNzKSxcbiAgICAgICAgICAgIG1vdmFibGU6IHtcbiAgICAgICAgICAgICAgICBjb2xvcjogdG9Db2xvcihjaGVzcyksXG4gICAgICAgICAgICAgICAgZGVzdHM6IHRvRGVzdHMoY2hlc3MpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG59XG5leHBvcnRzLnBsYXlPdGhlclNpZGUgPSBwbGF5T3RoZXJTaWRlO1xuZnVuY3Rpb24gY2hhbmdlQmFja29yTmV4dChjZywgY2hlc3MpIHtcbiAgICByZXdyaXRlUGduKCk7XG4gICAgY2cuc2V0KHtcbiAgICAgICAgdHVybkNvbG9yOiB0b0NvbG9yKGNoZXNzKSxcbiAgICAgICAgbW92YWJsZToge1xuICAgICAgICAgICAgY29sb3I6IHRvQ29sb3IoY2hlc3MpLFxuICAgICAgICAgICAgZGVzdHM6IHRvRGVzdHMoY2hlc3MpXG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuY2hhbmdlQmFja29yTmV4dCA9IGNoYW5nZUJhY2tvck5leHQ7XG5mdW5jdGlvbiByZXdyaXRlUGduKCkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGduXCIpLmlubmVySFRNTCA9IGNoZXNzLnBnbigpO1xufVxuZXhwb3J0cy5yZXdyaXRlUGduID0gcmV3cml0ZVBnbjtcbnZhciBlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ3JvdW5kMVwiKTtcbnZhciBjaGVzcyA9IG5ldyBjaGVzc19qcygpO1xudmFyIG15bW92ZXMgPSBbXTtcbnZhciBjaGVzc2dyID0gY2hlc3Nncm91bmRfMS5DaGVzc2dyb3VuZChlbCwge1xuICAgIG1vdmFibGU6IHtcbiAgICAgICAgY29sb3I6IFwid2hpdGVcIixcbiAgICAgICAgZnJlZTogZmFsc2UsXG4gICAgICAgIGRlc3RzOiB0b0Rlc3RzKGNoZXNzKVxuICAgIH1cbn0pO1xuY2hlc3Nnci5zZXQoe1xuICAgIG1vdmFibGU6IHsgZXZlbnRzOiB7IGFmdGVyOiBwbGF5T3RoZXJTaWRlKGNoZXNzZ3IsIGNoZXNzKSB9IH1cbn0pO1xudmFyIG5leHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5leHRcIik7XG5uZXh0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBjb25zb2xlLmxvZyhcIm5leHRcIik7XG4gICAgY29uc29sZS5sb2coY2hlc3Nncik7XG4gICAgdmFyIG1vdmUgPSBteW1vdmVzLnBvcCgpO1xuICAgIGNoZXNzLm1vdmUobW92ZSk7XG4gICAgY2hlc3Nnci5zZXQoeyBmZW46IGNoZXNzLmZlbigpIH0pO1xuICAgIGNoYW5nZUJhY2tvck5leHQoY2hlc3NnciwgY2hlc3MpO1xuICAgIC8vY2hlc3Nnci5zZXQoeyB0dXJuQ29sb3I6IGNoZXNzLnR1cm4oKSB9KTtcbiAgICAvL2xldCBhID0gcGxheU90aGVyU2lkZShjaGVzc2dyLCBjaGVzcyk7XG4gICAgdmFyIGIgPSAxO1xufSk7XG52YXIgYmFjayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYmFja1wiKTtcbmJhY2suYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIHZhciBtb3ZlID0gY2hlc3MudW5kbygpO1xuICAgIG15bW92ZXMucHVzaChtb3ZlKTtcbiAgICBjaGVzc2dyLnNldCh7IGZlbjogY2hlc3MuZmVuKCkgfSk7XG4gICAgY2hhbmdlQmFja29yTmV4dChjaGVzc2dyLCBjaGVzcyk7XG4gICAgLy8gcmV3cml0ZVBnbigpO1xuICAgIC8vIGNoZXNzZ3Iuc2V0KHsgdHVybkNvbG9yOiBjaGVzcy50dXJuKCkgfSk7XG4gICAgdmFyIGIgPSAxO1xufSk7XG52YXIgcmVzdGFydCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzdGFydFwiKTtcbnJlc3RhcnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIGRvY3VtZW50LmxvY2F0aW9uLnJlbG9hZCgpO1xufSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9jaGVzc2dyb3VuZC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vY2hlc3Nncm91bmQuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9jaGVzc2dyb3VuZC5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi8qXFxuICogQ2hlc3Nncm91bmQgYmFzZSBjc3MgcHJvcGVydGllcy5cXG4gKlxcbiAqIFlvdSBuZWVkIHRvIGluY2x1ZGUgdGhlIGNzcyBmaWxlcyBpbiB0aGVtZXMgZm9sZGVyIGluIG9yZGVyIHRvIGhhdmUgdGhlXFxuICogYm9hcmQgYW5kIHBpZWNlcyBkaXNwbGF5ZWQhXFxuICovXFxuXFxuLmNnLWJvYXJkLXdyYXAge1xcbiAgd2lkdGg6IDMyMHB4O1xcbiAgaGVpZ2h0OiAzMjBweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG4uY2ctYm9hcmQge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gIGxpbmUtaGVpZ2h0OiAwO1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuLmNnLWJvYXJkIHNxdWFyZSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgd2lkdGg6IDEyLjUlO1xcbiAgaGVpZ2h0OiAxMi41JTtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG4uY2ctYm9hcmQgc3F1YXJlLm1vdmUtZGVzdCB7XFxuICBiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQocmdiYSgyMCwgODUsIDMwLCAwLjUpIDIyJSwgIzIwODUzMCAwLCByZ2JhKDAsIDAsIDAsIDAuMykgMCwgcmdiYSgwLCAwLCAwLCAwKSAwKTtcXG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xcbn1cXG4uY2ctYm9hcmQgc3F1YXJlLnByZW1vdmUtZGVzdCB7XFxuICBiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQocmdiYSgyMCwgMzAsIDg1LCAwLjUpIDIyJSwgIzIwMzA4NSAwLCByZ2JhKDAsIDAsIDAsIDAuMykgMCwgcmdiYSgwLCAwLCAwLCAwKSAwKTtcXG59XFxuLmNnLWJvYXJkIHNxdWFyZS5vYy5tb3ZlLWRlc3Qge1xcbiAgYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KHRyYW5zcGFyZW50IDAlLCB0cmFuc3BhcmVudCA4MCUsIHJnYmEoMjAsIDg1LCAwLCAwLjMpIDgwJSk7XFxufVxcbi5jZy1ib2FyZCBzcXVhcmUub2MucHJlbW92ZS1kZXN0IHtcXG4gIGJhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudCh0cmFuc3BhcmVudCAwJSwgdHJhbnNwYXJlbnQgODAlLCByZ2JhKDIwLCAzMCwgODUsIDAuMikgODAlKTtcXG59XFxuLmNnLWJvYXJkIHNxdWFyZS5tb3ZlLWRlc3Q6aG92ZXIge1xcbiAgYmFja2dyb3VuZDogcmdiYSgyMCwgODUsIDMwLCAwLjMpO1xcbn1cXG4uY2ctYm9hcmQgc3F1YXJlLnByZW1vdmUtZGVzdDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kOiByZ2JhKDIwLCAzMCwgODUsIDAuMik7XFxufVxcbi5jZy1ib2FyZCBzcXVhcmUubGFzdC1tb3ZlIHtcXG4gIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE1NSwgMTk5LCAwLCAwLjQxKTtcXG59XFxuLmNnLWJvYXJkIHNxdWFyZS5zZWxlY3RlZCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwLCA4NSwgMzAsIDAuNSk7XFxufVxcbi5jZy1ib2FyZCBzcXVhcmUuY2hlY2sge1xcbiAgYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KGVsbGlwc2UgYXQgY2VudGVyLCByZ2JhKDI1NSwgMCwgMCwgMSkgMCUsIHJnYmEoMjMxLCAwLCAwLCAxKSAyNSUsIHJnYmEoMTY5LCAwLCAwLCAwKSA4OSUsIHJnYmEoMTU4LCAwLCAwLCAwKSAxMDAlKTtcXG59XFxuLmNnLWJvYXJkIHNxdWFyZS5jdXJyZW50LXByZW1vdmUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMCwgMzAsIDg1LCAwLjUpO1xcbn1cXG4uY2ctYm9hcmQtd3JhcCBwaWVjZSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgd2lkdGg6IDEyLjUlO1xcbiAgaGVpZ2h0OiAxMi41JTtcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxuICB6LWluZGV4OiAyO1xcbiAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG4uY2ctYm9hcmQgcGllY2UuZHJhZ2dpbmcge1xcbiAgY3Vyc29yOiBtb3ZlO1xcbiAgei1pbmRleDogOTtcXG59XFxuLmNnLWJvYXJkIHBpZWNlLmFuaW0ge1xcbiAgei1pbmRleDogODtcXG59XFxuLmNnLWJvYXJkIHBpZWNlLmZhZGluZyB7XFxuICB6LWluZGV4OiAxO1xcbiAgb3BhY2l0eTogMC41O1xcbn1cXG4uY2ctYm9hcmQtd3JhcCBzcXVhcmUubW92ZS1kZXN0OmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAsIDg1LCAzMCwgMC4zKTtcXG59XFxuLmNnLWJvYXJkLXdyYXAgcGllY2UuZ2hvc3Qge1xcbiAgb3BhY2l0eTogMC4zO1xcbn1cXG4uY2ctYm9hcmQtd3JhcCBzdmcge1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRvcDogMHB4O1xcbiAgbGVmdDogMHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gIHotaW5kZXg6IDI7XFxuICBvcGFjaXR5OiAwLjY7XFxufVxcbi5jZy1ib2FyZC13cmFwIHN2ZyBpbWFnZSB7XFxuICBvcGFjaXR5OiAwLjU7XFxufVxcbi5jZy1ib2FyZC13cmFwIGNvb3JkcyB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICBvcGFjaXR5OiAwLjg7XFxuICBmb250LXNpemU6IDlweDtcXG59XFxuLmNnLWJvYXJkLXdyYXAgY29vcmRzLnJhbmtzIHtcXG4gIHJpZ2h0OiAtMTVweDtcXG4gIHRvcDogMDtcXG4gIGZsZXgtZmxvdzogY29sdW1uLXJldmVyc2U7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogMTJweDtcXG59XFxuLmNnLWJvYXJkLXdyYXAgY29vcmRzLnJhbmtzLmJsYWNrIHtcXG4gIGZsZXgtZmxvdzogY29sdW1uO1xcbn1cXG4uY2ctYm9hcmQtd3JhcCBjb29yZHMuZmlsZXMge1xcbiAgYm90dG9tOiAtMTZweDtcXG4gIGxlZnQ6IDA7XFxuICBmbGV4LWZsb3c6IHJvdztcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxNnB4O1xcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuLmNnLWJvYXJkLXdyYXAgY29vcmRzLmZpbGVzLmJsYWNrIHtcXG4gIGZsZXgtZmxvdzogcm93LXJldmVyc2U7XFxufVxcbi5jZy1ib2FyZC13cmFwIGNvb3JkcyBjb29yZCB7XFxuICBmbGV4OiAxIDEgYXV0bztcXG59XFxuLmNnLWJvYXJkLXdyYXAgY29vcmRzLnJhbmtzIGNvb3JkIHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzOSUpO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL3RoZW1lLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi90aGVtZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL3RoZW1lLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsInZhciBlc2NhcGUgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL3VybC9lc2NhcGUuanNcIik7XG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi8qXFxuICogQm9hcmRcXG4gKi9cXG4uYmx1ZSAuY2ctYm9hcmQtd3JhcCB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4vaW1hZ2VzL2JvYXJkL2JsdWUuc3ZnXCIpKSArIFwiKTtcXG59XFxuXFxuLm1lcmlkYSAuY2ctYm9hcmQtd3JhcCBwaWVjZS5wYXduLndoaXRlIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi9pbWFnZXMvcGllY2VzL21lcmlkYS93UC5zdmdcIikpICsgXCIpO1xcbn1cXG4ubWVyaWRhIC5jZy1ib2FyZC13cmFwIHBpZWNlLmJpc2hvcC53aGl0ZSB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4vaW1hZ2VzL3BpZWNlcy9tZXJpZGEvd0Iuc3ZnXCIpKSArIFwiKTtcXG59XFxuLm1lcmlkYSAuY2ctYm9hcmQtd3JhcCBwaWVjZS5rbmlnaHQud2hpdGUge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCIuL2ltYWdlcy9waWVjZXMvbWVyaWRhL3dOLnN2Z1wiKSkgKyBcIik7XFxufVxcbi5tZXJpZGEgLmNnLWJvYXJkLXdyYXAgcGllY2Uucm9vay53aGl0ZSB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4vaW1hZ2VzL3BpZWNlcy9tZXJpZGEvd1Iuc3ZnXCIpKSArIFwiKTtcXG59XFxuLm1lcmlkYSAuY2ctYm9hcmQtd3JhcCBwaWVjZS5xdWVlbi53aGl0ZSB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4vaW1hZ2VzL3BpZWNlcy9tZXJpZGEvd1Euc3ZnXCIpKSArIFwiKTtcXG59XFxuLm1lcmlkYSAuY2ctYm9hcmQtd3JhcCBwaWVjZS5raW5nLndoaXRlIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi9pbWFnZXMvcGllY2VzL21lcmlkYS93Sy5zdmdcIikpICsgXCIpO1xcbn1cXG4ubWVyaWRhIC5jZy1ib2FyZC13cmFwIHBpZWNlLnBhd24uYmxhY2sge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCIuL2ltYWdlcy9waWVjZXMvbWVyaWRhL2JQLnN2Z1wiKSkgKyBcIik7XFxufVxcbi5tZXJpZGEgLmNnLWJvYXJkLXdyYXAgcGllY2UuYmlzaG9wLmJsYWNrIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi9pbWFnZXMvcGllY2VzL21lcmlkYS9iQi5zdmdcIikpICsgXCIpO1xcbn1cXG4ubWVyaWRhIC5jZy1ib2FyZC13cmFwIHBpZWNlLmtuaWdodC5ibGFjayB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4vaW1hZ2VzL3BpZWNlcy9tZXJpZGEvYk4uc3ZnXCIpKSArIFwiKTtcXG59XFxuLm1lcmlkYSAuY2ctYm9hcmQtd3JhcCBwaWVjZS5yb29rLmJsYWNrIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi9pbWFnZXMvcGllY2VzL21lcmlkYS9iUi5zdmdcIikpICsgXCIpO1xcbn1cXG4ubWVyaWRhIC5jZy1ib2FyZC13cmFwIHBpZWNlLnF1ZWVuLmJsYWNrIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi9pbWFnZXMvcGllY2VzL21lcmlkYS9iUS5zdmdcIikpICsgXCIpO1xcbn1cXG4ubWVyaWRhIC5jZy1ib2FyZC13cmFwIHBpZWNlLmtpbmcuYmxhY2sge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCIuL2ltYWdlcy9waWVjZXMvbWVyaWRhL2JLLnN2Z1wiKSkgKyBcIik7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZXNjYXBlKHVybCkge1xuICAgIGlmICh0eXBlb2YgdXJsICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gdXJsXG4gICAgfVxuICAgIC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuICAgIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgICAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICAgIH1cbiAgICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gICAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcbiAgICBpZiAoL1tcIicoKSBcXHRcXG5dLy50ZXN0KHVybCkpIHtcbiAgICAgICAgcmV0dXJuICdcIicgKyB1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCAnXFxcXG4nKSArICdcIidcbiAgICB9XG5cbiAgICByZXR1cm4gdXJsXG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJlYzIxMTgyMzY2MTAyOGU0M2U5YTIyZmRmMTIwMTQ1NC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI0ZmYxY2U3Yzk1NDFhNzdiOTg1ODJhMzMyOWU5MjBlZC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJlMGViNzYxYTEzMzg5ZjM5MWNmM2U2ZjY0MzU5NzY0NC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmOWM2ZTUyMmQ1MDZjN2MzYTU1NWU0MTJkMzQ2MzBkZi5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI1NzM1MDEyMzNhNDA3Njk1ZTdiNWQ1YjhlNmVmYzdhYS5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI0ZTQ0MzJhNmIwZGZjZTA5MzE3N2RiNDZkYzliZmY0OC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJiYjQzMGM2MDNmYWUwNTE3MWJmY2M2NzYwZWZkYTkyOC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIzNDRlMTYxYjMxMWNlOTA0Y2MwZTNiZTdkN2Q2MTA5MC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI4YTZiZDU2YThkNzFiNDQ2NzNhMzZjMjVlMWNhNjZhYS5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIwMDI2ZjE0NjY4MTc3ZjdkZDBkNGJhYjE2N2IxYTFjZi5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIwMjczMzJhMDdjNGYyNTkzMGEwZTUyN2E4NTk2NWFhNC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJhZWQwMjZkMDAyMWI3ZWJmYzIxNjQ5NDZjMDEzNjAxMC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI0N2FmMjc0YjhhODhlZWM3NzE2ODFiOWFjNTNkYzZkMi5zdmdcIjsiLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vc3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIiNidXR0b25zLFxcbiNncm91bmQxIHtcXG4gICAgbWFyZ2luOiAwIGF1dG87XFxuICAgIHRleHQtYWxpZ246IGNlbnRlclxcbn1cXG5cXG4jcGduIHtcXG4gICAgbWFyZ2luLXRvcDogNTBweDtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNy0yIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS03LTIhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS03LTIhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIvKiFcXG4gKiBCb290c3RyYXAgR3JpZCB2NC4xLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pXFxuICogQ29weXJpZ2h0IDIwMTEtMjAxOCBUaGUgQm9vdHN0cmFwIEF1dGhvcnNcXG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE4IFR3aXR0ZXIsIEluYy5cXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxcbiAqL1xcbkAtbXMtdmlld3BvcnQge1xcbiAgd2lkdGg6IGRldmljZS13aWR0aDsgfVxcblxcbmh0bWwge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogc2Nyb2xsYmFyOyB9XFxuXFxuKixcXG4qOjpiZWZvcmUsXFxuKjo6YWZ0ZXIge1xcbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxcblxcbi5jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcbiAgbWFyZ2luLWxlZnQ6IGF1dG87IH1cXG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xcbiAgICAuY29udGFpbmVyIHtcXG4gICAgICBtYXgtd2lkdGg6IDU0MHB4OyB9IH1cXG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgICAuY29udGFpbmVyIHtcXG4gICAgICBtYXgtd2lkdGg6IDcyMHB4OyB9IH1cXG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xcbiAgICAuY29udGFpbmVyIHtcXG4gICAgICBtYXgtd2lkdGg6IDk2MHB4OyB9IH1cXG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcXG4gICAgLmNvbnRhaW5lciB7XFxuICAgICAgbWF4LXdpZHRoOiAxMTQwcHg7IH0gfVxcblxcbi5jb250YWluZXItZmx1aWQge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcbiAgbWFyZ2luLWxlZnQ6IGF1dG87IH1cXG5cXG4ucm93IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LXdyYXA6IHdyYXA7XFxuICBtYXJnaW4tcmlnaHQ6IC0xNXB4O1xcbiAgbWFyZ2luLWxlZnQ6IC0xNXB4OyB9XFxuXFxuLm5vLWd1dHRlcnMge1xcbiAgbWFyZ2luLXJpZ2h0OiAwO1xcbiAgbWFyZ2luLWxlZnQ6IDA7IH1cXG4gIC5uby1ndXR0ZXJzID4gLmNvbCxcXG4gIC5uby1ndXR0ZXJzID4gW2NsYXNzKj1cXFwiY29sLVxcXCJdIHtcXG4gICAgcGFkZGluZy1yaWdodDogMDtcXG4gICAgcGFkZGluZy1sZWZ0OiAwOyB9XFxuXFxuLmNvbC0xLCAuY29sLTIsIC5jb2wtMywgLmNvbC00LCAuY29sLTUsIC5jb2wtNiwgLmNvbC03LCAuY29sLTgsIC5jb2wtOSwgLmNvbC0xMCwgLmNvbC0xMSwgLmNvbC0xMiwgLmNvbCxcXG4uY29sLWF1dG8sIC5jb2wtc20tMSwgLmNvbC1zbS0yLCAuY29sLXNtLTMsIC5jb2wtc20tNCwgLmNvbC1zbS01LCAuY29sLXNtLTYsIC5jb2wtc20tNywgLmNvbC1zbS04LCAuY29sLXNtLTksIC5jb2wtc20tMTAsIC5jb2wtc20tMTEsIC5jb2wtc20tMTIsIC5jb2wtc20sXFxuLmNvbC1zbS1hdXRvLCAuY29sLW1kLTEsIC5jb2wtbWQtMiwgLmNvbC1tZC0zLCAuY29sLW1kLTQsIC5jb2wtbWQtNSwgLmNvbC1tZC02LCAuY29sLW1kLTcsIC5jb2wtbWQtOCwgLmNvbC1tZC05LCAuY29sLW1kLTEwLCAuY29sLW1kLTExLCAuY29sLW1kLTEyLCAuY29sLW1kLFxcbi5jb2wtbWQtYXV0bywgLmNvbC1sZy0xLCAuY29sLWxnLTIsIC5jb2wtbGctMywgLmNvbC1sZy00LCAuY29sLWxnLTUsIC5jb2wtbGctNiwgLmNvbC1sZy03LCAuY29sLWxnLTgsIC5jb2wtbGctOSwgLmNvbC1sZy0xMCwgLmNvbC1sZy0xMSwgLmNvbC1sZy0xMiwgLmNvbC1sZyxcXG4uY29sLWxnLWF1dG8sIC5jb2wteGwtMSwgLmNvbC14bC0yLCAuY29sLXhsLTMsIC5jb2wteGwtNCwgLmNvbC14bC01LCAuY29sLXhsLTYsIC5jb2wteGwtNywgLmNvbC14bC04LCAuY29sLXhsLTksIC5jb2wteGwtMTAsIC5jb2wteGwtMTEsIC5jb2wteGwtMTIsIC5jb2wteGwsXFxuLmNvbC14bC1hdXRvIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgbWluLWhlaWdodDogMXB4O1xcbiAgcGFkZGluZy1yaWdodDogMTVweDtcXG4gIHBhZGRpbmctbGVmdDogMTVweDsgfVxcblxcbi5jb2wge1xcbiAgZmxleC1iYXNpczogMDtcXG4gIGZsZXgtZ3JvdzogMTtcXG4gIG1heC13aWR0aDogMTAwJTsgfVxcblxcbi5jb2wtYXV0byB7XFxuICBmbGV4OiAwIDAgYXV0bztcXG4gIHdpZHRoOiBhdXRvO1xcbiAgbWF4LXdpZHRoOiBub25lOyB9XFxuXFxuLmNvbC0xIHtcXG4gIGZsZXg6IDAgMCA4LjMzMzMzJTtcXG4gIG1heC13aWR0aDogOC4zMzMzMyU7IH1cXG5cXG4uY29sLTIge1xcbiAgZmxleDogMCAwIDE2LjY2NjY3JTtcXG4gIG1heC13aWR0aDogMTYuNjY2NjclOyB9XFxuXFxuLmNvbC0zIHtcXG4gIGZsZXg6IDAgMCAyNSU7XFxuICBtYXgtd2lkdGg6IDI1JTsgfVxcblxcbi5jb2wtNCB7XFxuICBmbGV4OiAwIDAgMzMuMzMzMzMlO1xcbiAgbWF4LXdpZHRoOiAzMy4zMzMzMyU7IH1cXG5cXG4uY29sLTUge1xcbiAgZmxleDogMCAwIDQxLjY2NjY3JTtcXG4gIG1heC13aWR0aDogNDEuNjY2NjclOyB9XFxuXFxuLmNvbC02IHtcXG4gIGZsZXg6IDAgMCA1MCU7XFxuICBtYXgtd2lkdGg6IDUwJTsgfVxcblxcbi5jb2wtNyB7XFxuICBmbGV4OiAwIDAgNTguMzMzMzMlO1xcbiAgbWF4LXdpZHRoOiA1OC4zMzMzMyU7IH1cXG5cXG4uY29sLTgge1xcbiAgZmxleDogMCAwIDY2LjY2NjY3JTtcXG4gIG1heC13aWR0aDogNjYuNjY2NjclOyB9XFxuXFxuLmNvbC05IHtcXG4gIGZsZXg6IDAgMCA3NSU7XFxuICBtYXgtd2lkdGg6IDc1JTsgfVxcblxcbi5jb2wtMTAge1xcbiAgZmxleDogMCAwIDgzLjMzMzMzJTtcXG4gIG1heC13aWR0aDogODMuMzMzMzMlOyB9XFxuXFxuLmNvbC0xMSB7XFxuICBmbGV4OiAwIDAgOTEuNjY2NjclO1xcbiAgbWF4LXdpZHRoOiA5MS42NjY2NyU7IH1cXG5cXG4uY29sLTEyIHtcXG4gIGZsZXg6IDAgMCAxMDAlO1xcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XFxuXFxuLm9yZGVyLWZpcnN0IHtcXG4gIG9yZGVyOiAtMTsgfVxcblxcbi5vcmRlci1sYXN0IHtcXG4gIG9yZGVyOiAxMzsgfVxcblxcbi5vcmRlci0wIHtcXG4gIG9yZGVyOiAwOyB9XFxuXFxuLm9yZGVyLTEge1xcbiAgb3JkZXI6IDE7IH1cXG5cXG4ub3JkZXItMiB7XFxuICBvcmRlcjogMjsgfVxcblxcbi5vcmRlci0zIHtcXG4gIG9yZGVyOiAzOyB9XFxuXFxuLm9yZGVyLTQge1xcbiAgb3JkZXI6IDQ7IH1cXG5cXG4ub3JkZXItNSB7XFxuICBvcmRlcjogNTsgfVxcblxcbi5vcmRlci02IHtcXG4gIG9yZGVyOiA2OyB9XFxuXFxuLm9yZGVyLTcge1xcbiAgb3JkZXI6IDc7IH1cXG5cXG4ub3JkZXItOCB7XFxuICBvcmRlcjogODsgfVxcblxcbi5vcmRlci05IHtcXG4gIG9yZGVyOiA5OyB9XFxuXFxuLm9yZGVyLTEwIHtcXG4gIG9yZGVyOiAxMDsgfVxcblxcbi5vcmRlci0xMSB7XFxuICBvcmRlcjogMTE7IH1cXG5cXG4ub3JkZXItMTIge1xcbiAgb3JkZXI6IDEyOyB9XFxuXFxuLm9mZnNldC0xIHtcXG4gIG1hcmdpbi1sZWZ0OiA4LjMzMzMzJTsgfVxcblxcbi5vZmZzZXQtMiB7XFxuICBtYXJnaW4tbGVmdDogMTYuNjY2NjclOyB9XFxuXFxuLm9mZnNldC0zIHtcXG4gIG1hcmdpbi1sZWZ0OiAyNSU7IH1cXG5cXG4ub2Zmc2V0LTQge1xcbiAgbWFyZ2luLWxlZnQ6IDMzLjMzMzMzJTsgfVxcblxcbi5vZmZzZXQtNSB7XFxuICBtYXJnaW4tbGVmdDogNDEuNjY2NjclOyB9XFxuXFxuLm9mZnNldC02IHtcXG4gIG1hcmdpbi1sZWZ0OiA1MCU7IH1cXG5cXG4ub2Zmc2V0LTcge1xcbiAgbWFyZ2luLWxlZnQ6IDU4LjMzMzMzJTsgfVxcblxcbi5vZmZzZXQtOCB7XFxuICBtYXJnaW4tbGVmdDogNjYuNjY2NjclOyB9XFxuXFxuLm9mZnNldC05IHtcXG4gIG1hcmdpbi1sZWZ0OiA3NSU7IH1cXG5cXG4ub2Zmc2V0LTEwIHtcXG4gIG1hcmdpbi1sZWZ0OiA4My4zMzMzMyU7IH1cXG5cXG4ub2Zmc2V0LTExIHtcXG4gIG1hcmdpbi1sZWZ0OiA5MS42NjY2NyU7IH1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcXG4gIC5jb2wtc20ge1xcbiAgICBmbGV4LWJhc2lzOiAwO1xcbiAgICBmbGV4LWdyb3c6IDE7XFxuICAgIG1heC13aWR0aDogMTAwJTsgfVxcbiAgLmNvbC1zbS1hdXRvIHtcXG4gICAgZmxleDogMCAwIGF1dG87XFxuICAgIHdpZHRoOiBhdXRvO1xcbiAgICBtYXgtd2lkdGg6IG5vbmU7IH1cXG4gIC5jb2wtc20tMSB7XFxuICAgIGZsZXg6IDAgMCA4LjMzMzMzJTtcXG4gICAgbWF4LXdpZHRoOiA4LjMzMzMzJTsgfVxcbiAgLmNvbC1zbS0yIHtcXG4gICAgZmxleDogMCAwIDE2LjY2NjY3JTtcXG4gICAgbWF4LXdpZHRoOiAxNi42NjY2NyU7IH1cXG4gIC5jb2wtc20tMyB7XFxuICAgIGZsZXg6IDAgMCAyNSU7XFxuICAgIG1heC13aWR0aDogMjUlOyB9XFxuICAuY29sLXNtLTQge1xcbiAgICBmbGV4OiAwIDAgMzMuMzMzMzMlO1xcbiAgICBtYXgtd2lkdGg6IDMzLjMzMzMzJTsgfVxcbiAgLmNvbC1zbS01IHtcXG4gICAgZmxleDogMCAwIDQxLjY2NjY3JTtcXG4gICAgbWF4LXdpZHRoOiA0MS42NjY2NyU7IH1cXG4gIC5jb2wtc20tNiB7XFxuICAgIGZsZXg6IDAgMCA1MCU7XFxuICAgIG1heC13aWR0aDogNTAlOyB9XFxuICAuY29sLXNtLTcge1xcbiAgICBmbGV4OiAwIDAgNTguMzMzMzMlO1xcbiAgICBtYXgtd2lkdGg6IDU4LjMzMzMzJTsgfVxcbiAgLmNvbC1zbS04IHtcXG4gICAgZmxleDogMCAwIDY2LjY2NjY3JTtcXG4gICAgbWF4LXdpZHRoOiA2Ni42NjY2NyU7IH1cXG4gIC5jb2wtc20tOSB7XFxuICAgIGZsZXg6IDAgMCA3NSU7XFxuICAgIG1heC13aWR0aDogNzUlOyB9XFxuICAuY29sLXNtLTEwIHtcXG4gICAgZmxleDogMCAwIDgzLjMzMzMzJTtcXG4gICAgbWF4LXdpZHRoOiA4My4zMzMzMyU7IH1cXG4gIC5jb2wtc20tMTEge1xcbiAgICBmbGV4OiAwIDAgOTEuNjY2NjclO1xcbiAgICBtYXgtd2lkdGg6IDkxLjY2NjY3JTsgfVxcbiAgLmNvbC1zbS0xMiB7XFxuICAgIGZsZXg6IDAgMCAxMDAlO1xcbiAgICBtYXgtd2lkdGg6IDEwMCU7IH1cXG4gIC5vcmRlci1zbS1maXJzdCB7XFxuICAgIG9yZGVyOiAtMTsgfVxcbiAgLm9yZGVyLXNtLWxhc3Qge1xcbiAgICBvcmRlcjogMTM7IH1cXG4gIC5vcmRlci1zbS0wIHtcXG4gICAgb3JkZXI6IDA7IH1cXG4gIC5vcmRlci1zbS0xIHtcXG4gICAgb3JkZXI6IDE7IH1cXG4gIC5vcmRlci1zbS0yIHtcXG4gICAgb3JkZXI6IDI7IH1cXG4gIC5vcmRlci1zbS0zIHtcXG4gICAgb3JkZXI6IDM7IH1cXG4gIC5vcmRlci1zbS00IHtcXG4gICAgb3JkZXI6IDQ7IH1cXG4gIC5vcmRlci1zbS01IHtcXG4gICAgb3JkZXI6IDU7IH1cXG4gIC5vcmRlci1zbS02IHtcXG4gICAgb3JkZXI6IDY7IH1cXG4gIC5vcmRlci1zbS03IHtcXG4gICAgb3JkZXI6IDc7IH1cXG4gIC5vcmRlci1zbS04IHtcXG4gICAgb3JkZXI6IDg7IH1cXG4gIC5vcmRlci1zbS05IHtcXG4gICAgb3JkZXI6IDk7IH1cXG4gIC5vcmRlci1zbS0xMCB7XFxuICAgIG9yZGVyOiAxMDsgfVxcbiAgLm9yZGVyLXNtLTExIHtcXG4gICAgb3JkZXI6IDExOyB9XFxuICAub3JkZXItc20tMTIge1xcbiAgICBvcmRlcjogMTI7IH1cXG4gIC5vZmZzZXQtc20tMCB7XFxuICAgIG1hcmdpbi1sZWZ0OiAwOyB9XFxuICAub2Zmc2V0LXNtLTEge1xcbiAgICBtYXJnaW4tbGVmdDogOC4zMzMzMyU7IH1cXG4gIC5vZmZzZXQtc20tMiB7XFxuICAgIG1hcmdpbi1sZWZ0OiAxNi42NjY2NyU7IH1cXG4gIC5vZmZzZXQtc20tMyB7XFxuICAgIG1hcmdpbi1sZWZ0OiAyNSU7IH1cXG4gIC5vZmZzZXQtc20tNCB7XFxuICAgIG1hcmdpbi1sZWZ0OiAzMy4zMzMzMyU7IH1cXG4gIC5vZmZzZXQtc20tNSB7XFxuICAgIG1hcmdpbi1sZWZ0OiA0MS42NjY2NyU7IH1cXG4gIC5vZmZzZXQtc20tNiB7XFxuICAgIG1hcmdpbi1sZWZ0OiA1MCU7IH1cXG4gIC5vZmZzZXQtc20tNyB7XFxuICAgIG1hcmdpbi1sZWZ0OiA1OC4zMzMzMyU7IH1cXG4gIC5vZmZzZXQtc20tOCB7XFxuICAgIG1hcmdpbi1sZWZ0OiA2Ni42NjY2NyU7IH1cXG4gIC5vZmZzZXQtc20tOSB7XFxuICAgIG1hcmdpbi1sZWZ0OiA3NSU7IH1cXG4gIC5vZmZzZXQtc20tMTAge1xcbiAgICBtYXJnaW4tbGVmdDogODMuMzMzMzMlOyB9XFxuICAub2Zmc2V0LXNtLTExIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDkxLjY2NjY3JTsgfSB9XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuY29sLW1kIHtcXG4gICAgZmxleC1iYXNpczogMDtcXG4gICAgZmxleC1ncm93OiAxO1xcbiAgICBtYXgtd2lkdGg6IDEwMCU7IH1cXG4gIC5jb2wtbWQtYXV0byB7XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbiAgICB3aWR0aDogYXV0bztcXG4gICAgbWF4LXdpZHRoOiBub25lOyB9XFxuICAuY29sLW1kLTEge1xcbiAgICBmbGV4OiAwIDAgOC4zMzMzMyU7XFxuICAgIG1heC13aWR0aDogOC4zMzMzMyU7IH1cXG4gIC5jb2wtbWQtMiB7XFxuICAgIGZsZXg6IDAgMCAxNi42NjY2NyU7XFxuICAgIG1heC13aWR0aDogMTYuNjY2NjclOyB9XFxuICAuY29sLW1kLTMge1xcbiAgICBmbGV4OiAwIDAgMjUlO1xcbiAgICBtYXgtd2lkdGg6IDI1JTsgfVxcbiAgLmNvbC1tZC00IHtcXG4gICAgZmxleDogMCAwIDMzLjMzMzMzJTtcXG4gICAgbWF4LXdpZHRoOiAzMy4zMzMzMyU7IH1cXG4gIC5jb2wtbWQtNSB7XFxuICAgIGZsZXg6IDAgMCA0MS42NjY2NyU7XFxuICAgIG1heC13aWR0aDogNDEuNjY2NjclOyB9XFxuICAuY29sLW1kLTYge1xcbiAgICBmbGV4OiAwIDAgNTAlO1xcbiAgICBtYXgtd2lkdGg6IDUwJTsgfVxcbiAgLmNvbC1tZC03IHtcXG4gICAgZmxleDogMCAwIDU4LjMzMzMzJTtcXG4gICAgbWF4LXdpZHRoOiA1OC4zMzMzMyU7IH1cXG4gIC5jb2wtbWQtOCB7XFxuICAgIGZsZXg6IDAgMCA2Ni42NjY2NyU7XFxuICAgIG1heC13aWR0aDogNjYuNjY2NjclOyB9XFxuICAuY29sLW1kLTkge1xcbiAgICBmbGV4OiAwIDAgNzUlO1xcbiAgICBtYXgtd2lkdGg6IDc1JTsgfVxcbiAgLmNvbC1tZC0xMCB7XFxuICAgIGZsZXg6IDAgMCA4My4zMzMzMyU7XFxuICAgIG1heC13aWR0aDogODMuMzMzMzMlOyB9XFxuICAuY29sLW1kLTExIHtcXG4gICAgZmxleDogMCAwIDkxLjY2NjY3JTtcXG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NyU7IH1cXG4gIC5jb2wtbWQtMTIge1xcbiAgICBmbGV4OiAwIDAgMTAwJTtcXG4gICAgbWF4LXdpZHRoOiAxMDAlOyB9XFxuICAub3JkZXItbWQtZmlyc3Qge1xcbiAgICBvcmRlcjogLTE7IH1cXG4gIC5vcmRlci1tZC1sYXN0IHtcXG4gICAgb3JkZXI6IDEzOyB9XFxuICAub3JkZXItbWQtMCB7XFxuICAgIG9yZGVyOiAwOyB9XFxuICAub3JkZXItbWQtMSB7XFxuICAgIG9yZGVyOiAxOyB9XFxuICAub3JkZXItbWQtMiB7XFxuICAgIG9yZGVyOiAyOyB9XFxuICAub3JkZXItbWQtMyB7XFxuICAgIG9yZGVyOiAzOyB9XFxuICAub3JkZXItbWQtNCB7XFxuICAgIG9yZGVyOiA0OyB9XFxuICAub3JkZXItbWQtNSB7XFxuICAgIG9yZGVyOiA1OyB9XFxuICAub3JkZXItbWQtNiB7XFxuICAgIG9yZGVyOiA2OyB9XFxuICAub3JkZXItbWQtNyB7XFxuICAgIG9yZGVyOiA3OyB9XFxuICAub3JkZXItbWQtOCB7XFxuICAgIG9yZGVyOiA4OyB9XFxuICAub3JkZXItbWQtOSB7XFxuICAgIG9yZGVyOiA5OyB9XFxuICAub3JkZXItbWQtMTAge1xcbiAgICBvcmRlcjogMTA7IH1cXG4gIC5vcmRlci1tZC0xMSB7XFxuICAgIG9yZGVyOiAxMTsgfVxcbiAgLm9yZGVyLW1kLTEyIHtcXG4gICAgb3JkZXI6IDEyOyB9XFxuICAub2Zmc2V0LW1kLTAge1xcbiAgICBtYXJnaW4tbGVmdDogMDsgfVxcbiAgLm9mZnNldC1tZC0xIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDguMzMzMzMlOyB9XFxuICAub2Zmc2V0LW1kLTIge1xcbiAgICBtYXJnaW4tbGVmdDogMTYuNjY2NjclOyB9XFxuICAub2Zmc2V0LW1kLTMge1xcbiAgICBtYXJnaW4tbGVmdDogMjUlOyB9XFxuICAub2Zmc2V0LW1kLTQge1xcbiAgICBtYXJnaW4tbGVmdDogMzMuMzMzMzMlOyB9XFxuICAub2Zmc2V0LW1kLTUge1xcbiAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclOyB9XFxuICAub2Zmc2V0LW1kLTYge1xcbiAgICBtYXJnaW4tbGVmdDogNTAlOyB9XFxuICAub2Zmc2V0LW1kLTcge1xcbiAgICBtYXJnaW4tbGVmdDogNTguMzMzMzMlOyB9XFxuICAub2Zmc2V0LW1kLTgge1xcbiAgICBtYXJnaW4tbGVmdDogNjYuNjY2NjclOyB9XFxuICAub2Zmc2V0LW1kLTkge1xcbiAgICBtYXJnaW4tbGVmdDogNzUlOyB9XFxuICAub2Zmc2V0LW1kLTEwIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDgzLjMzMzMzJTsgfVxcbiAgLm9mZnNldC1tZC0xMSB7XFxuICAgIG1hcmdpbi1sZWZ0OiA5MS42NjY2NyU7IH0gfVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xcbiAgLmNvbC1sZyB7XFxuICAgIGZsZXgtYmFzaXM6IDA7XFxuICAgIGZsZXgtZ3JvdzogMTtcXG4gICAgbWF4LXdpZHRoOiAxMDAlOyB9XFxuICAuY29sLWxnLWF1dG8ge1xcbiAgICBmbGV4OiAwIDAgYXV0bztcXG4gICAgd2lkdGg6IGF1dG87XFxuICAgIG1heC13aWR0aDogbm9uZTsgfVxcbiAgLmNvbC1sZy0xIHtcXG4gICAgZmxleDogMCAwIDguMzMzMzMlO1xcbiAgICBtYXgtd2lkdGg6IDguMzMzMzMlOyB9XFxuICAuY29sLWxnLTIge1xcbiAgICBmbGV4OiAwIDAgMTYuNjY2NjclO1xcbiAgICBtYXgtd2lkdGg6IDE2LjY2NjY3JTsgfVxcbiAgLmNvbC1sZy0zIHtcXG4gICAgZmxleDogMCAwIDI1JTtcXG4gICAgbWF4LXdpZHRoOiAyNSU7IH1cXG4gIC5jb2wtbGctNCB7XFxuICAgIGZsZXg6IDAgMCAzMy4zMzMzMyU7XFxuICAgIG1heC13aWR0aDogMzMuMzMzMzMlOyB9XFxuICAuY29sLWxnLTUge1xcbiAgICBmbGV4OiAwIDAgNDEuNjY2NjclO1xcbiAgICBtYXgtd2lkdGg6IDQxLjY2NjY3JTsgfVxcbiAgLmNvbC1sZy02IHtcXG4gICAgZmxleDogMCAwIDUwJTtcXG4gICAgbWF4LXdpZHRoOiA1MCU7IH1cXG4gIC5jb2wtbGctNyB7XFxuICAgIGZsZXg6IDAgMCA1OC4zMzMzMyU7XFxuICAgIG1heC13aWR0aDogNTguMzMzMzMlOyB9XFxuICAuY29sLWxnLTgge1xcbiAgICBmbGV4OiAwIDAgNjYuNjY2NjclO1xcbiAgICBtYXgtd2lkdGg6IDY2LjY2NjY3JTsgfVxcbiAgLmNvbC1sZy05IHtcXG4gICAgZmxleDogMCAwIDc1JTtcXG4gICAgbWF4LXdpZHRoOiA3NSU7IH1cXG4gIC5jb2wtbGctMTAge1xcbiAgICBmbGV4OiAwIDAgODMuMzMzMzMlO1xcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzJTsgfVxcbiAgLmNvbC1sZy0xMSB7XFxuICAgIGZsZXg6IDAgMCA5MS42NjY2NyU7XFxuICAgIG1heC13aWR0aDogOTEuNjY2NjclOyB9XFxuICAuY29sLWxnLTEyIHtcXG4gICAgZmxleDogMCAwIDEwMCU7XFxuICAgIG1heC13aWR0aDogMTAwJTsgfVxcbiAgLm9yZGVyLWxnLWZpcnN0IHtcXG4gICAgb3JkZXI6IC0xOyB9XFxuICAub3JkZXItbGctbGFzdCB7XFxuICAgIG9yZGVyOiAxMzsgfVxcbiAgLm9yZGVyLWxnLTAge1xcbiAgICBvcmRlcjogMDsgfVxcbiAgLm9yZGVyLWxnLTEge1xcbiAgICBvcmRlcjogMTsgfVxcbiAgLm9yZGVyLWxnLTIge1xcbiAgICBvcmRlcjogMjsgfVxcbiAgLm9yZGVyLWxnLTMge1xcbiAgICBvcmRlcjogMzsgfVxcbiAgLm9yZGVyLWxnLTQge1xcbiAgICBvcmRlcjogNDsgfVxcbiAgLm9yZGVyLWxnLTUge1xcbiAgICBvcmRlcjogNTsgfVxcbiAgLm9yZGVyLWxnLTYge1xcbiAgICBvcmRlcjogNjsgfVxcbiAgLm9yZGVyLWxnLTcge1xcbiAgICBvcmRlcjogNzsgfVxcbiAgLm9yZGVyLWxnLTgge1xcbiAgICBvcmRlcjogODsgfVxcbiAgLm9yZGVyLWxnLTkge1xcbiAgICBvcmRlcjogOTsgfVxcbiAgLm9yZGVyLWxnLTEwIHtcXG4gICAgb3JkZXI6IDEwOyB9XFxuICAub3JkZXItbGctMTEge1xcbiAgICBvcmRlcjogMTE7IH1cXG4gIC5vcmRlci1sZy0xMiB7XFxuICAgIG9yZGVyOiAxMjsgfVxcbiAgLm9mZnNldC1sZy0wIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDA7IH1cXG4gIC5vZmZzZXQtbGctMSB7XFxuICAgIG1hcmdpbi1sZWZ0OiA4LjMzMzMzJTsgfVxcbiAgLm9mZnNldC1sZy0yIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDE2LjY2NjY3JTsgfVxcbiAgLm9mZnNldC1sZy0zIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDI1JTsgfVxcbiAgLm9mZnNldC1sZy00IHtcXG4gICAgbWFyZ2luLWxlZnQ6IDMzLjMzMzMzJTsgfVxcbiAgLm9mZnNldC1sZy01IHtcXG4gICAgbWFyZ2luLWxlZnQ6IDQxLjY2NjY3JTsgfVxcbiAgLm9mZnNldC1sZy02IHtcXG4gICAgbWFyZ2luLWxlZnQ6IDUwJTsgfVxcbiAgLm9mZnNldC1sZy03IHtcXG4gICAgbWFyZ2luLWxlZnQ6IDU4LjMzMzMzJTsgfVxcbiAgLm9mZnNldC1sZy04IHtcXG4gICAgbWFyZ2luLWxlZnQ6IDY2LjY2NjY3JTsgfVxcbiAgLm9mZnNldC1sZy05IHtcXG4gICAgbWFyZ2luLWxlZnQ6IDc1JTsgfVxcbiAgLm9mZnNldC1sZy0xMCB7XFxuICAgIG1hcmdpbi1sZWZ0OiA4My4zMzMzMyU7IH1cXG4gIC5vZmZzZXQtbGctMTEge1xcbiAgICBtYXJnaW4tbGVmdDogOTEuNjY2NjclOyB9IH1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XFxuICAuY29sLXhsIHtcXG4gICAgZmxleC1iYXNpczogMDtcXG4gICAgZmxleC1ncm93OiAxO1xcbiAgICBtYXgtd2lkdGg6IDEwMCU7IH1cXG4gIC5jb2wteGwtYXV0byB7XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbiAgICB3aWR0aDogYXV0bztcXG4gICAgbWF4LXdpZHRoOiBub25lOyB9XFxuICAuY29sLXhsLTEge1xcbiAgICBmbGV4OiAwIDAgOC4zMzMzMyU7XFxuICAgIG1heC13aWR0aDogOC4zMzMzMyU7IH1cXG4gIC5jb2wteGwtMiB7XFxuICAgIGZsZXg6IDAgMCAxNi42NjY2NyU7XFxuICAgIG1heC13aWR0aDogMTYuNjY2NjclOyB9XFxuICAuY29sLXhsLTMge1xcbiAgICBmbGV4OiAwIDAgMjUlO1xcbiAgICBtYXgtd2lkdGg6IDI1JTsgfVxcbiAgLmNvbC14bC00IHtcXG4gICAgZmxleDogMCAwIDMzLjMzMzMzJTtcXG4gICAgbWF4LXdpZHRoOiAzMy4zMzMzMyU7IH1cXG4gIC5jb2wteGwtNSB7XFxuICAgIGZsZXg6IDAgMCA0MS42NjY2NyU7XFxuICAgIG1heC13aWR0aDogNDEuNjY2NjclOyB9XFxuICAuY29sLXhsLTYge1xcbiAgICBmbGV4OiAwIDAgNTAlO1xcbiAgICBtYXgtd2lkdGg6IDUwJTsgfVxcbiAgLmNvbC14bC03IHtcXG4gICAgZmxleDogMCAwIDU4LjMzMzMzJTtcXG4gICAgbWF4LXdpZHRoOiA1OC4zMzMzMyU7IH1cXG4gIC5jb2wteGwtOCB7XFxuICAgIGZsZXg6IDAgMCA2Ni42NjY2NyU7XFxuICAgIG1heC13aWR0aDogNjYuNjY2NjclOyB9XFxuICAuY29sLXhsLTkge1xcbiAgICBmbGV4OiAwIDAgNzUlO1xcbiAgICBtYXgtd2lkdGg6IDc1JTsgfVxcbiAgLmNvbC14bC0xMCB7XFxuICAgIGZsZXg6IDAgMCA4My4zMzMzMyU7XFxuICAgIG1heC13aWR0aDogODMuMzMzMzMlOyB9XFxuICAuY29sLXhsLTExIHtcXG4gICAgZmxleDogMCAwIDkxLjY2NjY3JTtcXG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NyU7IH1cXG4gIC5jb2wteGwtMTIge1xcbiAgICBmbGV4OiAwIDAgMTAwJTtcXG4gICAgbWF4LXdpZHRoOiAxMDAlOyB9XFxuICAub3JkZXIteGwtZmlyc3Qge1xcbiAgICBvcmRlcjogLTE7IH1cXG4gIC5vcmRlci14bC1sYXN0IHtcXG4gICAgb3JkZXI6IDEzOyB9XFxuICAub3JkZXIteGwtMCB7XFxuICAgIG9yZGVyOiAwOyB9XFxuICAub3JkZXIteGwtMSB7XFxuICAgIG9yZGVyOiAxOyB9XFxuICAub3JkZXIteGwtMiB7XFxuICAgIG9yZGVyOiAyOyB9XFxuICAub3JkZXIteGwtMyB7XFxuICAgIG9yZGVyOiAzOyB9XFxuICAub3JkZXIteGwtNCB7XFxuICAgIG9yZGVyOiA0OyB9XFxuICAub3JkZXIteGwtNSB7XFxuICAgIG9yZGVyOiA1OyB9XFxuICAub3JkZXIteGwtNiB7XFxuICAgIG9yZGVyOiA2OyB9XFxuICAub3JkZXIteGwtNyB7XFxuICAgIG9yZGVyOiA3OyB9XFxuICAub3JkZXIteGwtOCB7XFxuICAgIG9yZGVyOiA4OyB9XFxuICAub3JkZXIteGwtOSB7XFxuICAgIG9yZGVyOiA5OyB9XFxuICAub3JkZXIteGwtMTAge1xcbiAgICBvcmRlcjogMTA7IH1cXG4gIC5vcmRlci14bC0xMSB7XFxuICAgIG9yZGVyOiAxMTsgfVxcbiAgLm9yZGVyLXhsLTEyIHtcXG4gICAgb3JkZXI6IDEyOyB9XFxuICAub2Zmc2V0LXhsLTAge1xcbiAgICBtYXJnaW4tbGVmdDogMDsgfVxcbiAgLm9mZnNldC14bC0xIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDguMzMzMzMlOyB9XFxuICAub2Zmc2V0LXhsLTIge1xcbiAgICBtYXJnaW4tbGVmdDogMTYuNjY2NjclOyB9XFxuICAub2Zmc2V0LXhsLTMge1xcbiAgICBtYXJnaW4tbGVmdDogMjUlOyB9XFxuICAub2Zmc2V0LXhsLTQge1xcbiAgICBtYXJnaW4tbGVmdDogMzMuMzMzMzMlOyB9XFxuICAub2Zmc2V0LXhsLTUge1xcbiAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclOyB9XFxuICAub2Zmc2V0LXhsLTYge1xcbiAgICBtYXJnaW4tbGVmdDogNTAlOyB9XFxuICAub2Zmc2V0LXhsLTcge1xcbiAgICBtYXJnaW4tbGVmdDogNTguMzMzMzMlOyB9XFxuICAub2Zmc2V0LXhsLTgge1xcbiAgICBtYXJnaW4tbGVmdDogNjYuNjY2NjclOyB9XFxuICAub2Zmc2V0LXhsLTkge1xcbiAgICBtYXJnaW4tbGVmdDogNzUlOyB9XFxuICAub2Zmc2V0LXhsLTEwIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDgzLjMzMzMzJTsgfVxcbiAgLm9mZnNldC14bC0xMSB7XFxuICAgIG1hcmdpbi1sZWZ0OiA5MS42NjY2NyU7IH0gfVxcblxcbi5kLW5vbmUge1xcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XFxuXFxuLmQtaW5saW5lIHtcXG4gIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50OyB9XFxuXFxuLmQtaW5saW5lLWJsb2NrIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50OyB9XFxuXFxuLmQtYmxvY2sge1xcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfVxcblxcbi5kLXRhYmxlIHtcXG4gIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7IH1cXG5cXG4uZC10YWJsZS1yb3cge1xcbiAgZGlzcGxheTogdGFibGUtcm93ICFpbXBvcnRhbnQ7IH1cXG5cXG4uZC10YWJsZS1jZWxsIHtcXG4gIGRpc3BsYXk6IHRhYmxlLWNlbGwgIWltcG9ydGFudDsgfVxcblxcbi5kLWZsZXgge1xcbiAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50OyB9XFxuXFxuLmQtaW5saW5lLWZsZXgge1xcbiAgZGlzcGxheTogaW5saW5lLWZsZXggIWltcG9ydGFudDsgfVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xcbiAgLmQtc20tbm9uZSB7XFxuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxcbiAgLmQtc20taW5saW5lIHtcXG4gICAgZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7IH1cXG4gIC5kLXNtLWlubGluZS1ibG9jayB7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50OyB9XFxuICAuZC1zbS1ibG9jayB7XFxuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IH1cXG4gIC5kLXNtLXRhYmxlIHtcXG4gICAgZGlzcGxheTogdGFibGUgIWltcG9ydGFudDsgfVxcbiAgLmQtc20tdGFibGUtcm93IHtcXG4gICAgZGlzcGxheTogdGFibGUtcm93ICFpbXBvcnRhbnQ7IH1cXG4gIC5kLXNtLXRhYmxlLWNlbGwge1xcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsICFpbXBvcnRhbnQ7IH1cXG4gIC5kLXNtLWZsZXgge1xcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7IH1cXG4gIC5kLXNtLWlubGluZS1mbGV4IHtcXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXggIWltcG9ydGFudDsgfSB9XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuZC1tZC1ub25lIHtcXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XFxuICAuZC1tZC1pbmxpbmUge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDsgfVxcbiAgLmQtbWQtaW5saW5lLWJsb2NrIHtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7IH1cXG4gIC5kLW1kLWJsb2NrIHtcXG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfVxcbiAgLmQtbWQtdGFibGUge1xcbiAgICBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50OyB9XFxuICAuZC1tZC10YWJsZS1yb3cge1xcbiAgICBkaXNwbGF5OiB0YWJsZS1yb3cgIWltcG9ydGFudDsgfVxcbiAgLmQtbWQtdGFibGUtY2VsbCB7XFxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGwgIWltcG9ydGFudDsgfVxcbiAgLmQtbWQtZmxleCB7XFxuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDsgfVxcbiAgLmQtbWQtaW5saW5lLWZsZXgge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleCAhaW1wb3J0YW50OyB9IH1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcXG4gIC5kLWxnLW5vbmUge1xcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cXG4gIC5kLWxnLWlubGluZSB7XFxuICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50OyB9XFxuICAuZC1sZy1pbmxpbmUtYmxvY2sge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDsgfVxcbiAgLmQtbGctYmxvY2sge1xcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9XFxuICAuZC1sZy10YWJsZSB7XFxuICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7IH1cXG4gIC5kLWxnLXRhYmxlLXJvdyB7XFxuICAgIGRpc3BsYXk6IHRhYmxlLXJvdyAhaW1wb3J0YW50OyB9XFxuICAuZC1sZy10YWJsZS1jZWxsIHtcXG4gICAgZGlzcGxheTogdGFibGUtY2VsbCAhaW1wb3J0YW50OyB9XFxuICAuZC1sZy1mbGV4IHtcXG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50OyB9XFxuICAuZC1sZy1pbmxpbmUtZmxleCB7XFxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4ICFpbXBvcnRhbnQ7IH0gfVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcXG4gIC5kLXhsLW5vbmUge1xcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cXG4gIC5kLXhsLWlubGluZSB7XFxuICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50OyB9XFxuICAuZC14bC1pbmxpbmUtYmxvY2sge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDsgfVxcbiAgLmQteGwtYmxvY2sge1xcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9XFxuICAuZC14bC10YWJsZSB7XFxuICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7IH1cXG4gIC5kLXhsLXRhYmxlLXJvdyB7XFxuICAgIGRpc3BsYXk6IHRhYmxlLXJvdyAhaW1wb3J0YW50OyB9XFxuICAuZC14bC10YWJsZS1jZWxsIHtcXG4gICAgZGlzcGxheTogdGFibGUtY2VsbCAhaW1wb3J0YW50OyB9XFxuICAuZC14bC1mbGV4IHtcXG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50OyB9XFxuICAuZC14bC1pbmxpbmUtZmxleCB7XFxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4ICFpbXBvcnRhbnQ7IH0gfVxcblxcbkBtZWRpYSBwcmludCB7XFxuICAuZC1wcmludC1ub25lIHtcXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XFxuICAuZC1wcmludC1pbmxpbmUge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDsgfVxcbiAgLmQtcHJpbnQtaW5saW5lLWJsb2NrIHtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7IH1cXG4gIC5kLXByaW50LWJsb2NrIHtcXG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfVxcbiAgLmQtcHJpbnQtdGFibGUge1xcbiAgICBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50OyB9XFxuICAuZC1wcmludC10YWJsZS1yb3cge1xcbiAgICBkaXNwbGF5OiB0YWJsZS1yb3cgIWltcG9ydGFudDsgfVxcbiAgLmQtcHJpbnQtdGFibGUtY2VsbCB7XFxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGwgIWltcG9ydGFudDsgfVxcbiAgLmQtcHJpbnQtZmxleCB7XFxuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDsgfVxcbiAgLmQtcHJpbnQtaW5saW5lLWZsZXgge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleCAhaW1wb3J0YW50OyB9IH1cXG5cXG4uZmxleC1yb3cge1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdyAhaW1wb3J0YW50OyB9XFxuXFxuLmZsZXgtY29sdW1uIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4gIWltcG9ydGFudDsgfVxcblxcbi5mbGV4LXJvdy1yZXZlcnNlIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZSAhaW1wb3J0YW50OyB9XFxuXFxuLmZsZXgtY29sdW1uLXJldmVyc2Uge1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlICFpbXBvcnRhbnQ7IH1cXG5cXG4uZmxleC13cmFwIHtcXG4gIGZsZXgtd3JhcDogd3JhcCAhaW1wb3J0YW50OyB9XFxuXFxuLmZsZXgtbm93cmFwIHtcXG4gIGZsZXgtd3JhcDogbm93cmFwICFpbXBvcnRhbnQ7IH1cXG5cXG4uZmxleC13cmFwLXJldmVyc2Uge1xcbiAgZmxleC13cmFwOiB3cmFwLXJldmVyc2UgIWltcG9ydGFudDsgfVxcblxcbi5mbGV4LWZpbGwge1xcbiAgZmxleDogMSAxIGF1dG8gIWltcG9ydGFudDsgfVxcblxcbi5mbGV4LWdyb3ctMCB7XFxuICBmbGV4LWdyb3c6IDAgIWltcG9ydGFudDsgfVxcblxcbi5mbGV4LWdyb3ctMSB7XFxuICBmbGV4LWdyb3c6IDEgIWltcG9ydGFudDsgfVxcblxcbi5mbGV4LXNocmluay0wIHtcXG4gIGZsZXgtc2hyaW5rOiAwICFpbXBvcnRhbnQ7IH1cXG5cXG4uZmxleC1zaHJpbmstMSB7XFxuICBmbGV4LXNocmluazogMSAhaW1wb3J0YW50OyB9XFxuXFxuLmp1c3RpZnktY29udGVudC1zdGFydCB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQgIWltcG9ydGFudDsgfVxcblxcbi5qdXN0aWZ5LWNvbnRlbnQtZW5kIHtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQgIWltcG9ydGFudDsgfVxcblxcbi5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyIHtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7IH1cXG5cXG4uanVzdGlmeS1jb250ZW50LWJldHdlZW4ge1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuICFpbXBvcnRhbnQ7IH1cXG5cXG4uanVzdGlmeS1jb250ZW50LWFyb3VuZCB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZCAhaW1wb3J0YW50OyB9XFxuXFxuLmFsaWduLWl0ZW1zLXN0YXJ0IHtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cXG5cXG4uYWxpZ24taXRlbXMtZW5kIHtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZCAhaW1wb3J0YW50OyB9XFxuXFxuLmFsaWduLWl0ZW1zLWNlbnRlciB7XFxuICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7IH1cXG5cXG4uYWxpZ24taXRlbXMtYmFzZWxpbmUge1xcbiAgYWxpZ24taXRlbXM6IGJhc2VsaW5lICFpbXBvcnRhbnQ7IH1cXG5cXG4uYWxpZ24taXRlbXMtc3RyZXRjaCB7XFxuICBhbGlnbi1pdGVtczogc3RyZXRjaCAhaW1wb3J0YW50OyB9XFxuXFxuLmFsaWduLWNvbnRlbnQtc3RhcnQge1xcbiAgYWxpZ24tY29udGVudDogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XFxuXFxuLmFsaWduLWNvbnRlbnQtZW5kIHtcXG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cXG5cXG4uYWxpZ24tY29udGVudC1jZW50ZXIge1xcbiAgYWxpZ24tY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7IH1cXG5cXG4uYWxpZ24tY29udGVudC1iZXR3ZWVuIHtcXG4gIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDsgfVxcblxcbi5hbGlnbi1jb250ZW50LWFyb3VuZCB7XFxuICBhbGlnbi1jb250ZW50OiBzcGFjZS1hcm91bmQgIWltcG9ydGFudDsgfVxcblxcbi5hbGlnbi1jb250ZW50LXN0cmV0Y2gge1xcbiAgYWxpZ24tY29udGVudDogc3RyZXRjaCAhaW1wb3J0YW50OyB9XFxuXFxuLmFsaWduLXNlbGYtYXV0byB7XFxuICBhbGlnbi1zZWxmOiBhdXRvICFpbXBvcnRhbnQ7IH1cXG5cXG4uYWxpZ24tc2VsZi1zdGFydCB7XFxuICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cXG5cXG4uYWxpZ24tc2VsZi1lbmQge1xcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQgIWltcG9ydGFudDsgfVxcblxcbi5hbGlnbi1zZWxmLWNlbnRlciB7XFxuICBhbGlnbi1zZWxmOiBjZW50ZXIgIWltcG9ydGFudDsgfVxcblxcbi5hbGlnbi1zZWxmLWJhc2VsaW5lIHtcXG4gIGFsaWduLXNlbGY6IGJhc2VsaW5lICFpbXBvcnRhbnQ7IH1cXG5cXG4uYWxpZ24tc2VsZi1zdHJldGNoIHtcXG4gIGFsaWduLXNlbGY6IHN0cmV0Y2ggIWltcG9ydGFudDsgfVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xcbiAgLmZsZXgtc20tcm93IHtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdyAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1zbS1jb2x1bW4ge1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LXNtLXJvdy1yZXZlcnNlIHtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LXNtLWNvbHVtbi1yZXZlcnNlIHtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LXNtLXdyYXAge1xcbiAgICBmbGV4LXdyYXA6IHdyYXAgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtc20tbm93cmFwIHtcXG4gICAgZmxleC13cmFwOiBub3dyYXAgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtc20td3JhcC1yZXZlcnNlIHtcXG4gICAgZmxleC13cmFwOiB3cmFwLXJldmVyc2UgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtc20tZmlsbCB7XFxuICAgIGZsZXg6IDEgMSBhdXRvICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LXNtLWdyb3ctMCB7XFxuICAgIGZsZXgtZ3JvdzogMCAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1zbS1ncm93LTEge1xcbiAgICBmbGV4LWdyb3c6IDEgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtc20tc2hyaW5rLTAge1xcbiAgICBmbGV4LXNocmluazogMCAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1zbS1zaHJpbmstMSB7XFxuICAgIGZsZXgtc2hyaW5rOiAxICFpbXBvcnRhbnQ7IH1cXG4gIC5qdXN0aWZ5LWNvbnRlbnQtc20tc3RhcnQge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQgIWltcG9ydGFudDsgfVxcbiAgLmp1c3RpZnktY29udGVudC1zbS1lbmQge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cXG4gIC5qdXN0aWZ5LWNvbnRlbnQtc20tY2VudGVyIHtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDsgfVxcbiAgLmp1c3RpZnktY29udGVudC1zbS1iZXR3ZWVuIHtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuICFpbXBvcnRhbnQ7IH1cXG4gIC5qdXN0aWZ5LWNvbnRlbnQtc20tYXJvdW5kIHtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWl0ZW1zLXNtLXN0YXJ0IHtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWl0ZW1zLXNtLWVuZCB7XFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZCAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24taXRlbXMtc20tY2VudGVyIHtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlciAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24taXRlbXMtc20tYmFzZWxpbmUge1xcbiAgICBhbGlnbi1pdGVtczogYmFzZWxpbmUgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWl0ZW1zLXNtLXN0cmV0Y2gge1xcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaCAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tY29udGVudC1zbS1zdGFydCB7XFxuICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWNvbnRlbnQtc20tZW5kIHtcXG4gICAgYWxpZ24tY29udGVudDogZmxleC1lbmQgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWNvbnRlbnQtc20tY2VudGVyIHtcXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1jb250ZW50LXNtLWJldHdlZW4ge1xcbiAgICBhbGlnbi1jb250ZW50OiBzcGFjZS1iZXR3ZWVuICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1jb250ZW50LXNtLWFyb3VuZCB7XFxuICAgIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWFyb3VuZCAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tY29udGVudC1zbS1zdHJldGNoIHtcXG4gICAgYWxpZ24tY29udGVudDogc3RyZXRjaCAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tc2VsZi1zbS1hdXRvIHtcXG4gICAgYWxpZ24tc2VsZjogYXV0byAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tc2VsZi1zbS1zdGFydCB7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLXNlbGYtc20tZW5kIHtcXG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLXNlbGYtc20tY2VudGVyIHtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1zZWxmLXNtLWJhc2VsaW5lIHtcXG4gICAgYWxpZ24tc2VsZjogYmFzZWxpbmUgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLXNlbGYtc20tc3RyZXRjaCB7XFxuICAgIGFsaWduLXNlbGY6IHN0cmV0Y2ggIWltcG9ydGFudDsgfSB9XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuZmxleC1tZC1yb3cge1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93ICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LW1kLWNvbHVtbiB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4gIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtbWQtcm93LXJldmVyc2Uge1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2UgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtbWQtY29sdW1uLXJldmVyc2Uge1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2UgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtbWQtd3JhcCB7XFxuICAgIGZsZXgtd3JhcDogd3JhcCAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1tZC1ub3dyYXAge1xcbiAgICBmbGV4LXdyYXA6IG5vd3JhcCAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1tZC13cmFwLXJldmVyc2Uge1xcbiAgICBmbGV4LXdyYXA6IHdyYXAtcmV2ZXJzZSAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1tZC1maWxsIHtcXG4gICAgZmxleDogMSAxIGF1dG8gIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtbWQtZ3Jvdy0wIHtcXG4gICAgZmxleC1ncm93OiAwICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LW1kLWdyb3ctMSB7XFxuICAgIGZsZXgtZ3JvdzogMSAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1tZC1zaHJpbmstMCB7XFxuICAgIGZsZXgtc2hyaW5rOiAwICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LW1kLXNocmluay0xIHtcXG4gICAgZmxleC1zaHJpbms6IDEgIWltcG9ydGFudDsgfVxcbiAgLmp1c3RpZnktY29udGVudC1tZC1zdGFydCB7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XFxuICAuanVzdGlmeS1jb250ZW50LW1kLWVuZCB7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQgIWltcG9ydGFudDsgfVxcbiAgLmp1c3RpZnktY29udGVudC1tZC1jZW50ZXIge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50OyB9XFxuICAuanVzdGlmeS1jb250ZW50LW1kLWJldHdlZW4ge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDsgfVxcbiAgLmp1c3RpZnktY29udGVudC1tZC1hcm91bmQge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZCAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24taXRlbXMtbWQtc3RhcnQge1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24taXRlbXMtbWQtZW5kIHtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1pdGVtcy1tZC1jZW50ZXIge1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1pdGVtcy1tZC1iYXNlbGluZSB7XFxuICAgIGFsaWduLWl0ZW1zOiBiYXNlbGluZSAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24taXRlbXMtbWQtc3RyZXRjaCB7XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1jb250ZW50LW1kLXN0YXJ0IHtcXG4gICAgYWxpZ24tY29udGVudDogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tY29udGVudC1tZC1lbmQge1xcbiAgICBhbGlnbi1jb250ZW50OiBmbGV4LWVuZCAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tY29udGVudC1tZC1jZW50ZXIge1xcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWNvbnRlbnQtbWQtYmV0d2VlbiB7XFxuICAgIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWNvbnRlbnQtbWQtYXJvdW5kIHtcXG4gICAgYWxpZ24tY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1jb250ZW50LW1kLXN0cmV0Y2gge1xcbiAgICBhbGlnbi1jb250ZW50OiBzdHJldGNoICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1zZWxmLW1kLWF1dG8ge1xcbiAgICBhbGlnbi1zZWxmOiBhdXRvICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1zZWxmLW1kLXN0YXJ0IHtcXG4gICAgYWxpZ24tc2VsZjogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tc2VsZi1tZC1lbmQge1xcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZCAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tc2VsZi1tZC1jZW50ZXIge1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXIgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLXNlbGYtbWQtYmFzZWxpbmUge1xcbiAgICBhbGlnbi1zZWxmOiBiYXNlbGluZSAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tc2VsZi1tZC1zdHJldGNoIHtcXG4gICAgYWxpZ24tc2VsZjogc3RyZXRjaCAhaW1wb3J0YW50OyB9IH1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcXG4gIC5mbGV4LWxnLXJvdyB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3cgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtbGctY29sdW1uIHtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbiAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1sZy1yb3ctcmV2ZXJzZSB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZSAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1sZy1jb2x1bW4tcmV2ZXJzZSB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZSAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1sZy13cmFwIHtcXG4gICAgZmxleC13cmFwOiB3cmFwICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LWxnLW5vd3JhcCB7XFxuICAgIGZsZXgtd3JhcDogbm93cmFwICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LWxnLXdyYXAtcmV2ZXJzZSB7XFxuICAgIGZsZXgtd3JhcDogd3JhcC1yZXZlcnNlICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LWxnLWZpbGwge1xcbiAgICBmbGV4OiAxIDEgYXV0byAhaW1wb3J0YW50OyB9XFxuICAuZmxleC1sZy1ncm93LTAge1xcbiAgICBmbGV4LWdyb3c6IDAgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtbGctZ3Jvdy0xIHtcXG4gICAgZmxleC1ncm93OiAxICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LWxnLXNocmluay0wIHtcXG4gICAgZmxleC1zaHJpbms6IDAgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgtbGctc2hyaW5rLTEge1xcbiAgICBmbGV4LXNocmluazogMSAhaW1wb3J0YW50OyB9XFxuICAuanVzdGlmeS1jb250ZW50LWxnLXN0YXJ0IHtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cXG4gIC5qdXN0aWZ5LWNvbnRlbnQtbGctZW5kIHtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZCAhaW1wb3J0YW50OyB9XFxuICAuanVzdGlmeS1jb250ZW50LWxnLWNlbnRlciB7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7IH1cXG4gIC5qdXN0aWZ5LWNvbnRlbnQtbGctYmV0d2VlbiB7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50OyB9XFxuICAuanVzdGlmeS1jb250ZW50LWxnLWFyb3VuZCB7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1pdGVtcy1sZy1zdGFydCB7XFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1pdGVtcy1sZy1lbmQge1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWl0ZW1zLWxnLWNlbnRlciB7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWl0ZW1zLWxnLWJhc2VsaW5lIHtcXG4gICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1pdGVtcy1sZy1zdHJldGNoIHtcXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2ggIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWNvbnRlbnQtbGctc3RhcnQge1xcbiAgICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1jb250ZW50LWxnLWVuZCB7XFxuICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1jb250ZW50LWxnLWNlbnRlciB7XFxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tY29udGVudC1sZy1iZXR3ZWVuIHtcXG4gICAgYWxpZ24tY29udGVudDogc3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tY29udGVudC1sZy1hcm91bmQge1xcbiAgICBhbGlnbi1jb250ZW50OiBzcGFjZS1hcm91bmQgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWNvbnRlbnQtbGctc3RyZXRjaCB7XFxuICAgIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2ggIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLXNlbGYtbGctYXV0byB7XFxuICAgIGFsaWduLXNlbGY6IGF1dG8gIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLXNlbGYtbGctc3RhcnQge1xcbiAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1zZWxmLWxnLWVuZCB7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1zZWxmLWxnLWNlbnRlciB7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlciAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tc2VsZi1sZy1iYXNlbGluZSB7XFxuICAgIGFsaWduLXNlbGY6IGJhc2VsaW5lICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1zZWxmLWxnLXN0cmV0Y2gge1xcbiAgICBhbGlnbi1zZWxmOiBzdHJldGNoICFpbXBvcnRhbnQ7IH0gfVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcXG4gIC5mbGV4LXhsLXJvdyB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3cgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgteGwtY29sdW1uIHtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbiAhaW1wb3J0YW50OyB9XFxuICAuZmxleC14bC1yb3ctcmV2ZXJzZSB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZSAhaW1wb3J0YW50OyB9XFxuICAuZmxleC14bC1jb2x1bW4tcmV2ZXJzZSB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZSAhaW1wb3J0YW50OyB9XFxuICAuZmxleC14bC13cmFwIHtcXG4gICAgZmxleC13cmFwOiB3cmFwICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LXhsLW5vd3JhcCB7XFxuICAgIGZsZXgtd3JhcDogbm93cmFwICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LXhsLXdyYXAtcmV2ZXJzZSB7XFxuICAgIGZsZXgtd3JhcDogd3JhcC1yZXZlcnNlICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LXhsLWZpbGwge1xcbiAgICBmbGV4OiAxIDEgYXV0byAhaW1wb3J0YW50OyB9XFxuICAuZmxleC14bC1ncm93LTAge1xcbiAgICBmbGV4LWdyb3c6IDAgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgteGwtZ3Jvdy0xIHtcXG4gICAgZmxleC1ncm93OiAxICFpbXBvcnRhbnQ7IH1cXG4gIC5mbGV4LXhsLXNocmluay0wIHtcXG4gICAgZmxleC1zaHJpbms6IDAgIWltcG9ydGFudDsgfVxcbiAgLmZsZXgteGwtc2hyaW5rLTEge1xcbiAgICBmbGV4LXNocmluazogMSAhaW1wb3J0YW50OyB9XFxuICAuanVzdGlmeS1jb250ZW50LXhsLXN0YXJ0IHtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cXG4gIC5qdXN0aWZ5LWNvbnRlbnQteGwtZW5kIHtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZCAhaW1wb3J0YW50OyB9XFxuICAuanVzdGlmeS1jb250ZW50LXhsLWNlbnRlciB7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7IH1cXG4gIC5qdXN0aWZ5LWNvbnRlbnQteGwtYmV0d2VlbiB7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50OyB9XFxuICAuanVzdGlmeS1jb250ZW50LXhsLWFyb3VuZCB7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1pdGVtcy14bC1zdGFydCB7XFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1pdGVtcy14bC1lbmQge1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWl0ZW1zLXhsLWNlbnRlciB7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWl0ZW1zLXhsLWJhc2VsaW5lIHtcXG4gICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1pdGVtcy14bC1zdHJldGNoIHtcXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2ggIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWNvbnRlbnQteGwtc3RhcnQge1xcbiAgICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1jb250ZW50LXhsLWVuZCB7XFxuICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1jb250ZW50LXhsLWNlbnRlciB7XFxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tY29udGVudC14bC1iZXR3ZWVuIHtcXG4gICAgYWxpZ24tY29udGVudDogc3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tY29udGVudC14bC1hcm91bmQge1xcbiAgICBhbGlnbi1jb250ZW50OiBzcGFjZS1hcm91bmQgIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLWNvbnRlbnQteGwtc3RyZXRjaCB7XFxuICAgIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2ggIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLXNlbGYteGwtYXV0byB7XFxuICAgIGFsaWduLXNlbGY6IGF1dG8gIWltcG9ydGFudDsgfVxcbiAgLmFsaWduLXNlbGYteGwtc3RhcnQge1xcbiAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1zZWxmLXhsLWVuZCB7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1zZWxmLXhsLWNlbnRlciB7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlciAhaW1wb3J0YW50OyB9XFxuICAuYWxpZ24tc2VsZi14bC1iYXNlbGluZSB7XFxuICAgIGFsaWduLXNlbGY6IGJhc2VsaW5lICFpbXBvcnRhbnQ7IH1cXG4gIC5hbGlnbi1zZWxmLXhsLXN0cmV0Y2gge1xcbiAgICBhbGlnbi1zZWxmOiBzdHJldGNoICFpbXBvcnRhbnQ7IH0gfVxcblxcbi5idG4ge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xcbiAgcGFkZGluZzogMC4zNzVyZW0gMC43NXJlbTtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XFxuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJhY2tncm91bmQtY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJvcmRlci1jb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAwLjE1cyBlYXNlLWluLW91dDsgfVxcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSkge1xcbiAgICAuYnRuIHtcXG4gICAgICB0cmFuc2l0aW9uOiBub25lOyB9IH1cXG4gIC5idG46aG92ZXIsIC5idG46Zm9jdXMge1xcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cXG4gIC5idG46Zm9jdXMsIC5idG4uZm9jdXMge1xcbiAgICBvdXRsaW5lOiAwO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgwLCAxMjMsIDI1NSwgMC4yNSk7IH1cXG4gIC5idG4uZGlzYWJsZWQsIC5idG46ZGlzYWJsZWQge1xcbiAgICBvcGFjaXR5OiAwLjY1OyB9XFxuICAuYnRuOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XFxuXFxuYS5idG4uZGlzYWJsZWQsXFxuZmllbGRzZXQ6ZGlzYWJsZWQgYS5idG4ge1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cXG5cXG4uYnRuLXByaW1hcnkge1xcbiAgY29sb3I6ICNmZmY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xcbiAgYm9yZGVyLWNvbG9yOiAjMDA3YmZmOyB9XFxuICAuYnRuLXByaW1hcnk6aG92ZXIge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNjlkOTtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMDA2MmNjOyB9XFxuICAuYnRuLXByaW1hcnk6Zm9jdXMsIC5idG4tcHJpbWFyeS5mb2N1cyB7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDAsIDEyMywgMjU1LCAwLjUpOyB9XFxuICAuYnRuLXByaW1hcnkuZGlzYWJsZWQsIC5idG4tcHJpbWFyeTpkaXNhYmxlZCB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xcbiAgICBib3JkZXItY29sb3I6ICMwMDdiZmY7IH1cXG4gIC5idG4tcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsIC5idG4tcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsXFxuICAuc2hvdyA+IC5idG4tcHJpbWFyeS5kcm9wZG93bi10b2dnbGUge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNjJjYztcXG4gICAgYm9yZGVyLWNvbG9yOiAjMDA1Y2JmOyB9XFxuICAgIC5idG4tcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsIC5idG4tcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsXFxuICAgIC5zaG93ID4gLmJ0bi1wcmltYXJ5LmRyb3Bkb3duLXRvZ2dsZTpmb2N1cyB7XFxuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMCwgMTIzLCAyNTUsIDAuNSk7IH1cXG5cXG4uYnRuLXNlY29uZGFyeSB7XFxuICBjb2xvcjogI2ZmZjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM2Yzc1N2Q7XFxuICBib3JkZXItY29sb3I6ICM2Yzc1N2Q7IH1cXG4gIC5idG4tc2Vjb25kYXJ5OmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1YTYyNjg7XFxuICAgIGJvcmRlci1jb2xvcjogIzU0NWI2MjsgfVxcbiAgLmJ0bi1zZWNvbmRhcnk6Zm9jdXMsIC5idG4tc2Vjb25kYXJ5LmZvY3VzIHtcXG4gICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMTA4LCAxMTcsIDEyNSwgMC41KTsgfVxcbiAgLmJ0bi1zZWNvbmRhcnkuZGlzYWJsZWQsIC5idG4tc2Vjb25kYXJ5OmRpc2FibGVkIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM2Yzc1N2Q7XFxuICAgIGJvcmRlci1jb2xvcjogIzZjNzU3ZDsgfVxcbiAgLmJ0bi1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLCAuYnRuLXNlY29uZGFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsXFxuICAuc2hvdyA+IC5idG4tc2Vjb25kYXJ5LmRyb3Bkb3duLXRvZ2dsZSB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTQ1YjYyO1xcbiAgICBib3JkZXItY29sb3I6ICM0ZTU1NWI7IH1cXG4gICAgLmJ0bi1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLCAuYnRuLXNlY29uZGFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsXFxuICAgIC5zaG93ID4gLmJ0bi1zZWNvbmRhcnkuZHJvcGRvd24tdG9nZ2xlOmZvY3VzIHtcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgxMDgsIDExNywgMTI1LCAwLjUpOyB9XFxuXFxuLmJ0bi1zdWNjZXNzIHtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI4YTc0NTtcXG4gIGJvcmRlci1jb2xvcjogIzI4YTc0NTsgfVxcbiAgLmJ0bi1zdWNjZXNzOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMTg4Mzg7XFxuICAgIGJvcmRlci1jb2xvcjogIzFlN2UzNDsgfVxcbiAgLmJ0bi1zdWNjZXNzOmZvY3VzLCAuYnRuLXN1Y2Nlc3MuZm9jdXMge1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSg0MCwgMTY3LCA2OSwgMC41KTsgfVxcbiAgLmJ0bi1zdWNjZXNzLmRpc2FibGVkLCAuYnRuLXN1Y2Nlc3M6ZGlzYWJsZWQge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI4YTc0NTtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMjhhNzQ1OyB9XFxuICAuYnRuLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLCAuYnRuLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLFxcbiAgLnNob3cgPiAuYnRuLXN1Y2Nlc3MuZHJvcGRvd24tdG9nZ2xlIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxZTdlMzQ7XFxuICAgIGJvcmRlci1jb2xvcjogIzFjNzQzMDsgfVxcbiAgICAuYnRuLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLCAuYnRuLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLFxcbiAgICAuc2hvdyA+IC5idG4tc3VjY2Vzcy5kcm9wZG93bi10b2dnbGU6Zm9jdXMge1xcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDQwLCAxNjcsIDY5LCAwLjUpOyB9XFxuXFxuLmJ0bi1pbmZvIHtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE3YTJiODtcXG4gIGJvcmRlci1jb2xvcjogIzE3YTJiODsgfVxcbiAgLmJ0bi1pbmZvOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxMzg0OTY7XFxuICAgIGJvcmRlci1jb2xvcjogIzExN2E4YjsgfVxcbiAgLmJ0bi1pbmZvOmZvY3VzLCAuYnRuLWluZm8uZm9jdXMge1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyMywgMTYyLCAxODQsIDAuNSk7IH1cXG4gIC5idG4taW5mby5kaXNhYmxlZCwgLmJ0bi1pbmZvOmRpc2FibGVkIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxN2EyYjg7XFxuICAgIGJvcmRlci1jb2xvcjogIzE3YTJiODsgfVxcbiAgLmJ0bi1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwgLmJ0bi1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSxcXG4gIC5zaG93ID4gLmJ0bi1pbmZvLmRyb3Bkb3duLXRvZ2dsZSB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTE3YThiO1xcbiAgICBib3JkZXItY29sb3I6ICMxMDcwN2Y7IH1cXG4gICAgLmJ0bi1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywgLmJ0bi1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cyxcXG4gICAgLnNob3cgPiAuYnRuLWluZm8uZHJvcGRvd24tdG9nZ2xlOmZvY3VzIHtcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyMywgMTYyLCAxODQsIDAuNSk7IH1cXG5cXG4uYnRuLXdhcm5pbmcge1xcbiAgY29sb3I6ICMyMTI1Mjk7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjMTA3O1xcbiAgYm9yZGVyLWNvbG9yOiAjZmZjMTA3OyB9XFxuICAuYnRuLXdhcm5pbmc6aG92ZXIge1xcbiAgICBjb2xvcjogIzIxMjUyOTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UwYTgwMDtcXG4gICAgYm9yZGVyLWNvbG9yOiAjZDM5ZTAwOyB9XFxuICAuYnRuLXdhcm5pbmc6Zm9jdXMsIC5idG4td2FybmluZy5mb2N1cyB7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDI1NSwgMTkzLCA3LCAwLjUpOyB9XFxuICAuYnRuLXdhcm5pbmcuZGlzYWJsZWQsIC5idG4td2FybmluZzpkaXNhYmxlZCB7XFxuICAgIGNvbG9yOiAjMjEyNTI5O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjMTA3O1xcbiAgICBib3JkZXItY29sb3I6ICNmZmMxMDc7IH1cXG4gIC5idG4td2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsIC5idG4td2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsXFxuICAuc2hvdyA+IC5idG4td2FybmluZy5kcm9wZG93bi10b2dnbGUge1xcbiAgICBjb2xvcjogIzIxMjUyOTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2QzOWUwMDtcXG4gICAgYm9yZGVyLWNvbG9yOiAjYzY5NTAwOyB9XFxuICAgIC5idG4td2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsIC5idG4td2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsXFxuICAgIC5zaG93ID4gLmJ0bi13YXJuaW5nLmRyb3Bkb3duLXRvZ2dsZTpmb2N1cyB7XFxuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMjU1LCAxOTMsIDcsIDAuNSk7IH1cXG5cXG4uYnRuLWRhbmdlciB7XFxuICBjb2xvcjogI2ZmZjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNkYzM1NDU7XFxuICBib3JkZXItY29sb3I6ICNkYzM1NDU7IH1cXG4gIC5idG4tZGFuZ2VyOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjODIzMzM7XFxuICAgIGJvcmRlci1jb2xvcjogI2JkMjEzMDsgfVxcbiAgLmJ0bi1kYW5nZXI6Zm9jdXMsIC5idG4tZGFuZ2VyLmZvY3VzIHtcXG4gICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMjIwLCA1MywgNjksIDAuNSk7IH1cXG4gIC5idG4tZGFuZ2VyLmRpc2FibGVkLCAuYnRuLWRhbmdlcjpkaXNhYmxlZCB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMzNTQ1O1xcbiAgICBib3JkZXItY29sb3I6ICNkYzM1NDU7IH1cXG4gIC5idG4tZGFuZ2VyOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwgLmJ0bi1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLFxcbiAgLnNob3cgPiAuYnRuLWRhbmdlci5kcm9wZG93bi10b2dnbGUge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2JkMjEzMDtcXG4gICAgYm9yZGVyLWNvbG9yOiAjYjIxZjJkOyB9XFxuICAgIC5idG4tZGFuZ2VyOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywgLmJ0bi1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLFxcbiAgICAuc2hvdyA+IC5idG4tZGFuZ2VyLmRyb3Bkb3duLXRvZ2dsZTpmb2N1cyB7XFxuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMjIwLCA1MywgNjksIDAuNSk7IH1cXG5cXG4uYnRuLWxpZ2h0IHtcXG4gIGNvbG9yOiAjMjEyNTI5O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcXG4gIGJvcmRlci1jb2xvcjogI2Y4ZjlmYTsgfVxcbiAgLmJ0bi1saWdodDpob3ZlciB7XFxuICAgIGNvbG9yOiAjMjEyNTI5O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTJlNmVhO1xcbiAgICBib3JkZXItY29sb3I6ICNkYWUwZTU7IH1cXG4gIC5idG4tbGlnaHQ6Zm9jdXMsIC5idG4tbGlnaHQuZm9jdXMge1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyNDgsIDI0OSwgMjUwLCAwLjUpOyB9XFxuICAuYnRuLWxpZ2h0LmRpc2FibGVkLCAuYnRuLWxpZ2h0OmRpc2FibGVkIHtcXG4gICAgY29sb3I6ICMyMTI1Mjk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XFxuICAgIGJvcmRlci1jb2xvcjogI2Y4ZjlmYTsgfVxcbiAgLmJ0bi1saWdodDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsIC5idG4tbGlnaHQ6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLFxcbiAgLnNob3cgPiAuYnRuLWxpZ2h0LmRyb3Bkb3duLXRvZ2dsZSB7XFxuICAgIGNvbG9yOiAjMjEyNTI5O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGFlMGU1O1xcbiAgICBib3JkZXItY29sb3I6ICNkM2Q5ZGY7IH1cXG4gICAgLmJ0bi1saWdodDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsIC5idG4tbGlnaHQ6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLFxcbiAgICAuc2hvdyA+IC5idG4tbGlnaHQuZHJvcGRvd24tdG9nZ2xlOmZvY3VzIHtcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyNDgsIDI0OSwgMjUwLCAwLjUpOyB9XFxuXFxuLmJ0bi1kYXJrIHtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0M2E0MDtcXG4gIGJvcmRlci1jb2xvcjogIzM0M2E0MDsgfVxcbiAgLmJ0bi1kYXJrOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMzI3MmI7XFxuICAgIGJvcmRlci1jb2xvcjogIzFkMjEyNDsgfVxcbiAgLmJ0bi1kYXJrOmZvY3VzLCAuYnRuLWRhcmsuZm9jdXMge1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSg1MiwgNTgsIDY0LCAwLjUpOyB9XFxuICAuYnRuLWRhcmsuZGlzYWJsZWQsIC5idG4tZGFyazpkaXNhYmxlZCB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xcbiAgICBib3JkZXItY29sb3I6ICMzNDNhNDA7IH1cXG4gIC5idG4tZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsIC5idG4tZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsXFxuICAuc2hvdyA+IC5idG4tZGFyay5kcm9wZG93bi10b2dnbGUge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzFkMjEyNDtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMTcxYTFkOyB9XFxuICAgIC5idG4tZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsIC5idG4tZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsXFxuICAgIC5zaG93ID4gLmJ0bi1kYXJrLmRyb3Bkb3duLXRvZ2dsZTpmb2N1cyB7XFxuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoNTIsIDU4LCA2NCwgMC41KTsgfVxcblxcbi5idG4tb3V0bGluZS1wcmltYXJ5IHtcXG4gIGNvbG9yOiAjMDA3YmZmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcbiAgYm9yZGVyLWNvbG9yOiAjMDA3YmZmOyB9XFxuICAuYnRuLW91dGxpbmUtcHJpbWFyeTpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xcbiAgICBib3JkZXItY29sb3I6ICMwMDdiZmY7IH1cXG4gIC5idG4tb3V0bGluZS1wcmltYXJ5OmZvY3VzLCAuYnRuLW91dGxpbmUtcHJpbWFyeS5mb2N1cyB7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDAsIDEyMywgMjU1LCAwLjUpOyB9XFxuICAuYnRuLW91dGxpbmUtcHJpbWFyeS5kaXNhYmxlZCwgLmJ0bi1vdXRsaW5lLXByaW1hcnk6ZGlzYWJsZWQge1xcbiAgICBjb2xvcjogIzAwN2JmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cXG4gIC5idG4tb3V0bGluZS1wcmltYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwgLmJ0bi1vdXRsaW5lLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLFxcbiAgLnNob3cgPiAuYnRuLW91dGxpbmUtcHJpbWFyeS5kcm9wZG93bi10b2dnbGUge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMDA3YmZmOyB9XFxuICAgIC5idG4tb3V0bGluZS1wcmltYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywgLmJ0bi1vdXRsaW5lLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLFxcbiAgICAuc2hvdyA+IC5idG4tb3V0bGluZS1wcmltYXJ5LmRyb3Bkb3duLXRvZ2dsZTpmb2N1cyB7XFxuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMCwgMTIzLCAyNTUsIDAuNSk7IH1cXG5cXG4uYnRuLW91dGxpbmUtc2Vjb25kYXJ5IHtcXG4gIGNvbG9yOiAjNmM3NTdkO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcbiAgYm9yZGVyLWNvbG9yOiAjNmM3NTdkOyB9XFxuICAuYnRuLW91dGxpbmUtc2Vjb25kYXJ5OmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM2Yzc1N2Q7XFxuICAgIGJvcmRlci1jb2xvcjogIzZjNzU3ZDsgfVxcbiAgLmJ0bi1vdXRsaW5lLXNlY29uZGFyeTpmb2N1cywgLmJ0bi1vdXRsaW5lLXNlY29uZGFyeS5mb2N1cyB7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDEwOCwgMTE3LCAxMjUsIDAuNSk7IH1cXG4gIC5idG4tb3V0bGluZS1zZWNvbmRhcnkuZGlzYWJsZWQsIC5idG4tb3V0bGluZS1zZWNvbmRhcnk6ZGlzYWJsZWQge1xcbiAgICBjb2xvcjogIzZjNzU3ZDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cXG4gIC5idG4tb3V0bGluZS1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLCAuYnRuLW91dGxpbmUtc2Vjb25kYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSxcXG4gIC5zaG93ID4gLmJ0bi1vdXRsaW5lLXNlY29uZGFyeS5kcm9wZG93bi10b2dnbGUge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzZjNzU3ZDtcXG4gICAgYm9yZGVyLWNvbG9yOiAjNmM3NTdkOyB9XFxuICAgIC5idG4tb3V0bGluZS1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLCAuYnRuLW91dGxpbmUtc2Vjb25kYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cyxcXG4gICAgLnNob3cgPiAuYnRuLW91dGxpbmUtc2Vjb25kYXJ5LmRyb3Bkb3duLXRvZ2dsZTpmb2N1cyB7XFxuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMTA4LCAxMTcsIDEyNSwgMC41KTsgfVxcblxcbi5idG4tb3V0bGluZS1zdWNjZXNzIHtcXG4gIGNvbG9yOiAjMjhhNzQ1O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcbiAgYm9yZGVyLWNvbG9yOiAjMjhhNzQ1OyB9XFxuICAuYnRuLW91dGxpbmUtc3VjY2Vzczpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1O1xcbiAgICBib3JkZXItY29sb3I6ICMyOGE3NDU7IH1cXG4gIC5idG4tb3V0bGluZS1zdWNjZXNzOmZvY3VzLCAuYnRuLW91dGxpbmUtc3VjY2Vzcy5mb2N1cyB7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDQwLCAxNjcsIDY5LCAwLjUpOyB9XFxuICAuYnRuLW91dGxpbmUtc3VjY2Vzcy5kaXNhYmxlZCwgLmJ0bi1vdXRsaW5lLXN1Y2Nlc3M6ZGlzYWJsZWQge1xcbiAgICBjb2xvcjogIzI4YTc0NTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cXG4gIC5idG4tb3V0bGluZS1zdWNjZXNzOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwgLmJ0bi1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLFxcbiAgLnNob3cgPiAuYnRuLW91dGxpbmUtc3VjY2Vzcy5kcm9wZG93bi10b2dnbGUge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI4YTc0NTtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMjhhNzQ1OyB9XFxuICAgIC5idG4tb3V0bGluZS1zdWNjZXNzOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywgLmJ0bi1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLFxcbiAgICAuc2hvdyA+IC5idG4tb3V0bGluZS1zdWNjZXNzLmRyb3Bkb3duLXRvZ2dsZTpmb2N1cyB7XFxuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoNDAsIDE2NywgNjksIDAuNSk7IH1cXG5cXG4uYnRuLW91dGxpbmUtaW5mbyB7XFxuICBjb2xvcjogIzE3YTJiODtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gIGJvcmRlci1jb2xvcjogIzE3YTJiODsgfVxcbiAgLmJ0bi1vdXRsaW5lLWluZm86aG92ZXIge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE3YTJiODtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMTdhMmI4OyB9XFxuICAuYnRuLW91dGxpbmUtaW5mbzpmb2N1cywgLmJ0bi1vdXRsaW5lLWluZm8uZm9jdXMge1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyMywgMTYyLCAxODQsIDAuNSk7IH1cXG4gIC5idG4tb3V0bGluZS1pbmZvLmRpc2FibGVkLCAuYnRuLW91dGxpbmUtaW5mbzpkaXNhYmxlZCB7XFxuICAgIGNvbG9yOiAjMTdhMmI4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxcbiAgLmJ0bi1vdXRsaW5lLWluZm86bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLCAuYnRuLW91dGxpbmUtaW5mbzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsXFxuICAuc2hvdyA+IC5idG4tb3V0bGluZS1pbmZvLmRyb3Bkb3duLXRvZ2dsZSB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTdhMmI4O1xcbiAgICBib3JkZXItY29sb3I6ICMxN2EyYjg7IH1cXG4gICAgLmJ0bi1vdXRsaW5lLWluZm86bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLCAuYnRuLW91dGxpbmUtaW5mbzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsXFxuICAgIC5zaG93ID4gLmJ0bi1vdXRsaW5lLWluZm8uZHJvcGRvd24tdG9nZ2xlOmZvY3VzIHtcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyMywgMTYyLCAxODQsIDAuNSk7IH1cXG5cXG4uYnRuLW91dGxpbmUtd2FybmluZyB7XFxuICBjb2xvcjogI2ZmYzEwNztcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gIGJvcmRlci1jb2xvcjogI2ZmYzEwNzsgfVxcbiAgLmJ0bi1vdXRsaW5lLXdhcm5pbmc6aG92ZXIge1xcbiAgICBjb2xvcjogIzIxMjUyOTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYzEwNztcXG4gICAgYm9yZGVyLWNvbG9yOiAjZmZjMTA3OyB9XFxuICAuYnRuLW91dGxpbmUtd2FybmluZzpmb2N1cywgLmJ0bi1vdXRsaW5lLXdhcm5pbmcuZm9jdXMge1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyNTUsIDE5MywgNywgMC41KTsgfVxcbiAgLmJ0bi1vdXRsaW5lLXdhcm5pbmcuZGlzYWJsZWQsIC5idG4tb3V0bGluZS13YXJuaW5nOmRpc2FibGVkIHtcXG4gICAgY29sb3I6ICNmZmMxMDc7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XFxuICAuYnRuLW91dGxpbmUtd2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsIC5idG4tb3V0bGluZS13YXJuaW5nOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSxcXG4gIC5zaG93ID4gLmJ0bi1vdXRsaW5lLXdhcm5pbmcuZHJvcGRvd24tdG9nZ2xlIHtcXG4gICAgY29sb3I6ICMyMTI1Mjk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmMxMDc7XFxuICAgIGJvcmRlci1jb2xvcjogI2ZmYzEwNzsgfVxcbiAgICAuYnRuLW91dGxpbmUtd2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsIC5idG4tb3V0bGluZS13YXJuaW5nOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cyxcXG4gICAgLnNob3cgPiAuYnRuLW91dGxpbmUtd2FybmluZy5kcm9wZG93bi10b2dnbGU6Zm9jdXMge1xcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDI1NSwgMTkzLCA3LCAwLjUpOyB9XFxuXFxuLmJ0bi1vdXRsaW5lLWRhbmdlciB7XFxuICBjb2xvcjogI2RjMzU0NTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gIGJvcmRlci1jb2xvcjogI2RjMzU0NTsgfVxcbiAgLmJ0bi1vdXRsaW5lLWRhbmdlcjpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMzNTQ1O1xcbiAgICBib3JkZXItY29sb3I6ICNkYzM1NDU7IH1cXG4gIC5idG4tb3V0bGluZS1kYW5nZXI6Zm9jdXMsIC5idG4tb3V0bGluZS1kYW5nZXIuZm9jdXMge1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyMjAsIDUzLCA2OSwgMC41KTsgfVxcbiAgLmJ0bi1vdXRsaW5lLWRhbmdlci5kaXNhYmxlZCwgLmJ0bi1vdXRsaW5lLWRhbmdlcjpkaXNhYmxlZCB7XFxuICAgIGNvbG9yOiAjZGMzNTQ1O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxcbiAgLmJ0bi1vdXRsaW5lLWRhbmdlcjpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsIC5idG4tb3V0bGluZS1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLFxcbiAgLnNob3cgPiAuYnRuLW91dGxpbmUtZGFuZ2VyLmRyb3Bkb3duLXRvZ2dsZSB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMzNTQ1O1xcbiAgICBib3JkZXItY29sb3I6ICNkYzM1NDU7IH1cXG4gICAgLmJ0bi1vdXRsaW5lLWRhbmdlcjpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsIC5idG4tb3V0bGluZS1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLFxcbiAgICAuc2hvdyA+IC5idG4tb3V0bGluZS1kYW5nZXIuZHJvcGRvd24tdG9nZ2xlOmZvY3VzIHtcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyMjAsIDUzLCA2OSwgMC41KTsgfVxcblxcbi5idG4tb3V0bGluZS1saWdodCB7XFxuICBjb2xvcjogI2Y4ZjlmYTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gIGJvcmRlci1jb2xvcjogI2Y4ZjlmYTsgfVxcbiAgLmJ0bi1vdXRsaW5lLWxpZ2h0OmhvdmVyIHtcXG4gICAgY29sb3I6ICMyMTI1Mjk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XFxuICAgIGJvcmRlci1jb2xvcjogI2Y4ZjlmYTsgfVxcbiAgLmJ0bi1vdXRsaW5lLWxpZ2h0OmZvY3VzLCAuYnRuLW91dGxpbmUtbGlnaHQuZm9jdXMge1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyNDgsIDI0OSwgMjUwLCAwLjUpOyB9XFxuICAuYnRuLW91dGxpbmUtbGlnaHQuZGlzYWJsZWQsIC5idG4tb3V0bGluZS1saWdodDpkaXNhYmxlZCB7XFxuICAgIGNvbG9yOiAjZjhmOWZhO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxcbiAgLmJ0bi1vdXRsaW5lLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwgLmJ0bi1vdXRsaW5lLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSxcXG4gIC5zaG93ID4gLmJ0bi1vdXRsaW5lLWxpZ2h0LmRyb3Bkb3duLXRvZ2dsZSB7XFxuICAgIGNvbG9yOiAjMjEyNTI5O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xcbiAgICBib3JkZXItY29sb3I6ICNmOGY5ZmE7IH1cXG4gICAgLmJ0bi1vdXRsaW5lLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywgLmJ0bi1vdXRsaW5lLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cyxcXG4gICAgLnNob3cgPiAuYnRuLW91dGxpbmUtbGlnaHQuZHJvcGRvd24tdG9nZ2xlOmZvY3VzIHtcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyNDgsIDI0OSwgMjUwLCAwLjUpOyB9XFxuXFxuLmJ0bi1vdXRsaW5lLWRhcmsge1xcbiAgY29sb3I6ICMzNDNhNDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XFxuICBib3JkZXItY29sb3I6ICMzNDNhNDA7IH1cXG4gIC5idG4tb3V0bGluZS1kYXJrOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNDNhNDA7XFxuICAgIGJvcmRlci1jb2xvcjogIzM0M2E0MDsgfVxcbiAgLmJ0bi1vdXRsaW5lLWRhcms6Zm9jdXMsIC5idG4tb3V0bGluZS1kYXJrLmZvY3VzIHtcXG4gICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoNTIsIDU4LCA2NCwgMC41KTsgfVxcbiAgLmJ0bi1vdXRsaW5lLWRhcmsuZGlzYWJsZWQsIC5idG4tb3V0bGluZS1kYXJrOmRpc2FibGVkIHtcXG4gICAgY29sb3I6ICMzNDNhNDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XFxuICAuYnRuLW91dGxpbmUtZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsIC5idG4tb3V0bGluZS1kYXJrOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSxcXG4gIC5zaG93ID4gLmJ0bi1vdXRsaW5lLWRhcmsuZHJvcGRvd24tdG9nZ2xlIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNDNhNDA7XFxuICAgIGJvcmRlci1jb2xvcjogIzM0M2E0MDsgfVxcbiAgICAuYnRuLW91dGxpbmUtZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsIC5idG4tb3V0bGluZS1kYXJrOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cyxcXG4gICAgLnNob3cgPiAuYnRuLW91dGxpbmUtZGFyay5kcm9wZG93bi10b2dnbGU6Zm9jdXMge1xcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDUyLCA1OCwgNjQsIDAuNSk7IH1cXG5cXG4uYnRuLWxpbmsge1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGNvbG9yOiAjMDA3YmZmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cXG4gIC5idG4tbGluazpob3ZlciB7XFxuICAgIGNvbG9yOiAjMDA1NmIzO1xcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cXG4gIC5idG4tbGluazpmb2N1cywgLmJ0bi1saW5rLmZvY3VzIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XFxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgIGJveC1zaGFkb3c6IG5vbmU7IH1cXG4gIC5idG4tbGluazpkaXNhYmxlZCwgLmJ0bi1saW5rLmRpc2FibGVkIHtcXG4gICAgY29sb3I6ICM2Yzc1N2Q7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XFxuXFxuLmJ0bi1sZyB7XFxuICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcXG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XFxuICBib3JkZXItcmFkaXVzOiAwLjNyZW07IH1cXG5cXG4uYnRuLXNtIHtcXG4gIHBhZGRpbmc6IDAuMjVyZW0gMC41cmVtO1xcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XFxuICBib3JkZXItcmFkaXVzOiAwLjJyZW07IH1cXG5cXG4uYnRuLWJsb2NrIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgd2lkdGg6IDEwMCU7IH1cXG4gIC5idG4tYmxvY2sgKyAuYnRuLWJsb2NrIHtcXG4gICAgbWFyZ2luLXRvcDogMC41cmVtOyB9XFxuXFxuaW5wdXRbdHlwZT1cXFwic3VibWl0XFxcIl0uYnRuLWJsb2NrLFxcbmlucHV0W3R5cGU9XFxcInJlc2V0XFxcIl0uYnRuLWJsb2NrLFxcbmlucHV0W3R5cGU9XFxcImJ1dHRvblxcXCJdLmJ0bi1ibG9jayB7XFxuICB3aWR0aDogMTAwJTsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGFwaV8xID0gcmVxdWlyZShcIi4vYXBpXCIpO1xudmFyIGNvbmZpZ18xID0gcmVxdWlyZShcIi4vY29uZmlnXCIpO1xudmFyIHN0YXRlXzEgPSByZXF1aXJlKFwiLi9zdGF0ZVwiKTtcbnZhciB3cmFwXzEgPSByZXF1aXJlKFwiLi93cmFwXCIpO1xudmFyIGV2ZW50cyA9IHJlcXVpcmUoXCIuL2V2ZW50c1wiKTtcbnZhciByZW5kZXJfMSA9IHJlcXVpcmUoXCIuL3JlbmRlclwiKTtcbnZhciBzdmcgPSByZXF1aXJlKFwiLi9zdmdcIik7XG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5mdW5jdGlvbiBDaGVzc2dyb3VuZChlbGVtZW50LCBjb25maWcpIHtcbiAgICB2YXIgc3RhdGUgPSBzdGF0ZV8xLmRlZmF1bHRzKCk7XG4gICAgY29uZmlnXzEuY29uZmlndXJlKHN0YXRlLCBjb25maWcgfHwge30pO1xuICAgIGZ1bmN0aW9uIHJlZHJhd0FsbCgpIHtcbiAgICAgICAgdmFyIHByZXZVbmJpbmQgPSBzdGF0ZS5kb20gJiYgc3RhdGUuZG9tLnVuYmluZDtcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdjZy1ib2FyZC13cmFwJyk7XG4gICAgICAgIHZhciBib3VuZHMgPSB1dGlsLm1lbW8oZnVuY3Rpb24gKCkgeyByZXR1cm4gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsgfSk7XG4gICAgICAgIHZhciByZWxhdGl2ZSA9IHN0YXRlLnZpZXdPbmx5ICYmICFzdGF0ZS5kcmF3YWJsZS52aXNpYmxlO1xuICAgICAgICB2YXIgZWxlbWVudHMgPSB3cmFwXzEuZGVmYXVsdChlbGVtZW50LCBzdGF0ZSwgcmVsYXRpdmUgPyB1bmRlZmluZWQgOiBib3VuZHMoKSk7XG4gICAgICAgIHZhciByZWRyYXdOb3cgPSBmdW5jdGlvbiAoc2tpcFN2Zykge1xuICAgICAgICAgICAgcmVuZGVyXzEuZGVmYXVsdChzdGF0ZSk7XG4gICAgICAgICAgICBpZiAoIXNraXBTdmcgJiYgZWxlbWVudHMuc3ZnKVxuICAgICAgICAgICAgICAgIHN2Zy5yZW5kZXJTdmcoc3RhdGUsIGVsZW1lbnRzLnN2Zyk7XG4gICAgICAgIH07XG4gICAgICAgIHN0YXRlLmRvbSA9IHtcbiAgICAgICAgICAgIGVsZW1lbnRzOiBlbGVtZW50cyxcbiAgICAgICAgICAgIGJvdW5kczogYm91bmRzLFxuICAgICAgICAgICAgcmVkcmF3OiBkZWJvdW5jZVJlZHJhdyhyZWRyYXdOb3cpLFxuICAgICAgICAgICAgcmVkcmF3Tm93OiByZWRyYXdOb3csXG4gICAgICAgICAgICB1bmJpbmQ6IHByZXZVbmJpbmQsXG4gICAgICAgICAgICByZWxhdGl2ZTogcmVsYXRpdmVcbiAgICAgICAgfTtcbiAgICAgICAgc3RhdGUuZHJhd2FibGUucHJldlN2Z0hhc2ggPSAnJztcbiAgICAgICAgcmVkcmF3Tm93KGZhbHNlKTtcbiAgICAgICAgZXZlbnRzLmJpbmRCb2FyZChzdGF0ZSk7XG4gICAgICAgIGlmICghcHJldlVuYmluZClcbiAgICAgICAgICAgIHN0YXRlLmRvbS51bmJpbmQgPSBldmVudHMuYmluZERvY3VtZW50KHN0YXRlLCByZWRyYXdBbGwpO1xuICAgIH1cbiAgICByZWRyYXdBbGwoKTtcbiAgICB2YXIgYXBpID0gYXBpXzEuc3RhcnQoc3RhdGUsIHJlZHJhd0FsbCk7XG4gICAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydHMuQ2hlc3Nncm91bmQgPSBDaGVzc2dyb3VuZDtcbjtcbmZ1bmN0aW9uIGRlYm91bmNlUmVkcmF3KHJlZHJhd05vdykge1xuICAgIHZhciByZWRyYXdpbmcgPSBmYWxzZTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAocmVkcmF3aW5nKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICByZWRyYXdpbmcgPSB0cnVlO1xuICAgICAgICB1dGlsLnJhZihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZWRyYXdOb3coKTtcbiAgICAgICAgICAgIHJlZHJhd2luZyA9IGZhbHNlO1xuICAgICAgICB9KTtcbiAgICB9O1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9hcmQgPSByZXF1aXJlKFwiLi9ib2FyZFwiKTtcbnZhciBmZW5fMSA9IHJlcXVpcmUoXCIuL2ZlblwiKTtcbnZhciBjb25maWdfMSA9IHJlcXVpcmUoXCIuL2NvbmZpZ1wiKTtcbnZhciBhbmltXzEgPSByZXF1aXJlKFwiLi9hbmltXCIpO1xudmFyIGRyYWdfMSA9IHJlcXVpcmUoXCIuL2RyYWdcIik7XG52YXIgZXhwbG9zaW9uXzEgPSByZXF1aXJlKFwiLi9leHBsb3Npb25cIik7XG5mdW5jdGlvbiBzdGFydChzdGF0ZSwgcmVkcmF3QWxsKSB7XG4gICAgZnVuY3Rpb24gdG9nZ2xlT3JpZW50YXRpb24oKSB7XG4gICAgICAgIGJvYXJkLnRvZ2dsZU9yaWVudGF0aW9uKHN0YXRlKTtcbiAgICAgICAgcmVkcmF3QWxsKCk7XG4gICAgfVxuICAgIDtcbiAgICByZXR1cm4ge1xuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgICAgIGlmIChjb25maWcub3JpZW50YXRpb24gJiYgY29uZmlnLm9yaWVudGF0aW9uICE9PSBzdGF0ZS5vcmllbnRhdGlvbilcbiAgICAgICAgICAgICAgICB0b2dnbGVPcmllbnRhdGlvbigpO1xuICAgICAgICAgICAgKGNvbmZpZy5mZW4gPyBhbmltXzEuYW5pbSA6IGFuaW1fMS5yZW5kZXIpKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gY29uZmlnXzEuY29uZmlndXJlKHN0YXRlLCBjb25maWcpOyB9LCBzdGF0ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgICAgZ2V0RmVuOiBmdW5jdGlvbiAoKSB7IHJldHVybiBmZW5fMS53cml0ZShzdGF0ZS5waWVjZXMpOyB9LFxuICAgICAgICB0b2dnbGVPcmllbnRhdGlvbjogdG9nZ2xlT3JpZW50YXRpb24sXG4gICAgICAgIHNldFBpZWNlczogZnVuY3Rpb24gKHBpZWNlcykge1xuICAgICAgICAgICAgYW5pbV8xLmFuaW0oZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBib2FyZC5zZXRQaWVjZXMoc3RhdGUsIHBpZWNlcyk7IH0sIHN0YXRlKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2VsZWN0U3F1YXJlOiBmdW5jdGlvbiAoa2V5LCBmb3JjZSkge1xuICAgICAgICAgICAgaWYgKGtleSlcbiAgICAgICAgICAgICAgICBhbmltXzEuYW5pbShmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuIGJvYXJkLnNlbGVjdFNxdWFyZShzdGF0ZSwga2V5LCBmb3JjZSk7IH0sIHN0YXRlKTtcbiAgICAgICAgICAgIGVsc2UgaWYgKHN0YXRlLnNlbGVjdGVkKSB7XG4gICAgICAgICAgICAgICAgYm9hcmQudW5zZWxlY3Qoc3RhdGUpO1xuICAgICAgICAgICAgICAgIHN0YXRlLmRvbS5yZWRyYXcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgbW92ZTogZnVuY3Rpb24gKG9yaWcsIGRlc3QpIHtcbiAgICAgICAgICAgIGFuaW1fMS5hbmltKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gYm9hcmQuYmFzZU1vdmUoc3RhdGUsIG9yaWcsIGRlc3QpOyB9LCBzdGF0ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIG5ld1BpZWNlOiBmdW5jdGlvbiAocGllY2UsIGtleSkge1xuICAgICAgICAgICAgYW5pbV8xLmFuaW0oZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBib2FyZC5iYXNlTmV3UGllY2Uoc3RhdGUsIHBpZWNlLCBrZXkpOyB9LCBzdGF0ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHBsYXlQcmVtb3ZlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoc3RhdGUucHJlbW92YWJsZS5jdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgaWYgKGFuaW1fMS5hbmltKGJvYXJkLnBsYXlQcmVtb3ZlLCBzdGF0ZSkpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIHN0YXRlLmRvbS5yZWRyYXcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSxcbiAgICAgICAgcGxheVByZWRyb3A6IGZ1bmN0aW9uICh2YWxpZGF0ZSkge1xuICAgICAgICAgICAgaWYgKHN0YXRlLnByZWRyb3BwYWJsZS5jdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IGJvYXJkLnBsYXlQcmVkcm9wKHN0YXRlLCB2YWxpZGF0ZSk7XG4gICAgICAgICAgICAgICAgc3RhdGUuZG9tLnJlZHJhdygpO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0sXG4gICAgICAgIGNhbmNlbFByZW1vdmU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGFuaW1fMS5yZW5kZXIoYm9hcmQudW5zZXRQcmVtb3ZlLCBzdGF0ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGNhbmNlbFByZWRyb3A6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGFuaW1fMS5yZW5kZXIoYm9hcmQudW5zZXRQcmVkcm9wLCBzdGF0ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGNhbmNlbE1vdmU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGFuaW1fMS5yZW5kZXIoZnVuY3Rpb24gKHN0YXRlKSB7IGJvYXJkLmNhbmNlbE1vdmUoc3RhdGUpOyBkcmFnXzEuY2FuY2VsKHN0YXRlKTsgfSwgc3RhdGUpO1xuICAgICAgICB9LFxuICAgICAgICBzdG9wOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBhbmltXzEucmVuZGVyKGZ1bmN0aW9uIChzdGF0ZSkgeyBib2FyZC5zdG9wKHN0YXRlKTsgZHJhZ18xLmNhbmNlbChzdGF0ZSk7IH0sIHN0YXRlKTtcbiAgICAgICAgfSxcbiAgICAgICAgZXhwbG9kZTogZnVuY3Rpb24gKGtleXMpIHtcbiAgICAgICAgICAgIGV4cGxvc2lvbl8xLmRlZmF1bHQoc3RhdGUsIGtleXMpO1xuICAgICAgICB9LFxuICAgICAgICBzZXRBdXRvU2hhcGVzOiBmdW5jdGlvbiAoc2hhcGVzKSB7XG4gICAgICAgICAgICBhbmltXzEucmVuZGVyKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gc3RhdGUuZHJhd2FibGUuYXV0b1NoYXBlcyA9IHNoYXBlczsgfSwgc3RhdGUpO1xuICAgICAgICB9LFxuICAgICAgICBzZXRTaGFwZXM6IGZ1bmN0aW9uIChzaGFwZXMpIHtcbiAgICAgICAgICAgIGFuaW1fMS5yZW5kZXIoZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBzdGF0ZS5kcmF3YWJsZS5zaGFwZXMgPSBzaGFwZXM7IH0sIHN0YXRlKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0S2V5QXREb21Qb3M6IGZ1bmN0aW9uIChwb3MpIHtcbiAgICAgICAgICAgIHJldHVybiBib2FyZC5nZXRLZXlBdERvbVBvcyhwb3MsIHN0YXRlLm9yaWVudGF0aW9uID09PSAnd2hpdGUnLCBzdGF0ZS5kb20uYm91bmRzKCkpO1xuICAgICAgICB9LFxuICAgICAgICByZWRyYXdBbGw6IHJlZHJhd0FsbCxcbiAgICAgICAgZHJhZ05ld1BpZWNlOiBmdW5jdGlvbiAocGllY2UsIGV2ZW50LCBmb3JjZSkge1xuICAgICAgICAgICAgZHJhZ18xLmRyYWdOZXdQaWVjZShzdGF0ZSwgcGllY2UsIGV2ZW50LCBmb3JjZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGJvYXJkLnN0b3Aoc3RhdGUpO1xuICAgICAgICAgICAgc3RhdGUuZG9tLnVuYmluZCAmJiBzdGF0ZS5kb20udW5iaW5kKCk7XG4gICAgICAgICAgICBzdGF0ZS5kb20uZGVzdHJveWVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnRzLnN0YXJ0ID0gc3RhcnQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB1dGlsID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcbmZ1bmN0aW9uIGRpZmYoYSwgYikge1xuICAgIHJldHVybiBNYXRoLmFicyhhIC0gYik7XG59XG5mdW5jdGlvbiBwYXduKGNvbG9yKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICh4MSwgeTEsIHgyLCB5MikgeyByZXR1cm4gZGlmZih4MSwgeDIpIDwgMiAmJiAoY29sb3IgPT09ICd3aGl0ZScgPyAoeTIgPT09IHkxICsgMSB8fCAoeTEgPD0gMiAmJiB5MiA9PT0gKHkxICsgMikgJiYgeDEgPT09IHgyKSkgOiAoeTIgPT09IHkxIC0gMSB8fCAoeTEgPj0gNyAmJiB5MiA9PT0gKHkxIC0gMikgJiYgeDEgPT09IHgyKSkpOyB9O1xufVxudmFyIGtuaWdodCA9IGZ1bmN0aW9uICh4MSwgeTEsIHgyLCB5Mikge1xuICAgIHZhciB4ZCA9IGRpZmYoeDEsIHgyKTtcbiAgICB2YXIgeWQgPSBkaWZmKHkxLCB5Mik7XG4gICAgcmV0dXJuICh4ZCA9PT0gMSAmJiB5ZCA9PT0gMikgfHwgKHhkID09PSAyICYmIHlkID09PSAxKTtcbn07XG52YXIgYmlzaG9wID0gZnVuY3Rpb24gKHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgcmV0dXJuIGRpZmYoeDEsIHgyKSA9PT0gZGlmZih5MSwgeTIpO1xufTtcbnZhciByb29rID0gZnVuY3Rpb24gKHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgcmV0dXJuIHgxID09PSB4MiB8fCB5MSA9PT0geTI7XG59O1xudmFyIHF1ZWVuID0gZnVuY3Rpb24gKHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgcmV0dXJuIGJpc2hvcCh4MSwgeTEsIHgyLCB5MikgfHwgcm9vayh4MSwgeTEsIHgyLCB5Mik7XG59O1xuZnVuY3Rpb24ga2luZyhjb2xvciwgcm9va0ZpbGVzLCBjYW5DYXN0bGUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHgxLCB5MSwgeDIsIHkyKSB7IHJldHVybiAoZGlmZih4MSwgeDIpIDwgMiAmJiBkaWZmKHkxLCB5MikgPCAyKSB8fCAoY2FuQ2FzdGxlICYmIHkxID09PSB5MiAmJiB5MSA9PT0gKGNvbG9yID09PSAnd2hpdGUnID8gMSA6IDgpICYmICgoeDEgPT09IDUgJiYgKHgyID09PSAzIHx8IHgyID09PSA3KSkgfHwgdXRpbC5jb250YWluc1gocm9va0ZpbGVzLCB4MikpKTsgfTtcbn1cbmZ1bmN0aW9uIHJvb2tGaWxlc09mKHBpZWNlcywgY29sb3IpIHtcbiAgICB2YXIgcGllY2U7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHBpZWNlcykuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgcGllY2UgPSBwaWVjZXNba2V5XTtcbiAgICAgICAgcmV0dXJuIHBpZWNlICYmIHBpZWNlLmNvbG9yID09PSBjb2xvciAmJiBwaWVjZS5yb2xlID09PSAncm9vayc7XG4gICAgfSkubWFwKGZ1bmN0aW9uIChrZXkpIHsgcmV0dXJuIHV0aWwua2V5MnBvcyhrZXkpWzBdOyB9KTtcbn1cbmZ1bmN0aW9uIHByZW1vdmUocGllY2VzLCBrZXksIGNhbkNhc3RsZSkge1xuICAgIHZhciBwaWVjZSA9IHBpZWNlc1trZXldLCBwb3MgPSB1dGlsLmtleTJwb3Moa2V5KTtcbiAgICB2YXIgbW9iaWxpdHk7XG4gICAgc3dpdGNoIChwaWVjZS5yb2xlKSB7XG4gICAgICAgIGNhc2UgJ3Bhd24nOlxuICAgICAgICAgICAgbW9iaWxpdHkgPSBwYXduKHBpZWNlLmNvbG9yKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdrbmlnaHQnOlxuICAgICAgICAgICAgbW9iaWxpdHkgPSBrbmlnaHQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnYmlzaG9wJzpcbiAgICAgICAgICAgIG1vYmlsaXR5ID0gYmlzaG9wO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3Jvb2snOlxuICAgICAgICAgICAgbW9iaWxpdHkgPSByb29rO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3F1ZWVuJzpcbiAgICAgICAgICAgIG1vYmlsaXR5ID0gcXVlZW47XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAna2luZyc6XG4gICAgICAgICAgICBtb2JpbGl0eSA9IGtpbmcocGllY2UuY29sb3IsIHJvb2tGaWxlc09mKHBpZWNlcywgcGllY2UuY29sb3IpLCBjYW5DYXN0bGUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiB1dGlsLmFsbEtleXMubWFwKHV0aWwua2V5MnBvcykuZmlsdGVyKGZ1bmN0aW9uIChwb3MyKSB7XG4gICAgICAgIHJldHVybiAocG9zWzBdICE9PSBwb3MyWzBdIHx8IHBvc1sxXSAhPT0gcG9zMlsxXSkgJiYgbW9iaWxpdHkocG9zWzBdLCBwb3NbMV0sIHBvczJbMF0sIHBvczJbMV0pO1xuICAgIH0pLm1hcCh1dGlsLnBvczJrZXkpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gcHJlbW92ZTtcbjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZnVuY3Rpb24gZXhwbG9zaW9uKHN0YXRlLCBrZXlzKSB7XG4gICAgc3RhdGUuZXhwbG9kaW5nID0ge1xuICAgICAgICBzdGFnZTogMSxcbiAgICAgICAga2V5czoga2V5c1xuICAgIH07XG4gICAgc3RhdGUuZG9tLnJlZHJhdygpO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBzZXRTdGFnZShzdGF0ZSwgMik7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyByZXR1cm4gc2V0U3RhZ2Uoc3RhdGUsIHVuZGVmaW5lZCk7IH0sIDEyMCk7XG4gICAgfSwgMTIwKTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGV4cGxvc2lvbjtcbmZ1bmN0aW9uIHNldFN0YWdlKHN0YXRlLCBzdGFnZSkge1xuICAgIGlmIChzdGF0ZS5leHBsb2RpbmcpIHtcbiAgICAgICAgaWYgKHN0YWdlKVxuICAgICAgICAgICAgc3RhdGUuZXhwbG9kaW5nLnN0YWdlID0gc3RhZ2U7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHN0YXRlLmV4cGxvZGluZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgc3RhdGUuZG9tLnJlZHJhdygpO1xuICAgIH1cbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGZlbiA9IHJlcXVpcmUoXCIuL2ZlblwiKTtcbnZhciB1dGlsXzEgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuZnVuY3Rpb24gZGVmYXVsdHMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGllY2VzOiBmZW4ucmVhZChmZW4uaW5pdGlhbCksXG4gICAgICAgIG9yaWVudGF0aW9uOiAnd2hpdGUnLFxuICAgICAgICB0dXJuQ29sb3I6ICd3aGl0ZScsXG4gICAgICAgIGNvb3JkaW5hdGVzOiB0cnVlLFxuICAgICAgICBhdXRvQ2FzdGxlOiB0cnVlLFxuICAgICAgICB2aWV3T25seTogZmFsc2UsXG4gICAgICAgIGRpc2FibGVDb250ZXh0TWVudTogZmFsc2UsXG4gICAgICAgIHJlc2l6YWJsZTogdHJ1ZSxcbiAgICAgICAgYWRkUGllY2VaSW5kZXg6IGZhbHNlLFxuICAgICAgICBwaWVjZUtleTogZmFsc2UsXG4gICAgICAgIGhpZ2hsaWdodDoge1xuICAgICAgICAgICAgbGFzdE1vdmU6IHRydWUsXG4gICAgICAgICAgICBjaGVjazogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBhbmltYXRpb246IHtcbiAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICBkdXJhdGlvbjogMjAwXG4gICAgICAgIH0sXG4gICAgICAgIG1vdmFibGU6IHtcbiAgICAgICAgICAgIGZyZWU6IHRydWUsXG4gICAgICAgICAgICBjb2xvcjogJ2JvdGgnLFxuICAgICAgICAgICAgc2hvd0Rlc3RzOiB0cnVlLFxuICAgICAgICAgICAgZXZlbnRzOiB7fSxcbiAgICAgICAgICAgIHJvb2tDYXN0bGU6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgcHJlbW92YWJsZToge1xuICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgIHNob3dEZXN0czogdHJ1ZSxcbiAgICAgICAgICAgIGNhc3RsZTogdHJ1ZSxcbiAgICAgICAgICAgIGV2ZW50czoge31cbiAgICAgICAgfSxcbiAgICAgICAgcHJlZHJvcHBhYmxlOiB7XG4gICAgICAgICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgIGV2ZW50czoge31cbiAgICAgICAgfSxcbiAgICAgICAgZHJhZ2dhYmxlOiB7XG4gICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgZGlzdGFuY2U6IDMsXG4gICAgICAgICAgICBhdXRvRGlzdGFuY2U6IHRydWUsXG4gICAgICAgICAgICBjZW50ZXJQaWVjZTogdHJ1ZSxcbiAgICAgICAgICAgIHNob3dHaG9zdDogdHJ1ZSxcbiAgICAgICAgICAgIGRlbGV0ZU9uRHJvcE9mZjogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgc2VsZWN0YWJsZToge1xuICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBzdGF0czoge1xuICAgICAgICAgICAgZHJhZ2dlZDogISgnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cpXG4gICAgICAgIH0sXG4gICAgICAgIGV2ZW50czoge30sXG4gICAgICAgIGRyYXdhYmxlOiB7XG4gICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgdmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGVyYXNlT25DbGljazogdHJ1ZSxcbiAgICAgICAgICAgIHNoYXBlczogW10sXG4gICAgICAgICAgICBhdXRvU2hhcGVzOiBbXSxcbiAgICAgICAgICAgIGJydXNoZXM6IHtcbiAgICAgICAgICAgICAgICBncmVlbjogeyBrZXk6ICdnJywgY29sb3I6ICcjMTU3ODFCJywgb3BhY2l0eTogMSwgbGluZVdpZHRoOiAxMCB9LFxuICAgICAgICAgICAgICAgIHJlZDogeyBrZXk6ICdyJywgY29sb3I6ICcjODgyMDIwJywgb3BhY2l0eTogMSwgbGluZVdpZHRoOiAxMCB9LFxuICAgICAgICAgICAgICAgIGJsdWU6IHsga2V5OiAnYicsIGNvbG9yOiAnIzAwMzA4OCcsIG9wYWNpdHk6IDEsIGxpbmVXaWR0aDogMTAgfSxcbiAgICAgICAgICAgICAgICB5ZWxsb3c6IHsga2V5OiAneScsIGNvbG9yOiAnI2U2OGYwMCcsIG9wYWNpdHk6IDEsIGxpbmVXaWR0aDogMTAgfSxcbiAgICAgICAgICAgICAgICBwYWxlQmx1ZTogeyBrZXk6ICdwYicsIGNvbG9yOiAnIzAwMzA4OCcsIG9wYWNpdHk6IDAuNCwgbGluZVdpZHRoOiAxNSB9LFxuICAgICAgICAgICAgICAgIHBhbGVHcmVlbjogeyBrZXk6ICdwZycsIGNvbG9yOiAnIzE1NzgxQicsIG9wYWNpdHk6IDAuNCwgbGluZVdpZHRoOiAxNSB9LFxuICAgICAgICAgICAgICAgIHBhbGVSZWQ6IHsga2V5OiAncHInLCBjb2xvcjogJyM4ODIwMjAnLCBvcGFjaXR5OiAwLjQsIGxpbmVXaWR0aDogMTUgfSxcbiAgICAgICAgICAgICAgICBwYWxlR3JleTogeyBrZXk6ICdwZ3InLCBjb2xvcjogJyM0YTRhNGEnLCBvcGFjaXR5OiAwLjM1LCBsaW5lV2lkdGg6IDE1IH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwaWVjZXM6IHtcbiAgICAgICAgICAgICAgICBiYXNlVXJsOiAnaHR0cHM6Ly9saWNoZXNzMS5vcmcvYXNzZXRzL3BpZWNlL2NidXJuZXR0LydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwcmV2U3ZnSGFzaDogJydcbiAgICAgICAgfSxcbiAgICAgICAgaG9sZDogdXRpbF8xLnRpbWVyKClcbiAgICB9O1xufVxuZXhwb3J0cy5kZWZhdWx0cyA9IGRlZmF1bHRzO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdXRpbF8xID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcbnZhciB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG52YXIgc3ZnXzEgPSByZXF1aXJlKFwiLi9zdmdcIik7XG5mdW5jdGlvbiB3cmFwKGVsZW1lbnQsIHMsIGJvdW5kcykge1xuICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gJyc7XG4gICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdjZy1ib2FyZC13cmFwJyk7XG4gICAgdXRpbF8xLmNvbG9ycy5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7XG4gICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnb3JpZW50YXRpb24tJyArIGMsIHMub3JpZW50YXRpb24gPT09IGMpO1xuICAgIH0pO1xuICAgIGVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnbWFuaXB1bGFibGUnLCAhcy52aWV3T25seSk7XG4gICAgdmFyIGJvYXJkID0gdXRpbF8xLmNyZWF0ZUVsKCdkaXYnLCAnY2ctYm9hcmQnKTtcbiAgICBlbGVtZW50LmFwcGVuZENoaWxkKGJvYXJkKTtcbiAgICB2YXIgc3ZnO1xuICAgIGlmIChzLmRyYXdhYmxlLnZpc2libGUgJiYgYm91bmRzKSB7XG4gICAgICAgIHN2ZyA9IHN2Z18xLmNyZWF0ZUVsZW1lbnQoJ3N2ZycpO1xuICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnXzEuY3JlYXRlRWxlbWVudCgnZGVmcycpKTtcbiAgICAgICAgZWxlbWVudC5hcHBlbmRDaGlsZChzdmcpO1xuICAgIH1cbiAgICBpZiAocy5jb29yZGluYXRlcykge1xuICAgICAgICB2YXIgb3JpZW50Q2xhc3MgPSBzLm9yaWVudGF0aW9uID09PSAnYmxhY2snID8gJyBibGFjaycgOiAnJztcbiAgICAgICAgZWxlbWVudC5hcHBlbmRDaGlsZChyZW5kZXJDb29yZHModHlwZXNfMS5yYW5rcywgJ3JhbmtzJyArIG9yaWVudENsYXNzKSk7XG4gICAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQocmVuZGVyQ29vcmRzKHR5cGVzXzEuZmlsZXMsICdmaWxlcycgKyBvcmllbnRDbGFzcykpO1xuICAgIH1cbiAgICB2YXIgZ2hvc3Q7XG4gICAgaWYgKGJvdW5kcyAmJiBzLmRyYWdnYWJsZS5zaG93R2hvc3QpIHtcbiAgICAgICAgZ2hvc3QgPSB1dGlsXzEuY3JlYXRlRWwoJ3BpZWNlJywgJ2dob3N0Jyk7XG4gICAgICAgIHV0aWxfMS5zZXRWaXNpYmxlKGdob3N0LCBmYWxzZSk7XG4gICAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQoZ2hvc3QpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBib2FyZDogYm9hcmQsXG4gICAgICAgIGdob3N0OiBnaG9zdCxcbiAgICAgICAgc3ZnOiBzdmdcbiAgICB9O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gd3JhcDtcbmZ1bmN0aW9uIHJlbmRlckNvb3JkcyhlbGVtcywgY2xhc3NOYW1lKSB7XG4gICAgdmFyIGVsID0gdXRpbF8xLmNyZWF0ZUVsKCdjb29yZHMnLCBjbGFzc05hbWUpO1xuICAgIHZhciBmO1xuICAgIGZvciAodmFyIGkgaW4gZWxlbXMpIHtcbiAgICAgICAgZiA9IHV0aWxfMS5jcmVhdGVFbCgnY29vcmQnKTtcbiAgICAgICAgZi50ZXh0Q29udGVudCA9IGVsZW1zW2ldO1xuICAgICAgICBlbC5hcHBlbmRDaGlsZChmKTtcbiAgICB9XG4gICAgcmV0dXJuIGVsO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZHJhZyA9IHJlcXVpcmUoXCIuL2RyYWdcIik7XG52YXIgZHJhdyA9IHJlcXVpcmUoXCIuL2RyYXdcIik7XG52YXIgdXRpbF8xID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcbmZ1bmN0aW9uIGJpbmRCb2FyZChzKSB7XG4gICAgaWYgKHMudmlld09ubHkpXG4gICAgICAgIHJldHVybjtcbiAgICB2YXIgYm9hcmRFbCA9IHMuZG9tLmVsZW1lbnRzLmJvYXJkLCBvblN0YXJ0ID0gc3RhcnREcmFnT3JEcmF3KHMpO1xuICAgIGJvYXJkRWwuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIG9uU3RhcnQpO1xuICAgIGJvYXJkRWwuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgb25TdGFydCk7XG4gICAgaWYgKHMuZGlzYWJsZUNvbnRleHRNZW51IHx8IHMuZHJhd2FibGUuZW5hYmxlZCkge1xuICAgICAgICBib2FyZEVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51JywgZnVuY3Rpb24gKGUpIHsgcmV0dXJuIGUucHJldmVudERlZmF1bHQoKTsgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5iaW5kQm9hcmQgPSBiaW5kQm9hcmQ7XG5mdW5jdGlvbiBiaW5kRG9jdW1lbnQocywgcmVkcmF3QWxsKSB7XG4gICAgdmFyIHVuYmluZHMgPSBbXTtcbiAgICBpZiAoIXMuZG9tLnJlbGF0aXZlICYmIHMucmVzaXphYmxlKSB7XG4gICAgICAgIHZhciBvblJlc2l6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHMuZG9tLmJvdW5kcy5jbGVhcigpO1xuICAgICAgICAgICAgdXRpbF8xLnJhZihyZWRyYXdBbGwpO1xuICAgICAgICB9O1xuICAgICAgICB1bmJpbmRzLnB1c2godW5iaW5kYWJsZShkb2N1bWVudC5ib2R5LCAnY2hlc3Nncm91bmQucmVzaXplJywgb25SZXNpemUpKTtcbiAgICB9XG4gICAgaWYgKCFzLnZpZXdPbmx5KSB7XG4gICAgICAgIHZhciBvbm1vdmVfMSA9IGRyYWdPckRyYXcocywgZHJhZy5tb3ZlLCBkcmF3Lm1vdmUpO1xuICAgICAgICB2YXIgb25lbmRfMSA9IGRyYWdPckRyYXcocywgZHJhZy5lbmQsIGRyYXcuZW5kKTtcbiAgICAgICAgWyd0b3VjaG1vdmUnLCAnbW91c2Vtb3ZlJ10uZm9yRWFjaChmdW5jdGlvbiAoZXYpIHsgcmV0dXJuIHVuYmluZHMucHVzaCh1bmJpbmRhYmxlKGRvY3VtZW50LCBldiwgb25tb3ZlXzEpKTsgfSk7XG4gICAgICAgIFsndG91Y2hlbmQnLCAnbW91c2V1cCddLmZvckVhY2goZnVuY3Rpb24gKGV2KSB7IHJldHVybiB1bmJpbmRzLnB1c2godW5iaW5kYWJsZShkb2N1bWVudCwgZXYsIG9uZW5kXzEpKTsgfSk7XG4gICAgICAgIHZhciBvblNjcm9sbCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHMuZG9tLmJvdW5kcy5jbGVhcigpOyB9O1xuICAgICAgICB1bmJpbmRzLnB1c2godW5iaW5kYWJsZSh3aW5kb3csICdzY3JvbGwnLCBvblNjcm9sbCwgeyBwYXNzaXZlOiB0cnVlIH0pKTtcbiAgICAgICAgdW5iaW5kcy5wdXNoKHVuYmluZGFibGUod2luZG93LCAncmVzaXplJywgb25TY3JvbGwsIHsgcGFzc2l2ZTogdHJ1ZSB9KSk7XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB1bmJpbmRzLmZvckVhY2goZnVuY3Rpb24gKGYpIHsgcmV0dXJuIGYoKTsgfSk7IH07XG59XG5leHBvcnRzLmJpbmREb2N1bWVudCA9IGJpbmREb2N1bWVudDtcbmZ1bmN0aW9uIHVuYmluZGFibGUoZWwsIGV2ZW50TmFtZSwgY2FsbGJhY2ssIG9wdGlvbnMpIHtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgY2FsbGJhY2ssIG9wdGlvbnMpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBlbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgY2FsbGJhY2spOyB9O1xufVxuZnVuY3Rpb24gc3RhcnREcmFnT3JEcmF3KHMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKHMuZHJhZ2dhYmxlLmN1cnJlbnQpXG4gICAgICAgICAgICBkcmFnLmNhbmNlbChzKTtcbiAgICAgICAgZWxzZSBpZiAocy5kcmF3YWJsZS5jdXJyZW50KVxuICAgICAgICAgICAgZHJhdy5jYW5jZWwocyk7XG4gICAgICAgIGVsc2UgaWYgKGUuc2hpZnRLZXkgfHwgdXRpbF8xLmlzUmlnaHRCdXR0b24oZSkpIHtcbiAgICAgICAgICAgIGlmIChzLmRyYXdhYmxlLmVuYWJsZWQpXG4gICAgICAgICAgICAgICAgZHJhdy5zdGFydChzLCBlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghcy52aWV3T25seSlcbiAgICAgICAgICAgIGRyYWcuc3RhcnQocywgZSk7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGRyYWdPckRyYXcocywgd2l0aERyYWcsIHdpdGhEcmF3KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGlmIChlLnNoaWZ0S2V5IHx8IHV0aWxfMS5pc1JpZ2h0QnV0dG9uKGUpKSB7XG4gICAgICAgICAgICBpZiAocy5kcmF3YWJsZS5lbmFibGVkKVxuICAgICAgICAgICAgICAgIHdpdGhEcmF3KHMsIGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCFzLnZpZXdPbmx5KVxuICAgICAgICAgICAgd2l0aERyYWcocywgZSk7XG4gICAgfTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHV0aWxfMSA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5mdW5jdGlvbiByZW5kZXIocykge1xuICAgIHZhciBhc1doaXRlID0gcy5vcmllbnRhdGlvbiA9PT0gJ3doaXRlJywgcG9zVG9UcmFuc2xhdGUgPSBzLmRvbS5yZWxhdGl2ZSA/IHV0aWwucG9zVG9UcmFuc2xhdGVSZWwgOiB1dGlsLnBvc1RvVHJhbnNsYXRlQWJzKHMuZG9tLmJvdW5kcygpKSwgdHJhbnNsYXRlID0gcy5kb20ucmVsYXRpdmUgPyB1dGlsLnRyYW5zbGF0ZVJlbCA6IHV0aWwudHJhbnNsYXRlQWJzLCBib2FyZEVsID0gcy5kb20uZWxlbWVudHMuYm9hcmQsIHBpZWNlcyA9IHMucGllY2VzLCBjdXJBbmltID0gcy5hbmltYXRpb24uY3VycmVudCwgYW5pbXMgPSBjdXJBbmltID8gY3VyQW5pbS5wbGFuLmFuaW1zIDoge30sIGZhZGluZ3MgPSBjdXJBbmltID8gY3VyQW5pbS5wbGFuLmZhZGluZ3MgOiB7fSwgY3VyRHJhZyA9IHMuZHJhZ2dhYmxlLmN1cnJlbnQsIHNxdWFyZXMgPSBjb21wdXRlU3F1YXJlQ2xhc3NlcyhzKSwgc2FtZVBpZWNlcyA9IHt9LCBzYW1lU3F1YXJlcyA9IHt9LCBtb3ZlZFBpZWNlcyA9IHt9LCBtb3ZlZFNxdWFyZXMgPSB7fSwgcGllY2VzS2V5cyA9IE9iamVjdC5rZXlzKHBpZWNlcyk7XG4gICAgdmFyIGssIHAsIGVsLCBwaWVjZUF0S2V5LCBlbFBpZWNlTmFtZSwgYW5pbSwgZmFkaW5nLCBwTXZkc2V0LCBwTXZkLCBzTXZkc2V0LCBzTXZkO1xuICAgIGVsID0gYm9hcmRFbC5maXJzdENoaWxkO1xuICAgIHdoaWxlIChlbCkge1xuICAgICAgICBrID0gZWwuY2dLZXk7XG4gICAgICAgIGlmIChpc1BpZWNlTm9kZShlbCkpIHtcbiAgICAgICAgICAgIHBpZWNlQXRLZXkgPSBwaWVjZXNba107XG4gICAgICAgICAgICBhbmltID0gYW5pbXNba107XG4gICAgICAgICAgICBmYWRpbmcgPSBmYWRpbmdzW2tdO1xuICAgICAgICAgICAgZWxQaWVjZU5hbWUgPSBlbC5jZ1BpZWNlO1xuICAgICAgICAgICAgaWYgKGVsLmNnRHJhZ2dpbmcgJiYgKCFjdXJEcmFnIHx8IGN1ckRyYWcub3JpZyAhPT0gaykpIHtcbiAgICAgICAgICAgICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKCdkcmFnZ2luZycpO1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0ZShlbCwgcG9zVG9UcmFuc2xhdGUodXRpbF8xLmtleTJwb3MoayksIGFzV2hpdGUpKTtcbiAgICAgICAgICAgICAgICBlbC5jZ0RyYWdnaW5nID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWZhZGluZyAmJiBlbC5jZ0ZhZGluZykge1xuICAgICAgICAgICAgICAgIGVsLmNnRmFkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZSgnZmFkaW5nJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocGllY2VBdEtleSkge1xuICAgICAgICAgICAgICAgIGlmIChhbmltICYmIGVsLmNnQW5pbWF0aW5nICYmIGVsUGllY2VOYW1lID09PSBwaWVjZU5hbWVPZihwaWVjZUF0S2V5KSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcG9zID0gdXRpbF8xLmtleTJwb3Moayk7XG4gICAgICAgICAgICAgICAgICAgIHBvc1swXSArPSBhbmltWzJdO1xuICAgICAgICAgICAgICAgICAgICBwb3NbMV0gKz0gYW5pbVszXTtcbiAgICAgICAgICAgICAgICAgICAgZWwuY2xhc3NMaXN0LmFkZCgnYW5pbScpO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGUoZWwsIHBvc1RvVHJhbnNsYXRlKHBvcywgYXNXaGl0ZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChlbC5jZ0FuaW1hdGluZykge1xuICAgICAgICAgICAgICAgICAgICBlbC5jZ0FuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKCdhbmltJyk7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZShlbCwgcG9zVG9UcmFuc2xhdGUodXRpbF8xLmtleTJwb3MoayksIGFzV2hpdGUpKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMuYWRkUGllY2VaSW5kZXgpXG4gICAgICAgICAgICAgICAgICAgICAgICBlbC5zdHlsZS56SW5kZXggPSBwb3NaSW5kZXgodXRpbF8xLmtleTJwb3MoayksIGFzV2hpdGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZWxQaWVjZU5hbWUgPT09IHBpZWNlTmFtZU9mKHBpZWNlQXRLZXkpICYmICghZmFkaW5nIHx8ICFlbC5jZ0ZhZGluZykpIHtcbiAgICAgICAgICAgICAgICAgICAgc2FtZVBpZWNlc1trXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmFkaW5nICYmIGVsUGllY2VOYW1lID09PSBwaWVjZU5hbWVPZihmYWRpbmcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKCdmYWRpbmcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsLmNnRmFkaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtb3ZlZFBpZWNlc1tlbFBpZWNlTmFtZV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW92ZWRQaWVjZXNbZWxQaWVjZU5hbWVdLnB1c2goZWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vdmVkUGllY2VzW2VsUGllY2VOYW1lXSA9IFtlbF07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAobW92ZWRQaWVjZXNbZWxQaWVjZU5hbWVdKVxuICAgICAgICAgICAgICAgICAgICBtb3ZlZFBpZWNlc1tlbFBpZWNlTmFtZV0ucHVzaChlbCk7XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICBtb3ZlZFBpZWNlc1tlbFBpZWNlTmFtZV0gPSBbZWxdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzU3F1YXJlTm9kZShlbCkpIHtcbiAgICAgICAgICAgIHZhciBjbiA9IGVsLmNsYXNzTmFtZTtcbiAgICAgICAgICAgIGlmIChzcXVhcmVzW2tdID09PSBjbilcbiAgICAgICAgICAgICAgICBzYW1lU3F1YXJlc1trXSA9IHRydWU7XG4gICAgICAgICAgICBlbHNlIGlmIChtb3ZlZFNxdWFyZXNbY25dKVxuICAgICAgICAgICAgICAgIG1vdmVkU3F1YXJlc1tjbl0ucHVzaChlbCk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgbW92ZWRTcXVhcmVzW2NuXSA9IFtlbF07XG4gICAgICAgIH1cbiAgICAgICAgZWwgPSBlbC5uZXh0U2libGluZztcbiAgICB9XG4gICAgZm9yICh2YXIgc2sgaW4gc3F1YXJlcykge1xuICAgICAgICBpZiAoIXNhbWVTcXVhcmVzW3NrXSkge1xuICAgICAgICAgICAgc012ZHNldCA9IG1vdmVkU3F1YXJlc1tzcXVhcmVzW3NrXV07XG4gICAgICAgICAgICBzTXZkID0gc012ZHNldCAmJiBzTXZkc2V0LnBvcCgpO1xuICAgICAgICAgICAgdmFyIHRyYW5zbGF0aW9uID0gcG9zVG9UcmFuc2xhdGUodXRpbF8xLmtleTJwb3Moc2spLCBhc1doaXRlKTtcbiAgICAgICAgICAgIGlmIChzTXZkKSB7XG4gICAgICAgICAgICAgICAgc012ZC5jZ0tleSA9IHNrO1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0ZShzTXZkLCB0cmFuc2xhdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgc3F1YXJlTm9kZSA9IHV0aWxfMS5jcmVhdGVFbCgnc3F1YXJlJywgc3F1YXJlc1tza10pO1xuICAgICAgICAgICAgICAgIHNxdWFyZU5vZGUuY2dLZXkgPSBzaztcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGUoc3F1YXJlTm9kZSwgdHJhbnNsYXRpb24pO1xuICAgICAgICAgICAgICAgIGJvYXJkRWwuaW5zZXJ0QmVmb3JlKHNxdWFyZU5vZGUsIGJvYXJkRWwuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgaiBpbiBwaWVjZXNLZXlzKSB7XG4gICAgICAgIGsgPSBwaWVjZXNLZXlzW2pdO1xuICAgICAgICBwID0gcGllY2VzW2tdO1xuICAgICAgICBhbmltID0gYW5pbXNba107XG4gICAgICAgIGlmICghc2FtZVBpZWNlc1trXSkge1xuICAgICAgICAgICAgcE12ZHNldCA9IG1vdmVkUGllY2VzW3BpZWNlTmFtZU9mKHApXTtcbiAgICAgICAgICAgIHBNdmQgPSBwTXZkc2V0ICYmIHBNdmRzZXQucG9wKCk7XG4gICAgICAgICAgICBpZiAocE12ZCkge1xuICAgICAgICAgICAgICAgIHBNdmQuY2dLZXkgPSBrO1xuICAgICAgICAgICAgICAgIGlmIChwTXZkLmNnRmFkaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHBNdmQuY2xhc3NMaXN0LnJlbW92ZSgnZmFkaW5nJyk7XG4gICAgICAgICAgICAgICAgICAgIHBNdmQuY2dGYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHBvcyA9IHV0aWxfMS5rZXkycG9zKGspO1xuICAgICAgICAgICAgICAgIGlmIChzLmFkZFBpZWNlWkluZGV4KVxuICAgICAgICAgICAgICAgICAgICBwTXZkLnN0eWxlLnpJbmRleCA9IHBvc1pJbmRleChwb3MsIGFzV2hpdGUpO1xuICAgICAgICAgICAgICAgIGlmIChhbmltKSB7XG4gICAgICAgICAgICAgICAgICAgIHBNdmQuY2dBbmltYXRpbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBwTXZkLmNsYXNzTGlzdC5hZGQoJ2FuaW0nKTtcbiAgICAgICAgICAgICAgICAgICAgcG9zWzBdICs9IGFuaW1bMl07XG4gICAgICAgICAgICAgICAgICAgIHBvc1sxXSArPSBhbmltWzNdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0cmFuc2xhdGUocE12ZCwgcG9zVG9UcmFuc2xhdGUocG9zLCBhc1doaXRlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgcGllY2VOYW1lID0gcGllY2VOYW1lT2YocCksIHBpZWNlTm9kZSA9IHV0aWxfMS5jcmVhdGVFbCgncGllY2UnLCBwaWVjZU5hbWUpLCBwb3MgPSB1dGlsXzEua2V5MnBvcyhrKTtcbiAgICAgICAgICAgICAgICBwaWVjZU5vZGUuY2dQaWVjZSA9IHBpZWNlTmFtZTtcbiAgICAgICAgICAgICAgICBwaWVjZU5vZGUuY2dLZXkgPSBrO1xuICAgICAgICAgICAgICAgIGlmIChhbmltKSB7XG4gICAgICAgICAgICAgICAgICAgIHBpZWNlTm9kZS5jZ0FuaW1hdGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHBvc1swXSArPSBhbmltWzJdO1xuICAgICAgICAgICAgICAgICAgICBwb3NbMV0gKz0gYW5pbVszXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRlKHBpZWNlTm9kZSwgcG9zVG9UcmFuc2xhdGUocG9zLCBhc1doaXRlKSk7XG4gICAgICAgICAgICAgICAgaWYgKHMuYWRkUGllY2VaSW5kZXgpXG4gICAgICAgICAgICAgICAgICAgIHBpZWNlTm9kZS5zdHlsZS56SW5kZXggPSBwb3NaSW5kZXgocG9zLCBhc1doaXRlKTtcbiAgICAgICAgICAgICAgICBib2FyZEVsLmFwcGVuZENoaWxkKHBpZWNlTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgaSBpbiBtb3ZlZFBpZWNlcylcbiAgICAgICAgcmVtb3ZlTm9kZXMocywgbW92ZWRQaWVjZXNbaV0pO1xuICAgIGZvciAodmFyIGkgaW4gbW92ZWRTcXVhcmVzKVxuICAgICAgICByZW1vdmVOb2RlcyhzLCBtb3ZlZFNxdWFyZXNbaV0pO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gcmVuZGVyO1xuZnVuY3Rpb24gaXNQaWVjZU5vZGUoZWwpIHtcbiAgICByZXR1cm4gZWwudGFnTmFtZSA9PT0gJ1BJRUNFJztcbn1cbmZ1bmN0aW9uIGlzU3F1YXJlTm9kZShlbCkge1xuICAgIHJldHVybiBlbC50YWdOYW1lID09PSAnU1FVQVJFJztcbn1cbmZ1bmN0aW9uIHJlbW92ZU5vZGVzKHMsIG5vZGVzKSB7XG4gICAgZm9yICh2YXIgaSBpbiBub2RlcylcbiAgICAgICAgcy5kb20uZWxlbWVudHMuYm9hcmQucmVtb3ZlQ2hpbGQobm9kZXNbaV0pO1xufVxuZnVuY3Rpb24gcG9zWkluZGV4KHBvcywgYXNXaGl0ZSkge1xuICAgIHZhciB6ID0gMiArIChwb3NbMV0gLSAxKSAqIDggKyAoOCAtIHBvc1swXSk7XG4gICAgaWYgKGFzV2hpdGUpXG4gICAgICAgIHogPSA2NyAtIHo7XG4gICAgcmV0dXJuIHogKyAnJztcbn1cbmZ1bmN0aW9uIHBpZWNlTmFtZU9mKHBpZWNlKSB7XG4gICAgcmV0dXJuIHBpZWNlLmNvbG9yICsgXCIgXCIgKyBwaWVjZS5yb2xlO1xufVxuZnVuY3Rpb24gY29tcHV0ZVNxdWFyZUNsYXNzZXMocykge1xuICAgIHZhciBzcXVhcmVzID0ge307XG4gICAgdmFyIGksIGs7XG4gICAgaWYgKHMubGFzdE1vdmUgJiYgcy5oaWdobGlnaHQubGFzdE1vdmUpXG4gICAgICAgIGZvciAoaSBpbiBzLmxhc3RNb3ZlKSB7XG4gICAgICAgICAgICBhZGRTcXVhcmUoc3F1YXJlcywgcy5sYXN0TW92ZVtpXSwgJ2xhc3QtbW92ZScpO1xuICAgICAgICB9XG4gICAgaWYgKHMuY2hlY2sgJiYgcy5oaWdobGlnaHQuY2hlY2spXG4gICAgICAgIGFkZFNxdWFyZShzcXVhcmVzLCBzLmNoZWNrLCAnY2hlY2snKTtcbiAgICBpZiAocy5zZWxlY3RlZCkge1xuICAgICAgICBhZGRTcXVhcmUoc3F1YXJlcywgcy5zZWxlY3RlZCwgJ3NlbGVjdGVkJyk7XG4gICAgICAgIGlmIChzLm1vdmFibGUuc2hvd0Rlc3RzKSB7XG4gICAgICAgICAgICB2YXIgZGVzdHMgPSBzLm1vdmFibGUuZGVzdHMgJiYgcy5tb3ZhYmxlLmRlc3RzW3Muc2VsZWN0ZWRdO1xuICAgICAgICAgICAgaWYgKGRlc3RzKVxuICAgICAgICAgICAgICAgIGZvciAoaSBpbiBkZXN0cykge1xuICAgICAgICAgICAgICAgICAgICBrID0gZGVzdHNbaV07XG4gICAgICAgICAgICAgICAgICAgIGFkZFNxdWFyZShzcXVhcmVzLCBrLCAnbW92ZS1kZXN0JyArIChzLnBpZWNlc1trXSA/ICcgb2MnIDogJycpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgcERlc3RzID0gcy5wcmVtb3ZhYmxlLmRlc3RzO1xuICAgICAgICAgICAgaWYgKHBEZXN0cylcbiAgICAgICAgICAgICAgICBmb3IgKGkgaW4gcERlc3RzKSB7XG4gICAgICAgICAgICAgICAgICAgIGsgPSBwRGVzdHNbaV07XG4gICAgICAgICAgICAgICAgICAgIGFkZFNxdWFyZShzcXVhcmVzLCBrLCAncHJlbW92ZS1kZXN0JyArIChzLnBpZWNlc1trXSA/ICcgb2MnIDogJycpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFyIHByZW1vdmUgPSBzLnByZW1vdmFibGUuY3VycmVudDtcbiAgICBpZiAocHJlbW92ZSlcbiAgICAgICAgZm9yIChpIGluIHByZW1vdmUpXG4gICAgICAgICAgICBhZGRTcXVhcmUoc3F1YXJlcywgcHJlbW92ZVtpXSwgJ2N1cnJlbnQtcHJlbW92ZScpO1xuICAgIGVsc2UgaWYgKHMucHJlZHJvcHBhYmxlLmN1cnJlbnQpXG4gICAgICAgIGFkZFNxdWFyZShzcXVhcmVzLCBzLnByZWRyb3BwYWJsZS5jdXJyZW50LmtleSwgJ2N1cnJlbnQtcHJlbW92ZScpO1xuICAgIHZhciBvID0gcy5leHBsb2Rpbmc7XG4gICAgaWYgKG8pXG4gICAgICAgIGZvciAoaSBpbiBvLmtleXMpXG4gICAgICAgICAgICBhZGRTcXVhcmUoc3F1YXJlcywgby5rZXlzW2ldLCAnZXhwbG9kaW5nJyArIG8uc3RhZ2UpO1xuICAgIHJldHVybiBzcXVhcmVzO1xufVxuZnVuY3Rpb24gYWRkU3F1YXJlKHNxdWFyZXMsIGtleSwga2xhc3MpIHtcbiAgICBpZiAoc3F1YXJlc1trZXldKVxuICAgICAgICBzcXVhcmVzW2tleV0gKz0gJyAnICsga2xhc3M7XG4gICAgZWxzZVxuICAgICAgICBzcXVhcmVzW2tleV0gPSBrbGFzcztcbn1cbiIsIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYsIEplZmYgSGx5d2EgKGpobHl3YUBnbWFpbC5jb20pXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dFxuICogbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6XG4gKlxuICogMS4gUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLFxuICogICAgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci5cbiAqIDIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSxcbiAqICAgIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlIGRvY3VtZW50YXRpb25cbiAqICAgIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLlxuICpcbiAqIFRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgXCJBUyBJU1wiXG4gKiBBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFXG4gKiBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRVxuICogQVJFIERJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBDT1BZUklHSFQgT1dORVIgT1IgQ09OVFJJQlVUT1JTIEJFXG4gKiBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SXG4gKiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRlxuICogU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTXG4gKiBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTiBBTlkgVEhFT1JZIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTlxuICogQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSlcbiAqIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFXG4gKiBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS5cbiAqXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKiBtaW5pZmllZCBsaWNlbnNlIGJlbG93ICAqL1xuXG4vKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE2LCBKZWZmIEhseXdhIChqaGx5d2FAZ21haWwuY29tKVxuICogUmVsZWFzZWQgdW5kZXIgdGhlIEJTRCBsaWNlbnNlXG4gKiBodHRwczovL2dpdGh1Yi5jb20vamhseXdhL2NoZXNzLmpzL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG52YXIgQ2hlc3MgPSBmdW5jdGlvbihmZW4pIHtcblxuICAvKiBqc2hpbnQgaW5kZW50OiBmYWxzZSAqL1xuXG4gIHZhciBCTEFDSyA9ICdiJztcbiAgdmFyIFdISVRFID0gJ3cnO1xuXG4gIHZhciBFTVBUWSA9IC0xO1xuXG4gIHZhciBQQVdOID0gJ3AnO1xuICB2YXIgS05JR0hUID0gJ24nO1xuICB2YXIgQklTSE9QID0gJ2InO1xuICB2YXIgUk9PSyA9ICdyJztcbiAgdmFyIFFVRUVOID0gJ3EnO1xuICB2YXIgS0lORyA9ICdrJztcblxuICB2YXIgU1lNQk9MUyA9ICdwbmJycWtQTkJSUUsnO1xuXG4gIHZhciBERUZBVUxUX1BPU0lUSU9OID0gJ3JuYnFrYm5yL3BwcHBwcHBwLzgvOC84LzgvUFBQUFBQUFAvUk5CUUtCTlIgdyBLUWtxIC0gMCAxJztcblxuICB2YXIgUE9TU0lCTEVfUkVTVUxUUyA9IFsnMS0wJywgJzAtMScsICcxLzItMS8yJywgJyonXTtcblxuICB2YXIgUEFXTl9PRkZTRVRTID0ge1xuICAgIGI6IFsxNiwgMzIsIDE3LCAxNV0sXG4gICAgdzogWy0xNiwgLTMyLCAtMTcsIC0xNV1cbiAgfTtcblxuICB2YXIgUElFQ0VfT0ZGU0VUUyA9IHtcbiAgICBuOiBbLTE4LCAtMzMsIC0zMSwgLTE0LCAgMTgsIDMzLCAzMSwgIDE0XSxcbiAgICBiOiBbLTE3LCAtMTUsICAxNywgIDE1XSxcbiAgICByOiBbLTE2LCAgIDEsICAxNiwgIC0xXSxcbiAgICBxOiBbLTE3LCAtMTYsIC0xNSwgICAxLCAgMTcsIDE2LCAxNSwgIC0xXSxcbiAgICBrOiBbLTE3LCAtMTYsIC0xNSwgICAxLCAgMTcsIDE2LCAxNSwgIC0xXVxuICB9O1xuXG4gIHZhciBBVFRBQ0tTID0gW1xuICAgIDIwLCAwLCAwLCAwLCAwLCAwLCAwLCAyNCwgIDAsIDAsIDAsIDAsIDAsIDAsMjAsIDAsXG4gICAgIDAsMjAsIDAsIDAsIDAsIDAsIDAsIDI0LCAgMCwgMCwgMCwgMCwgMCwyMCwgMCwgMCxcbiAgICAgMCwgMCwyMCwgMCwgMCwgMCwgMCwgMjQsICAwLCAwLCAwLCAwLDIwLCAwLCAwLCAwLFxuICAgICAwLCAwLCAwLDIwLCAwLCAwLCAwLCAyNCwgIDAsIDAsIDAsMjAsIDAsIDAsIDAsIDAsXG4gICAgIDAsIDAsIDAsIDAsMjAsIDAsIDAsIDI0LCAgMCwgMCwyMCwgMCwgMCwgMCwgMCwgMCxcbiAgICAgMCwgMCwgMCwgMCwgMCwyMCwgMiwgMjQsICAyLDIwLCAwLCAwLCAwLCAwLCAwLCAwLFxuICAgICAwLCAwLCAwLCAwLCAwLCAyLDUzLCA1NiwgNTMsIDIsIDAsIDAsIDAsIDAsIDAsIDAsXG4gICAgMjQsMjQsMjQsMjQsMjQsMjQsNTYsICAwLCA1NiwyNCwyNCwyNCwyNCwyNCwyNCwgMCxcbiAgICAgMCwgMCwgMCwgMCwgMCwgMiw1MywgNTYsIDUzLCAyLCAwLCAwLCAwLCAwLCAwLCAwLFxuICAgICAwLCAwLCAwLCAwLCAwLDIwLCAyLCAyNCwgIDIsMjAsIDAsIDAsIDAsIDAsIDAsIDAsXG4gICAgIDAsIDAsIDAsIDAsMjAsIDAsIDAsIDI0LCAgMCwgMCwyMCwgMCwgMCwgMCwgMCwgMCxcbiAgICAgMCwgMCwgMCwyMCwgMCwgMCwgMCwgMjQsICAwLCAwLCAwLDIwLCAwLCAwLCAwLCAwLFxuICAgICAwLCAwLDIwLCAwLCAwLCAwLCAwLCAyNCwgIDAsIDAsIDAsIDAsMjAsIDAsIDAsIDAsXG4gICAgIDAsMjAsIDAsIDAsIDAsIDAsIDAsIDI0LCAgMCwgMCwgMCwgMCwgMCwyMCwgMCwgMCxcbiAgICAyMCwgMCwgMCwgMCwgMCwgMCwgMCwgMjQsICAwLCAwLCAwLCAwLCAwLCAwLDIwXG4gIF07XG5cbiAgdmFyIFJBWVMgPSBbXG4gICAgIDE3LCAgMCwgIDAsICAwLCAgMCwgIDAsICAwLCAxNiwgIDAsICAwLCAgMCwgIDAsICAwLCAgMCwgMTUsIDAsXG4gICAgICAwLCAxNywgIDAsICAwLCAgMCwgIDAsICAwLCAxNiwgIDAsICAwLCAgMCwgIDAsICAwLCAxNSwgIDAsIDAsXG4gICAgICAwLCAgMCwgMTcsICAwLCAgMCwgIDAsICAwLCAxNiwgIDAsICAwLCAgMCwgIDAsIDE1LCAgMCwgIDAsIDAsXG4gICAgICAwLCAgMCwgIDAsIDE3LCAgMCwgIDAsICAwLCAxNiwgIDAsICAwLCAgMCwgMTUsICAwLCAgMCwgIDAsIDAsXG4gICAgICAwLCAgMCwgIDAsICAwLCAxNywgIDAsICAwLCAxNiwgIDAsICAwLCAxNSwgIDAsICAwLCAgMCwgIDAsIDAsXG4gICAgICAwLCAgMCwgIDAsICAwLCAgMCwgMTcsICAwLCAxNiwgIDAsIDE1LCAgMCwgIDAsICAwLCAgMCwgIDAsIDAsXG4gICAgICAwLCAgMCwgIDAsICAwLCAgMCwgIDAsIDE3LCAxNiwgMTUsICAwLCAgMCwgIDAsICAwLCAgMCwgIDAsIDAsXG4gICAgICAxLCAgMSwgIDEsICAxLCAgMSwgIDEsICAxLCAgMCwgLTEsIC0xLCAgLTEsLTEsIC0xLCAtMSwgLTEsIDAsXG4gICAgICAwLCAgMCwgIDAsICAwLCAgMCwgIDAsLTE1LC0xNiwtMTcsICAwLCAgMCwgIDAsICAwLCAgMCwgIDAsIDAsXG4gICAgICAwLCAgMCwgIDAsICAwLCAgMCwtMTUsICAwLC0xNiwgIDAsLTE3LCAgMCwgIDAsICAwLCAgMCwgIDAsIDAsXG4gICAgICAwLCAgMCwgIDAsICAwLC0xNSwgIDAsICAwLC0xNiwgIDAsICAwLC0xNywgIDAsICAwLCAgMCwgIDAsIDAsXG4gICAgICAwLCAgMCwgIDAsLTE1LCAgMCwgIDAsICAwLC0xNiwgIDAsICAwLCAgMCwtMTcsICAwLCAgMCwgIDAsIDAsXG4gICAgICAwLCAgMCwtMTUsICAwLCAgMCwgIDAsICAwLC0xNiwgIDAsICAwLCAgMCwgIDAsLTE3LCAgMCwgIDAsIDAsXG4gICAgICAwLC0xNSwgIDAsICAwLCAgMCwgIDAsICAwLC0xNiwgIDAsICAwLCAgMCwgIDAsICAwLC0xNywgIDAsIDAsXG4gICAgLTE1LCAgMCwgIDAsICAwLCAgMCwgIDAsICAwLC0xNiwgIDAsICAwLCAgMCwgIDAsICAwLCAgMCwtMTdcbiAgXTtcblxuICB2YXIgU0hJRlRTID0geyBwOiAwLCBuOiAxLCBiOiAyLCByOiAzLCBxOiA0LCBrOiA1IH07XG5cbiAgdmFyIEZMQUdTID0ge1xuICAgIE5PUk1BTDogJ24nLFxuICAgIENBUFRVUkU6ICdjJyxcbiAgICBCSUdfUEFXTjogJ2InLFxuICAgIEVQX0NBUFRVUkU6ICdlJyxcbiAgICBQUk9NT1RJT046ICdwJyxcbiAgICBLU0lERV9DQVNUTEU6ICdrJyxcbiAgICBRU0lERV9DQVNUTEU6ICdxJ1xuICB9O1xuXG4gIHZhciBCSVRTID0ge1xuICAgIE5PUk1BTDogMSxcbiAgICBDQVBUVVJFOiAyLFxuICAgIEJJR19QQVdOOiA0LFxuICAgIEVQX0NBUFRVUkU6IDgsXG4gICAgUFJPTU9USU9OOiAxNixcbiAgICBLU0lERV9DQVNUTEU6IDMyLFxuICAgIFFTSURFX0NBU1RMRTogNjRcbiAgfTtcblxuICB2YXIgUkFOS18xID0gNztcbiAgdmFyIFJBTktfMiA9IDY7XG4gIHZhciBSQU5LXzMgPSA1O1xuICB2YXIgUkFOS180ID0gNDtcbiAgdmFyIFJBTktfNSA9IDM7XG4gIHZhciBSQU5LXzYgPSAyO1xuICB2YXIgUkFOS183ID0gMTtcbiAgdmFyIFJBTktfOCA9IDA7XG5cbiAgdmFyIFNRVUFSRVMgPSB7XG4gICAgYTg6ICAgMCwgYjg6ICAgMSwgYzg6ICAgMiwgZDg6ICAgMywgZTg6ICAgNCwgZjg6ICAgNSwgZzg6ICAgNiwgaDg6ICAgNyxcbiAgICBhNzogIDE2LCBiNzogIDE3LCBjNzogIDE4LCBkNzogIDE5LCBlNzogIDIwLCBmNzogIDIxLCBnNzogIDIyLCBoNzogIDIzLFxuICAgIGE2OiAgMzIsIGI2OiAgMzMsIGM2OiAgMzQsIGQ2OiAgMzUsIGU2OiAgMzYsIGY2OiAgMzcsIGc2OiAgMzgsIGg2OiAgMzksXG4gICAgYTU6ICA0OCwgYjU6ICA0OSwgYzU6ICA1MCwgZDU6ICA1MSwgZTU6ICA1MiwgZjU6ICA1MywgZzU6ICA1NCwgaDU6ICA1NSxcbiAgICBhNDogIDY0LCBiNDogIDY1LCBjNDogIDY2LCBkNDogIDY3LCBlNDogIDY4LCBmNDogIDY5LCBnNDogIDcwLCBoNDogIDcxLFxuICAgIGEzOiAgODAsIGIzOiAgODEsIGMzOiAgODIsIGQzOiAgODMsIGUzOiAgODQsIGYzOiAgODUsIGczOiAgODYsIGgzOiAgODcsXG4gICAgYTI6ICA5NiwgYjI6ICA5NywgYzI6ICA5OCwgZDI6ICA5OSwgZTI6IDEwMCwgZjI6IDEwMSwgZzI6IDEwMiwgaDI6IDEwMyxcbiAgICBhMTogMTEyLCBiMTogMTEzLCBjMTogMTE0LCBkMTogMTE1LCBlMTogMTE2LCBmMTogMTE3LCBnMTogMTE4LCBoMTogMTE5XG4gIH07XG5cbiAgdmFyIFJPT0tTID0ge1xuICAgIHc6IFt7c3F1YXJlOiBTUVVBUkVTLmExLCBmbGFnOiBCSVRTLlFTSURFX0NBU1RMRX0sXG4gICAgICAgIHtzcXVhcmU6IFNRVUFSRVMuaDEsIGZsYWc6IEJJVFMuS1NJREVfQ0FTVExFfV0sXG4gICAgYjogW3tzcXVhcmU6IFNRVUFSRVMuYTgsIGZsYWc6IEJJVFMuUVNJREVfQ0FTVExFfSxcbiAgICAgICAge3NxdWFyZTogU1FVQVJFUy5oOCwgZmxhZzogQklUUy5LU0lERV9DQVNUTEV9XVxuICB9O1xuXG4gIHZhciBib2FyZCA9IG5ldyBBcnJheSgxMjgpO1xuICB2YXIga2luZ3MgPSB7dzogRU1QVFksIGI6IEVNUFRZfTtcbiAgdmFyIHR1cm4gPSBXSElURTtcbiAgdmFyIGNhc3RsaW5nID0ge3c6IDAsIGI6IDB9O1xuICB2YXIgZXBfc3F1YXJlID0gRU1QVFk7XG4gIHZhciBoYWxmX21vdmVzID0gMDtcbiAgdmFyIG1vdmVfbnVtYmVyID0gMTtcbiAgdmFyIGhpc3RvcnkgPSBbXTtcbiAgdmFyIGhlYWRlciA9IHt9O1xuXG4gIC8qIGlmIHRoZSB1c2VyIHBhc3NlcyBpbiBhIGZlbiBzdHJpbmcsIGxvYWQgaXQsIGVsc2UgZGVmYXVsdCB0b1xuICAgKiBzdGFydGluZyBwb3NpdGlvblxuICAgKi9cbiAgaWYgKHR5cGVvZiBmZW4gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgbG9hZChERUZBVUxUX1BPU0lUSU9OKTtcbiAgfSBlbHNlIHtcbiAgICBsb2FkKGZlbik7XG4gIH1cblxuICBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICBib2FyZCA9IG5ldyBBcnJheSgxMjgpO1xuICAgIGtpbmdzID0ge3c6IEVNUFRZLCBiOiBFTVBUWX07XG4gICAgdHVybiA9IFdISVRFO1xuICAgIGNhc3RsaW5nID0ge3c6IDAsIGI6IDB9O1xuICAgIGVwX3NxdWFyZSA9IEVNUFRZO1xuICAgIGhhbGZfbW92ZXMgPSAwO1xuICAgIG1vdmVfbnVtYmVyID0gMTtcbiAgICBoaXN0b3J5ID0gW107XG4gICAgaGVhZGVyID0ge307XG4gICAgdXBkYXRlX3NldHVwKGdlbmVyYXRlX2ZlbigpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIGxvYWQoREVGQVVMVF9QT1NJVElPTik7XG4gIH1cblxuICBmdW5jdGlvbiBsb2FkKGZlbikge1xuICAgIHZhciB0b2tlbnMgPSBmZW4uc3BsaXQoL1xccysvKTtcbiAgICB2YXIgcG9zaXRpb24gPSB0b2tlbnNbMF07XG4gICAgdmFyIHNxdWFyZSA9IDA7XG5cbiAgICBpZiAoIXZhbGlkYXRlX2ZlbihmZW4pLnZhbGlkKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgY2xlYXIoKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcG9zaXRpb24ubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBwaWVjZSA9IHBvc2l0aW9uLmNoYXJBdChpKTtcblxuICAgICAgaWYgKHBpZWNlID09PSAnLycpIHtcbiAgICAgICAgc3F1YXJlICs9IDg7XG4gICAgICB9IGVsc2UgaWYgKGlzX2RpZ2l0KHBpZWNlKSkge1xuICAgICAgICBzcXVhcmUgKz0gcGFyc2VJbnQocGllY2UsIDEwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBjb2xvciA9IChwaWVjZSA8ICdhJykgPyBXSElURSA6IEJMQUNLO1xuICAgICAgICBwdXQoe3R5cGU6IHBpZWNlLnRvTG93ZXJDYXNlKCksIGNvbG9yOiBjb2xvcn0sIGFsZ2VicmFpYyhzcXVhcmUpKTtcbiAgICAgICAgc3F1YXJlKys7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdHVybiA9IHRva2Vuc1sxXTtcblxuICAgIGlmICh0b2tlbnNbMl0uaW5kZXhPZignSycpID4gLTEpIHtcbiAgICAgIGNhc3RsaW5nLncgfD0gQklUUy5LU0lERV9DQVNUTEU7XG4gICAgfVxuICAgIGlmICh0b2tlbnNbMl0uaW5kZXhPZignUScpID4gLTEpIHtcbiAgICAgIGNhc3RsaW5nLncgfD0gQklUUy5RU0lERV9DQVNUTEU7XG4gICAgfVxuICAgIGlmICh0b2tlbnNbMl0uaW5kZXhPZignaycpID4gLTEpIHtcbiAgICAgIGNhc3RsaW5nLmIgfD0gQklUUy5LU0lERV9DQVNUTEU7XG4gICAgfVxuICAgIGlmICh0b2tlbnNbMl0uaW5kZXhPZigncScpID4gLTEpIHtcbiAgICAgIGNhc3RsaW5nLmIgfD0gQklUUy5RU0lERV9DQVNUTEU7XG4gICAgfVxuXG4gICAgZXBfc3F1YXJlID0gKHRva2Vuc1szXSA9PT0gJy0nKSA/IEVNUFRZIDogU1FVQVJFU1t0b2tlbnNbM11dO1xuICAgIGhhbGZfbW92ZXMgPSBwYXJzZUludCh0b2tlbnNbNF0sIDEwKTtcbiAgICBtb3ZlX251bWJlciA9IHBhcnNlSW50KHRva2Vuc1s1XSwgMTApO1xuXG4gICAgdXBkYXRlX3NldHVwKGdlbmVyYXRlX2ZlbigpKTtcblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLyogVE9ETzogdGhpcyBmdW5jdGlvbiBpcyBwcmV0dHkgbXVjaCBjcmFwIC0gaXQgdmFsaWRhdGVzIHN0cnVjdHVyZSBidXRcbiAgICogY29tcGxldGVseSBpZ25vcmVzIGNvbnRlbnQgKGUuZy4gZG9lc24ndCB2ZXJpZnkgdGhhdCBlYWNoIHNpZGUgaGFzIGEga2luZylcbiAgICogLi4uIHdlIHNob3VsZCByZXdyaXRlIHRoaXMsIGFuZCBkaXRjaCB0aGUgc2lsbHkgZXJyb3JfbnVtYmVyIGZpZWxkIHdoaWxlXG4gICAqIHdlJ3JlIGF0IGl0XG4gICAqL1xuICBmdW5jdGlvbiB2YWxpZGF0ZV9mZW4oZmVuKSB7XG4gICAgdmFyIGVycm9ycyA9IHtcbiAgICAgICAwOiAnTm8gZXJyb3JzLicsXG4gICAgICAgMTogJ0ZFTiBzdHJpbmcgbXVzdCBjb250YWluIHNpeCBzcGFjZS1kZWxpbWl0ZWQgZmllbGRzLicsXG4gICAgICAgMjogJzZ0aCBmaWVsZCAobW92ZSBudW1iZXIpIG11c3QgYmUgYSBwb3NpdGl2ZSBpbnRlZ2VyLicsXG4gICAgICAgMzogJzV0aCBmaWVsZCAoaGFsZiBtb3ZlIGNvdW50ZXIpIG11c3QgYmUgYSBub24tbmVnYXRpdmUgaW50ZWdlci4nLFxuICAgICAgIDQ6ICc0dGggZmllbGQgKGVuLXBhc3NhbnQgc3F1YXJlKSBpcyBpbnZhbGlkLicsXG4gICAgICAgNTogJzNyZCBmaWVsZCAoY2FzdGxpbmcgYXZhaWxhYmlsaXR5KSBpcyBpbnZhbGlkLicsXG4gICAgICAgNjogJzJuZCBmaWVsZCAoc2lkZSB0byBtb3ZlKSBpcyBpbnZhbGlkLicsXG4gICAgICAgNzogJzFzdCBmaWVsZCAocGllY2UgcG9zaXRpb25zKSBkb2VzIG5vdCBjb250YWluIDggXFwnL1xcJy1kZWxpbWl0ZWQgcm93cy4nLFxuICAgICAgIDg6ICcxc3QgZmllbGQgKHBpZWNlIHBvc2l0aW9ucykgaXMgaW52YWxpZCBbY29uc2VjdXRpdmUgbnVtYmVyc10uJyxcbiAgICAgICA5OiAnMXN0IGZpZWxkIChwaWVjZSBwb3NpdGlvbnMpIGlzIGludmFsaWQgW2ludmFsaWQgcGllY2VdLicsXG4gICAgICAxMDogJzFzdCBmaWVsZCAocGllY2UgcG9zaXRpb25zKSBpcyBpbnZhbGlkIFtyb3cgdG9vIGxhcmdlXS4nLFxuICAgICAgMTE6ICdJbGxlZ2FsIGVuLXBhc3NhbnQgc3F1YXJlJyxcbiAgICB9O1xuXG4gICAgLyogMXN0IGNyaXRlcmlvbjogNiBzcGFjZS1zZXBlcmF0ZWQgZmllbGRzPyAqL1xuICAgIHZhciB0b2tlbnMgPSBmZW4uc3BsaXQoL1xccysvKTtcbiAgICBpZiAodG9rZW5zLmxlbmd0aCAhPT0gNikge1xuICAgICAgcmV0dXJuIHt2YWxpZDogZmFsc2UsIGVycm9yX251bWJlcjogMSwgZXJyb3I6IGVycm9yc1sxXX07XG4gICAgfVxuXG4gICAgLyogMm5kIGNyaXRlcmlvbjogbW92ZSBudW1iZXIgZmllbGQgaXMgYSBpbnRlZ2VyIHZhbHVlID4gMD8gKi9cbiAgICBpZiAoaXNOYU4odG9rZW5zWzVdKSB8fCAocGFyc2VJbnQodG9rZW5zWzVdLCAxMCkgPD0gMCkpIHtcbiAgICAgIHJldHVybiB7dmFsaWQ6IGZhbHNlLCBlcnJvcl9udW1iZXI6IDIsIGVycm9yOiBlcnJvcnNbMl19O1xuICAgIH1cblxuICAgIC8qIDNyZCBjcml0ZXJpb246IGhhbGYgbW92ZSBjb3VudGVyIGlzIGFuIGludGVnZXIgPj0gMD8gKi9cbiAgICBpZiAoaXNOYU4odG9rZW5zWzRdKSB8fCAocGFyc2VJbnQodG9rZW5zWzRdLCAxMCkgPCAwKSkge1xuICAgICAgcmV0dXJuIHt2YWxpZDogZmFsc2UsIGVycm9yX251bWJlcjogMywgZXJyb3I6IGVycm9yc1szXX07XG4gICAgfVxuXG4gICAgLyogNHRoIGNyaXRlcmlvbjogNHRoIGZpZWxkIGlzIGEgdmFsaWQgZS5wLi1zdHJpbmc/ICovXG4gICAgaWYgKCEvXigtfFthYmNkZWZnaF1bMzZdKSQvLnRlc3QodG9rZW5zWzNdKSkge1xuICAgICAgcmV0dXJuIHt2YWxpZDogZmFsc2UsIGVycm9yX251bWJlcjogNCwgZXJyb3I6IGVycm9yc1s0XX07XG4gICAgfVxuXG4gICAgLyogNXRoIGNyaXRlcmlvbjogM3RoIGZpZWxkIGlzIGEgdmFsaWQgY2FzdGxlLXN0cmluZz8gKi9cbiAgICBpZiggIS9eKEtRP2s/cT98UWs/cT98a3E/fHF8LSkkLy50ZXN0KHRva2Vuc1syXSkpIHtcbiAgICAgIHJldHVybiB7dmFsaWQ6IGZhbHNlLCBlcnJvcl9udW1iZXI6IDUsIGVycm9yOiBlcnJvcnNbNV19O1xuICAgIH1cblxuICAgIC8qIDZ0aCBjcml0ZXJpb246IDJuZCBmaWVsZCBpcyBcIndcIiAod2hpdGUpIG9yIFwiYlwiIChibGFjayk/ICovXG4gICAgaWYgKCEvXih3fGIpJC8udGVzdCh0b2tlbnNbMV0pKSB7XG4gICAgICByZXR1cm4ge3ZhbGlkOiBmYWxzZSwgZXJyb3JfbnVtYmVyOiA2LCBlcnJvcjogZXJyb3JzWzZdfTtcbiAgICB9XG5cbiAgICAvKiA3dGggY3JpdGVyaW9uOiAxc3QgZmllbGQgY29udGFpbnMgOCByb3dzPyAqL1xuICAgIHZhciByb3dzID0gdG9rZW5zWzBdLnNwbGl0KCcvJyk7XG4gICAgaWYgKHJvd3MubGVuZ3RoICE9PSA4KSB7XG4gICAgICByZXR1cm4ge3ZhbGlkOiBmYWxzZSwgZXJyb3JfbnVtYmVyOiA3LCBlcnJvcjogZXJyb3JzWzddfTtcbiAgICB9XG5cbiAgICAvKiA4dGggY3JpdGVyaW9uOiBldmVyeSByb3cgaXMgdmFsaWQ/ICovXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCByb3dzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvKiBjaGVjayBmb3IgcmlnaHQgc3VtIG9mIGZpZWxkcyBBTkQgbm90IHR3byBudW1iZXJzIGluIHN1Y2Nlc3Npb24gKi9cbiAgICAgIHZhciBzdW1fZmllbGRzID0gMDtcbiAgICAgIHZhciBwcmV2aW91c193YXNfbnVtYmVyID0gZmFsc2U7XG5cbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgcm93c1tpXS5sZW5ndGg7IGsrKykge1xuICAgICAgICBpZiAoIWlzTmFOKHJvd3NbaV1ba10pKSB7XG4gICAgICAgICAgaWYgKHByZXZpb3VzX3dhc19udW1iZXIpIHtcbiAgICAgICAgICAgIHJldHVybiB7dmFsaWQ6IGZhbHNlLCBlcnJvcl9udW1iZXI6IDgsIGVycm9yOiBlcnJvcnNbOF19O1xuICAgICAgICAgIH1cbiAgICAgICAgICBzdW1fZmllbGRzICs9IHBhcnNlSW50KHJvd3NbaV1ba10sIDEwKTtcbiAgICAgICAgICBwcmV2aW91c193YXNfbnVtYmVyID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoIS9eW3BybmJxa1BSTkJRS10kLy50ZXN0KHJvd3NbaV1ba10pKSB7XG4gICAgICAgICAgICByZXR1cm4ge3ZhbGlkOiBmYWxzZSwgZXJyb3JfbnVtYmVyOiA5LCBlcnJvcjogZXJyb3JzWzldfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgc3VtX2ZpZWxkcyArPSAxO1xuICAgICAgICAgIHByZXZpb3VzX3dhc19udW1iZXIgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1bV9maWVsZHMgIT09IDgpIHtcbiAgICAgICAgcmV0dXJuIHt2YWxpZDogZmFsc2UsIGVycm9yX251bWJlcjogMTAsIGVycm9yOiBlcnJvcnNbMTBdfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoKHRva2Vuc1szXVsxXSA9PSAnMycgJiYgdG9rZW5zWzFdID09ICd3JykgfHxcbiAgICAgICAgKHRva2Vuc1szXVsxXSA9PSAnNicgJiYgdG9rZW5zWzFdID09ICdiJykpIHtcbiAgICAgICAgICByZXR1cm4ge3ZhbGlkOiBmYWxzZSwgZXJyb3JfbnVtYmVyOiAxMSwgZXJyb3I6IGVycm9yc1sxMV19O1xuICAgIH1cblxuICAgIC8qIGV2ZXJ5dGhpbmcncyBva2F5ISAqL1xuICAgIHJldHVybiB7dmFsaWQ6IHRydWUsIGVycm9yX251bWJlcjogMCwgZXJyb3I6IGVycm9yc1swXX07XG4gIH1cblxuICBmdW5jdGlvbiBnZW5lcmF0ZV9mZW4oKSB7XG4gICAgdmFyIGVtcHR5ID0gMDtcbiAgICB2YXIgZmVuID0gJyc7XG5cbiAgICBmb3IgKHZhciBpID0gU1FVQVJFUy5hODsgaSA8PSBTUVVBUkVTLmgxOyBpKyspIHtcbiAgICAgIGlmIChib2FyZFtpXSA9PSBudWxsKSB7XG4gICAgICAgIGVtcHR5Kys7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoZW1wdHkgPiAwKSB7XG4gICAgICAgICAgZmVuICs9IGVtcHR5O1xuICAgICAgICAgIGVtcHR5ID0gMDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgY29sb3IgPSBib2FyZFtpXS5jb2xvcjtcbiAgICAgICAgdmFyIHBpZWNlID0gYm9hcmRbaV0udHlwZTtcblxuICAgICAgICBmZW4gKz0gKGNvbG9yID09PSBXSElURSkgP1xuICAgICAgICAgICAgICAgICBwaWVjZS50b1VwcGVyQ2FzZSgpIDogcGllY2UudG9Mb3dlckNhc2UoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKChpICsgMSkgJiAweDg4KSB7XG4gICAgICAgIGlmIChlbXB0eSA+IDApIHtcbiAgICAgICAgICBmZW4gKz0gZW1wdHk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaSAhPT0gU1FVQVJFUy5oMSkge1xuICAgICAgICAgIGZlbiArPSAnLyc7XG4gICAgICAgIH1cblxuICAgICAgICBlbXB0eSA9IDA7XG4gICAgICAgIGkgKz0gODtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgY2ZsYWdzID0gJyc7XG4gICAgaWYgKGNhc3RsaW5nW1dISVRFXSAmIEJJVFMuS1NJREVfQ0FTVExFKSB7IGNmbGFncyArPSAnSyc7IH1cbiAgICBpZiAoY2FzdGxpbmdbV0hJVEVdICYgQklUUy5RU0lERV9DQVNUTEUpIHsgY2ZsYWdzICs9ICdRJzsgfVxuICAgIGlmIChjYXN0bGluZ1tCTEFDS10gJiBCSVRTLktTSURFX0NBU1RMRSkgeyBjZmxhZ3MgKz0gJ2snOyB9XG4gICAgaWYgKGNhc3RsaW5nW0JMQUNLXSAmIEJJVFMuUVNJREVfQ0FTVExFKSB7IGNmbGFncyArPSAncSc7IH1cblxuICAgIC8qIGRvIHdlIGhhdmUgYW4gZW1wdHkgY2FzdGxpbmcgZmxhZz8gKi9cbiAgICBjZmxhZ3MgPSBjZmxhZ3MgfHwgJy0nO1xuICAgIHZhciBlcGZsYWdzID0gKGVwX3NxdWFyZSA9PT0gRU1QVFkpID8gJy0nIDogYWxnZWJyYWljKGVwX3NxdWFyZSk7XG5cbiAgICByZXR1cm4gW2ZlbiwgdHVybiwgY2ZsYWdzLCBlcGZsYWdzLCBoYWxmX21vdmVzLCBtb3ZlX251bWJlcl0uam9pbignICcpO1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0X2hlYWRlcihhcmdzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgICBpZiAodHlwZW9mIGFyZ3NbaV0gPT09ICdzdHJpbmcnICYmXG4gICAgICAgICAgdHlwZW9mIGFyZ3NbaSArIDFdID09PSAnc3RyaW5nJykge1xuICAgICAgICBoZWFkZXJbYXJnc1tpXV0gPSBhcmdzW2kgKyAxXTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGhlYWRlcjtcbiAgfVxuXG4gIC8qIGNhbGxlZCB3aGVuIHRoZSBpbml0aWFsIGJvYXJkIHNldHVwIGlzIGNoYW5nZWQgd2l0aCBwdXQoKSBvciByZW1vdmUoKS5cbiAgICogbW9kaWZpZXMgdGhlIFNldFVwIGFuZCBGRU4gcHJvcGVydGllcyBvZiB0aGUgaGVhZGVyIG9iamVjdC4gIGlmIHRoZSBGRU4gaXNcbiAgICogZXF1YWwgdG8gdGhlIGRlZmF1bHQgcG9zaXRpb24sIHRoZSBTZXRVcCBhbmQgRkVOIGFyZSBkZWxldGVkXG4gICAqIHRoZSBzZXR1cCBpcyBvbmx5IHVwZGF0ZWQgaWYgaGlzdG9yeS5sZW5ndGggaXMgemVybywgaWUgbW92ZXMgaGF2ZW4ndCBiZWVuXG4gICAqIG1hZGUuXG4gICAqL1xuICBmdW5jdGlvbiB1cGRhdGVfc2V0dXAoZmVuKSB7XG4gICAgaWYgKGhpc3RvcnkubGVuZ3RoID4gMCkgcmV0dXJuO1xuXG4gICAgaWYgKGZlbiAhPT0gREVGQVVMVF9QT1NJVElPTikge1xuICAgICAgaGVhZGVyWydTZXRVcCddID0gJzEnO1xuICAgICAgaGVhZGVyWydGRU4nXSA9IGZlbjtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIGhlYWRlclsnU2V0VXAnXTtcbiAgICAgIGRlbGV0ZSBoZWFkZXJbJ0ZFTiddO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldChzcXVhcmUpIHtcbiAgICB2YXIgcGllY2UgPSBib2FyZFtTUVVBUkVTW3NxdWFyZV1dO1xuICAgIHJldHVybiAocGllY2UpID8ge3R5cGU6IHBpZWNlLnR5cGUsIGNvbG9yOiBwaWVjZS5jb2xvcn0gOiBudWxsO1xuICB9XG5cbiAgZnVuY3Rpb24gcHV0KHBpZWNlLCBzcXVhcmUpIHtcbiAgICAvKiBjaGVjayBmb3IgdmFsaWQgcGllY2Ugb2JqZWN0ICovXG4gICAgaWYgKCEoJ3R5cGUnIGluIHBpZWNlICYmICdjb2xvcicgaW4gcGllY2UpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLyogY2hlY2sgZm9yIHBpZWNlICovXG4gICAgaWYgKFNZTUJPTFMuaW5kZXhPZihwaWVjZS50eXBlLnRvTG93ZXJDYXNlKCkpID09PSAtMSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8qIGNoZWNrIGZvciB2YWxpZCBzcXVhcmUgKi9cbiAgICBpZiAoIShzcXVhcmUgaW4gU1FVQVJFUykpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgc3EgPSBTUVVBUkVTW3NxdWFyZV07XG5cbiAgICAvKiBkb24ndCBsZXQgdGhlIHVzZXIgcGxhY2UgbW9yZSB0aGFuIG9uZSBraW5nICovXG4gICAgaWYgKHBpZWNlLnR5cGUgPT0gS0lORyAmJlxuICAgICAgICAhKGtpbmdzW3BpZWNlLmNvbG9yXSA9PSBFTVBUWSB8fCBraW5nc1twaWVjZS5jb2xvcl0gPT0gc3EpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgYm9hcmRbc3FdID0ge3R5cGU6IHBpZWNlLnR5cGUsIGNvbG9yOiBwaWVjZS5jb2xvcn07XG4gICAgaWYgKHBpZWNlLnR5cGUgPT09IEtJTkcpIHtcbiAgICAgIGtpbmdzW3BpZWNlLmNvbG9yXSA9IHNxO1xuICAgIH1cblxuICAgIHVwZGF0ZV9zZXR1cChnZW5lcmF0ZV9mZW4oKSk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZShzcXVhcmUpIHtcbiAgICB2YXIgcGllY2UgPSBnZXQoc3F1YXJlKTtcbiAgICBib2FyZFtTUVVBUkVTW3NxdWFyZV1dID0gbnVsbDtcbiAgICBpZiAocGllY2UgJiYgcGllY2UudHlwZSA9PT0gS0lORykge1xuICAgICAga2luZ3NbcGllY2UuY29sb3JdID0gRU1QVFk7XG4gICAgfVxuXG4gICAgdXBkYXRlX3NldHVwKGdlbmVyYXRlX2ZlbigpKTtcblxuICAgIHJldHVybiBwaWVjZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJ1aWxkX21vdmUoYm9hcmQsIGZyb20sIHRvLCBmbGFncywgcHJvbW90aW9uKSB7XG4gICAgdmFyIG1vdmUgPSB7XG4gICAgICBjb2xvcjogdHVybixcbiAgICAgIGZyb206IGZyb20sXG4gICAgICB0bzogdG8sXG4gICAgICBmbGFnczogZmxhZ3MsXG4gICAgICBwaWVjZTogYm9hcmRbZnJvbV0udHlwZVxuICAgIH07XG5cbiAgICBpZiAocHJvbW90aW9uKSB7XG4gICAgICBtb3ZlLmZsYWdzIHw9IEJJVFMuUFJPTU9USU9OO1xuICAgICAgbW92ZS5wcm9tb3Rpb24gPSBwcm9tb3Rpb247XG4gICAgfVxuXG4gICAgaWYgKGJvYXJkW3RvXSkge1xuICAgICAgbW92ZS5jYXB0dXJlZCA9IGJvYXJkW3RvXS50eXBlO1xuICAgIH0gZWxzZSBpZiAoZmxhZ3MgJiBCSVRTLkVQX0NBUFRVUkUpIHtcbiAgICAgICAgbW92ZS5jYXB0dXJlZCA9IFBBV047XG4gICAgfVxuICAgIHJldHVybiBtb3ZlO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2VuZXJhdGVfbW92ZXMob3B0aW9ucykge1xuICAgIGZ1bmN0aW9uIGFkZF9tb3ZlKGJvYXJkLCBtb3ZlcywgZnJvbSwgdG8sIGZsYWdzKSB7XG4gICAgICAvKiBpZiBwYXduIHByb21vdGlvbiAqL1xuICAgICAgaWYgKGJvYXJkW2Zyb21dLnR5cGUgPT09IFBBV04gJiZcbiAgICAgICAgIChyYW5rKHRvKSA9PT0gUkFOS184IHx8IHJhbmsodG8pID09PSBSQU5LXzEpKSB7XG4gICAgICAgICAgdmFyIHBpZWNlcyA9IFtRVUVFTiwgUk9PSywgQklTSE9QLCBLTklHSFRdO1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwaWVjZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIG1vdmVzLnB1c2goYnVpbGRfbW92ZShib2FyZCwgZnJvbSwgdG8sIGZsYWdzLCBwaWVjZXNbaV0pKTtcbiAgICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgIG1vdmVzLnB1c2goYnVpbGRfbW92ZShib2FyZCwgZnJvbSwgdG8sIGZsYWdzKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIG1vdmVzID0gW107XG4gICAgdmFyIHVzID0gdHVybjtcbiAgICB2YXIgdGhlbSA9IHN3YXBfY29sb3IodXMpO1xuICAgIHZhciBzZWNvbmRfcmFuayA9IHtiOiBSQU5LXzcsIHc6IFJBTktfMn07XG5cbiAgICB2YXIgZmlyc3Rfc3EgPSBTUVVBUkVTLmE4O1xuICAgIHZhciBsYXN0X3NxID0gU1FVQVJFUy5oMTtcbiAgICB2YXIgc2luZ2xlX3NxdWFyZSA9IGZhbHNlO1xuXG4gICAgLyogZG8gd2Ugd2FudCBsZWdhbCBtb3Zlcz8gKi9cbiAgICB2YXIgbGVnYWwgPSAodHlwZW9mIG9wdGlvbnMgIT09ICd1bmRlZmluZWQnICYmICdsZWdhbCcgaW4gb3B0aW9ucykgP1xuICAgICAgICAgICAgICAgIG9wdGlvbnMubGVnYWwgOiB0cnVlO1xuXG4gICAgLyogYXJlIHdlIGdlbmVyYXRpbmcgbW92ZXMgZm9yIGEgc2luZ2xlIHNxdWFyZT8gKi9cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMgIT09ICd1bmRlZmluZWQnICYmICdzcXVhcmUnIGluIG9wdGlvbnMpIHtcbiAgICAgIGlmIChvcHRpb25zLnNxdWFyZSBpbiBTUVVBUkVTKSB7XG4gICAgICAgIGZpcnN0X3NxID0gbGFzdF9zcSA9IFNRVUFSRVNbb3B0aW9ucy5zcXVhcmVdO1xuICAgICAgICBzaW5nbGVfc3F1YXJlID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8qIGludmFsaWQgc3F1YXJlICovXG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gZmlyc3Rfc3E7IGkgPD0gbGFzdF9zcTsgaSsrKSB7XG4gICAgICAvKiBkaWQgd2UgcnVuIG9mZiB0aGUgZW5kIG9mIHRoZSBib2FyZCAqL1xuICAgICAgaWYgKGkgJiAweDg4KSB7IGkgKz0gNzsgY29udGludWU7IH1cblxuICAgICAgdmFyIHBpZWNlID0gYm9hcmRbaV07XG4gICAgICBpZiAocGllY2UgPT0gbnVsbCB8fCBwaWVjZS5jb2xvciAhPT0gdXMpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChwaWVjZS50eXBlID09PSBQQVdOKSB7XG4gICAgICAgIC8qIHNpbmdsZSBzcXVhcmUsIG5vbi1jYXB0dXJpbmcgKi9cbiAgICAgICAgdmFyIHNxdWFyZSA9IGkgKyBQQVdOX09GRlNFVFNbdXNdWzBdO1xuICAgICAgICBpZiAoYm9hcmRbc3F1YXJlXSA9PSBudWxsKSB7XG4gICAgICAgICAgICBhZGRfbW92ZShib2FyZCwgbW92ZXMsIGksIHNxdWFyZSwgQklUUy5OT1JNQUwpO1xuXG4gICAgICAgICAgLyogZG91YmxlIHNxdWFyZSAqL1xuICAgICAgICAgIHZhciBzcXVhcmUgPSBpICsgUEFXTl9PRkZTRVRTW3VzXVsxXTtcbiAgICAgICAgICBpZiAoc2Vjb25kX3JhbmtbdXNdID09PSByYW5rKGkpICYmIGJvYXJkW3NxdWFyZV0gPT0gbnVsbCkge1xuICAgICAgICAgICAgYWRkX21vdmUoYm9hcmQsIG1vdmVzLCBpLCBzcXVhcmUsIEJJVFMuQklHX1BBV04pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qIHBhd24gY2FwdHVyZXMgKi9cbiAgICAgICAgZm9yIChqID0gMjsgaiA8IDQ7IGorKykge1xuICAgICAgICAgIHZhciBzcXVhcmUgPSBpICsgUEFXTl9PRkZTRVRTW3VzXVtqXTtcbiAgICAgICAgICBpZiAoc3F1YXJlICYgMHg4OCkgY29udGludWU7XG5cbiAgICAgICAgICBpZiAoYm9hcmRbc3F1YXJlXSAhPSBudWxsICYmXG4gICAgICAgICAgICAgIGJvYXJkW3NxdWFyZV0uY29sb3IgPT09IHRoZW0pIHtcbiAgICAgICAgICAgICAgYWRkX21vdmUoYm9hcmQsIG1vdmVzLCBpLCBzcXVhcmUsIEJJVFMuQ0FQVFVSRSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChzcXVhcmUgPT09IGVwX3NxdWFyZSkge1xuICAgICAgICAgICAgICBhZGRfbW92ZShib2FyZCwgbW92ZXMsIGksIGVwX3NxdWFyZSwgQklUUy5FUF9DQVBUVVJFKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAodmFyIGogPSAwLCBsZW4gPSBQSUVDRV9PRkZTRVRTW3BpZWNlLnR5cGVdLmxlbmd0aDsgaiA8IGxlbjsgaisrKSB7XG4gICAgICAgICAgdmFyIG9mZnNldCA9IFBJRUNFX09GRlNFVFNbcGllY2UudHlwZV1bal07XG4gICAgICAgICAgdmFyIHNxdWFyZSA9IGk7XG5cbiAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgc3F1YXJlICs9IG9mZnNldDtcbiAgICAgICAgICAgIGlmIChzcXVhcmUgJiAweDg4KSBicmVhaztcblxuICAgICAgICAgICAgaWYgKGJvYXJkW3NxdWFyZV0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICBhZGRfbW92ZShib2FyZCwgbW92ZXMsIGksIHNxdWFyZSwgQklUUy5OT1JNQUwpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKGJvYXJkW3NxdWFyZV0uY29sb3IgPT09IHVzKSBicmVhaztcbiAgICAgICAgICAgICAgYWRkX21vdmUoYm9hcmQsIG1vdmVzLCBpLCBzcXVhcmUsIEJJVFMuQ0FQVFVSRSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvKiBicmVhaywgaWYga25pZ2h0IG9yIGtpbmcgKi9cbiAgICAgICAgICAgIGlmIChwaWVjZS50eXBlID09PSAnbicgfHwgcGllY2UudHlwZSA9PT0gJ2snKSBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiBjaGVjayBmb3IgY2FzdGxpbmcgaWY6IGEpIHdlJ3JlIGdlbmVyYXRpbmcgYWxsIG1vdmVzLCBvciBiKSB3ZSdyZSBkb2luZ1xuICAgICAqIHNpbmdsZSBzcXVhcmUgbW92ZSBnZW5lcmF0aW9uIG9uIHRoZSBraW5nJ3Mgc3F1YXJlXG4gICAgICovXG4gICAgaWYgKCghc2luZ2xlX3NxdWFyZSkgfHwgbGFzdF9zcSA9PT0ga2luZ3NbdXNdKSB7XG4gICAgICAvKiBraW5nLXNpZGUgY2FzdGxpbmcgKi9cbiAgICAgIGlmIChjYXN0bGluZ1t1c10gJiBCSVRTLktTSURFX0NBU1RMRSkge1xuICAgICAgICB2YXIgY2FzdGxpbmdfZnJvbSA9IGtpbmdzW3VzXTtcbiAgICAgICAgdmFyIGNhc3RsaW5nX3RvID0gY2FzdGxpbmdfZnJvbSArIDI7XG5cbiAgICAgICAgaWYgKGJvYXJkW2Nhc3RsaW5nX2Zyb20gKyAxXSA9PSBudWxsICYmXG4gICAgICAgICAgICBib2FyZFtjYXN0bGluZ190b10gICAgICAgPT0gbnVsbCAmJlxuICAgICAgICAgICAgIWF0dGFja2VkKHRoZW0sIGtpbmdzW3VzXSkgJiZcbiAgICAgICAgICAgICFhdHRhY2tlZCh0aGVtLCBjYXN0bGluZ19mcm9tICsgMSkgJiZcbiAgICAgICAgICAgICFhdHRhY2tlZCh0aGVtLCBjYXN0bGluZ190bykpIHtcbiAgICAgICAgICBhZGRfbW92ZShib2FyZCwgbW92ZXMsIGtpbmdzW3VzXSAsIGNhc3RsaW5nX3RvLFxuICAgICAgICAgICAgICAgICAgIEJJVFMuS1NJREVfQ0FTVExFKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKiBxdWVlbi1zaWRlIGNhc3RsaW5nICovXG4gICAgICBpZiAoY2FzdGxpbmdbdXNdICYgQklUUy5RU0lERV9DQVNUTEUpIHtcbiAgICAgICAgdmFyIGNhc3RsaW5nX2Zyb20gPSBraW5nc1t1c107XG4gICAgICAgIHZhciBjYXN0bGluZ190byA9IGNhc3RsaW5nX2Zyb20gLSAyO1xuXG4gICAgICAgIGlmIChib2FyZFtjYXN0bGluZ19mcm9tIC0gMV0gPT0gbnVsbCAmJlxuICAgICAgICAgICAgYm9hcmRbY2FzdGxpbmdfZnJvbSAtIDJdID09IG51bGwgJiZcbiAgICAgICAgICAgIGJvYXJkW2Nhc3RsaW5nX2Zyb20gLSAzXSA9PSBudWxsICYmXG4gICAgICAgICAgICAhYXR0YWNrZWQodGhlbSwga2luZ3NbdXNdKSAmJlxuICAgICAgICAgICAgIWF0dGFja2VkKHRoZW0sIGNhc3RsaW5nX2Zyb20gLSAxKSAmJlxuICAgICAgICAgICAgIWF0dGFja2VkKHRoZW0sIGNhc3RsaW5nX3RvKSkge1xuICAgICAgICAgIGFkZF9tb3ZlKGJvYXJkLCBtb3Zlcywga2luZ3NbdXNdLCBjYXN0bGluZ190byxcbiAgICAgICAgICAgICAgICAgICBCSVRTLlFTSURFX0NBU1RMRSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiByZXR1cm4gYWxsIHBzZXVkby1sZWdhbCBtb3ZlcyAodGhpcyBpbmNsdWRlcyBtb3ZlcyB0aGF0IGFsbG93IHRoZSBraW5nXG4gICAgICogdG8gYmUgY2FwdHVyZWQpXG4gICAgICovXG4gICAgaWYgKCFsZWdhbCkge1xuICAgICAgcmV0dXJuIG1vdmVzO1xuICAgIH1cblxuICAgIC8qIGZpbHRlciBvdXQgaWxsZWdhbCBtb3ZlcyAqL1xuICAgIHZhciBsZWdhbF9tb3ZlcyA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBtb3Zlcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgbWFrZV9tb3ZlKG1vdmVzW2ldKTtcbiAgICAgIGlmICgha2luZ19hdHRhY2tlZCh1cykpIHtcbiAgICAgICAgbGVnYWxfbW92ZXMucHVzaChtb3Zlc1tpXSk7XG4gICAgICB9XG4gICAgICB1bmRvX21vdmUoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbGVnYWxfbW92ZXM7XG4gIH1cblxuICAvKiBjb252ZXJ0IGEgbW92ZSBmcm9tIDB4ODggY29vcmRpbmF0ZXMgdG8gU3RhbmRhcmQgQWxnZWJyYWljIE5vdGF0aW9uXG4gICAqIChTQU4pXG4gICAqXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gc2xvcHB5IFVzZSB0aGUgc2xvcHB5IFNBTiBnZW5lcmF0b3IgdG8gd29yayBhcm91bmQgb3ZlclxuICAgKiBkaXNhbWJpZ3VhdGlvbiBidWdzIGluIEZyaXR6IGFuZCBDaGVzc2Jhc2UuICBTZWUgYmVsb3c6XG4gICAqXG4gICAqIHIxYnFrYm5yL3BwcDJwcHAvMm41LzFCMXBQMy80UDMvOC9QUFBQMlBQL1JOQlFLMU5SIGIgS1FrcSAtIDIgNFxuICAgKiA0LiAuLi4gTmdlNyBpcyBvdmVybHkgZGlzYW1iaWd1YXRlZCBiZWNhdXNlIHRoZSBrbmlnaHQgb24gYzYgaXMgcGlubmVkXG4gICAqIDQuIC4uLiBOZTcgaXMgdGVjaG5pY2FsbHkgdGhlIHZhbGlkIFNBTlxuICAgKi9cbiAgZnVuY3Rpb24gbW92ZV90b19zYW4obW92ZSwgc2xvcHB5KSB7XG5cbiAgICB2YXIgb3V0cHV0ID0gJyc7XG5cbiAgICBpZiAobW92ZS5mbGFncyAmIEJJVFMuS1NJREVfQ0FTVExFKSB7XG4gICAgICBvdXRwdXQgPSAnTy1PJztcbiAgICB9IGVsc2UgaWYgKG1vdmUuZmxhZ3MgJiBCSVRTLlFTSURFX0NBU1RMRSkge1xuICAgICAgb3V0cHV0ID0gJ08tTy1PJztcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGRpc2FtYmlndWF0b3IgPSBnZXRfZGlzYW1iaWd1YXRvcihtb3ZlLCBzbG9wcHkpO1xuXG4gICAgICBpZiAobW92ZS5waWVjZSAhPT0gUEFXTikge1xuICAgICAgICBvdXRwdXQgKz0gbW92ZS5waWVjZS50b1VwcGVyQ2FzZSgpICsgZGlzYW1iaWd1YXRvcjtcbiAgICAgIH1cblxuICAgICAgaWYgKG1vdmUuZmxhZ3MgJiAoQklUUy5DQVBUVVJFIHwgQklUUy5FUF9DQVBUVVJFKSkge1xuICAgICAgICBpZiAobW92ZS5waWVjZSA9PT0gUEFXTikge1xuICAgICAgICAgIG91dHB1dCArPSBhbGdlYnJhaWMobW92ZS5mcm9tKVswXTtcbiAgICAgICAgfVxuICAgICAgICBvdXRwdXQgKz0gJ3gnO1xuICAgICAgfVxuXG4gICAgICBvdXRwdXQgKz0gYWxnZWJyYWljKG1vdmUudG8pO1xuXG4gICAgICBpZiAobW92ZS5mbGFncyAmIEJJVFMuUFJPTU9USU9OKSB7XG4gICAgICAgIG91dHB1dCArPSAnPScgKyBtb3ZlLnByb21vdGlvbi50b1VwcGVyQ2FzZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1ha2VfbW92ZShtb3ZlKTtcbiAgICBpZiAoaW5fY2hlY2soKSkge1xuICAgICAgaWYgKGluX2NoZWNrbWF0ZSgpKSB7XG4gICAgICAgIG91dHB1dCArPSAnIyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXRwdXQgKz0gJysnO1xuICAgICAgfVxuICAgIH1cbiAgICB1bmRvX21vdmUoKTtcblxuICAgIHJldHVybiBvdXRwdXQ7XG4gIH1cblxuICAvLyBwYXJzZXMgYWxsIG9mIHRoZSBkZWNvcmF0b3JzIG91dCBvZiBhIFNBTiBzdHJpbmdcbiAgZnVuY3Rpb24gc3RyaXBwZWRfc2FuKG1vdmUpIHtcbiAgICByZXR1cm4gbW92ZS5yZXBsYWNlKC89LywnJykucmVwbGFjZSgvWysjXT9bPyFdKiQvLCcnKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGF0dGFja2VkKGNvbG9yLCBzcXVhcmUpIHtcbiAgICBmb3IgKHZhciBpID0gU1FVQVJFUy5hODsgaSA8PSBTUVVBUkVTLmgxOyBpKyspIHtcbiAgICAgIC8qIGRpZCB3ZSBydW4gb2ZmIHRoZSBlbmQgb2YgdGhlIGJvYXJkICovXG4gICAgICBpZiAoaSAmIDB4ODgpIHsgaSArPSA3OyBjb250aW51ZTsgfVxuXG4gICAgICAvKiBpZiBlbXB0eSBzcXVhcmUgb3Igd3JvbmcgY29sb3IgKi9cbiAgICAgIGlmIChib2FyZFtpXSA9PSBudWxsIHx8IGJvYXJkW2ldLmNvbG9yICE9PSBjb2xvcikgY29udGludWU7XG5cbiAgICAgIHZhciBwaWVjZSA9IGJvYXJkW2ldO1xuICAgICAgdmFyIGRpZmZlcmVuY2UgPSBpIC0gc3F1YXJlO1xuICAgICAgdmFyIGluZGV4ID0gZGlmZmVyZW5jZSArIDExOTtcblxuICAgICAgaWYgKEFUVEFDS1NbaW5kZXhdICYgKDEgPDwgU0hJRlRTW3BpZWNlLnR5cGVdKSkge1xuICAgICAgICBpZiAocGllY2UudHlwZSA9PT0gUEFXTikge1xuICAgICAgICAgIGlmIChkaWZmZXJlbmNlID4gMCkge1xuICAgICAgICAgICAgaWYgKHBpZWNlLmNvbG9yID09PSBXSElURSkgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChwaWVjZS5jb2xvciA9PT0gQkxBQ0spIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qIGlmIHRoZSBwaWVjZSBpcyBhIGtuaWdodCBvciBhIGtpbmcgKi9cbiAgICAgICAgaWYgKHBpZWNlLnR5cGUgPT09ICduJyB8fCBwaWVjZS50eXBlID09PSAnaycpIHJldHVybiB0cnVlO1xuXG4gICAgICAgIHZhciBvZmZzZXQgPSBSQVlTW2luZGV4XTtcbiAgICAgICAgdmFyIGogPSBpICsgb2Zmc2V0O1xuXG4gICAgICAgIHZhciBibG9ja2VkID0gZmFsc2U7XG4gICAgICAgIHdoaWxlIChqICE9PSBzcXVhcmUpIHtcbiAgICAgICAgICBpZiAoYm9hcmRbal0gIT0gbnVsbCkgeyBibG9ja2VkID0gdHJ1ZTsgYnJlYWs7IH1cbiAgICAgICAgICBqICs9IG9mZnNldDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghYmxvY2tlZCkgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24ga2luZ19hdHRhY2tlZChjb2xvcikge1xuICAgIHJldHVybiBhdHRhY2tlZChzd2FwX2NvbG9yKGNvbG9yKSwga2luZ3NbY29sb3JdKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluX2NoZWNrKCkge1xuICAgIHJldHVybiBraW5nX2F0dGFja2VkKHR1cm4pO1xuICB9XG5cbiAgZnVuY3Rpb24gaW5fY2hlY2ttYXRlKCkge1xuICAgIHJldHVybiBpbl9jaGVjaygpICYmIGdlbmVyYXRlX21vdmVzKCkubGVuZ3RoID09PSAwO1xuICB9XG5cbiAgZnVuY3Rpb24gaW5fc3RhbGVtYXRlKCkge1xuICAgIHJldHVybiAhaW5fY2hlY2soKSAmJiBnZW5lcmF0ZV9tb3ZlcygpLmxlbmd0aCA9PT0gMDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluc3VmZmljaWVudF9tYXRlcmlhbCgpIHtcbiAgICB2YXIgcGllY2VzID0ge307XG4gICAgdmFyIGJpc2hvcHMgPSBbXTtcbiAgICB2YXIgbnVtX3BpZWNlcyA9IDA7XG4gICAgdmFyIHNxX2NvbG9yID0gMDtcblxuICAgIGZvciAodmFyIGkgPSBTUVVBUkVTLmE4OyBpPD0gU1FVQVJFUy5oMTsgaSsrKSB7XG4gICAgICBzcV9jb2xvciA9IChzcV9jb2xvciArIDEpICUgMjtcbiAgICAgIGlmIChpICYgMHg4OCkgeyBpICs9IDc7IGNvbnRpbnVlOyB9XG5cbiAgICAgIHZhciBwaWVjZSA9IGJvYXJkW2ldO1xuICAgICAgaWYgKHBpZWNlKSB7XG4gICAgICAgIHBpZWNlc1twaWVjZS50eXBlXSA9IChwaWVjZS50eXBlIGluIHBpZWNlcykgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGllY2VzW3BpZWNlLnR5cGVdICsgMSA6IDE7XG4gICAgICAgIGlmIChwaWVjZS50eXBlID09PSBCSVNIT1ApIHtcbiAgICAgICAgICBiaXNob3BzLnB1c2goc3FfY29sb3IpO1xuICAgICAgICB9XG4gICAgICAgIG51bV9waWVjZXMrKztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiBrIHZzLiBrICovXG4gICAgaWYgKG51bV9waWVjZXMgPT09IDIpIHsgcmV0dXJuIHRydWU7IH1cblxuICAgIC8qIGsgdnMuIGtuIC4uLi4gb3IgLi4uLiBrIHZzLiBrYiAqL1xuICAgIGVsc2UgaWYgKG51bV9waWVjZXMgPT09IDMgJiYgKHBpZWNlc1tCSVNIT1BdID09PSAxIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwaWVjZXNbS05JR0hUXSA9PT0gMSkpIHsgcmV0dXJuIHRydWU7IH1cblxuICAgIC8qIGtiIHZzLiBrYiB3aGVyZSBhbnkgbnVtYmVyIG9mIGJpc2hvcHMgYXJlIGFsbCBvbiB0aGUgc2FtZSBjb2xvciAqL1xuICAgIGVsc2UgaWYgKG51bV9waWVjZXMgPT09IHBpZWNlc1tCSVNIT1BdICsgMikge1xuICAgICAgdmFyIHN1bSA9IDA7XG4gICAgICB2YXIgbGVuID0gYmlzaG9wcy5sZW5ndGg7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIHN1bSArPSBiaXNob3BzW2ldO1xuICAgICAgfVxuICAgICAgaWYgKHN1bSA9PT0gMCB8fCBzdW0gPT09IGxlbikgeyByZXR1cm4gdHJ1ZTsgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluX3RocmVlZm9sZF9yZXBldGl0aW9uKCkge1xuICAgIC8qIFRPRE86IHdoaWxlIHRoaXMgZnVuY3Rpb24gaXMgZmluZSBmb3IgY2FzdWFsIHVzZSwgYSBiZXR0ZXJcbiAgICAgKiBpbXBsZW1lbnRhdGlvbiB3b3VsZCB1c2UgYSBab2JyaXN0IGtleSAoaW5zdGVhZCBvZiBGRU4pLiB0aGVcbiAgICAgKiBab2JyaXN0IGtleSB3b3VsZCBiZSBtYWludGFpbmVkIGluIHRoZSBtYWtlX21vdmUvdW5kb19tb3ZlIGZ1bmN0aW9ucyxcbiAgICAgKiBhdm9pZGluZyB0aGUgY29zdGx5IHRoYXQgd2UgZG8gYmVsb3cuXG4gICAgICovXG4gICAgdmFyIG1vdmVzID0gW107XG4gICAgdmFyIHBvc2l0aW9ucyA9IHt9O1xuICAgIHZhciByZXBldGl0aW9uID0gZmFsc2U7XG5cbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgdmFyIG1vdmUgPSB1bmRvX21vdmUoKTtcbiAgICAgIGlmICghbW92ZSkgYnJlYWs7XG4gICAgICBtb3Zlcy5wdXNoKG1vdmUpO1xuICAgIH1cblxuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAvKiByZW1vdmUgdGhlIGxhc3QgdHdvIGZpZWxkcyBpbiB0aGUgRkVOIHN0cmluZywgdGhleSdyZSBub3QgbmVlZGVkXG4gICAgICAgKiB3aGVuIGNoZWNraW5nIGZvciBkcmF3IGJ5IHJlcCAqL1xuICAgICAgdmFyIGZlbiA9IGdlbmVyYXRlX2ZlbigpLnNwbGl0KCcgJykuc2xpY2UoMCw0KS5qb2luKCcgJyk7XG5cbiAgICAgIC8qIGhhcyB0aGUgcG9zaXRpb24gb2NjdXJyZWQgdGhyZWUgb3IgbW92ZSB0aW1lcyAqL1xuICAgICAgcG9zaXRpb25zW2Zlbl0gPSAoZmVuIGluIHBvc2l0aW9ucykgPyBwb3NpdGlvbnNbZmVuXSArIDEgOiAxO1xuICAgICAgaWYgKHBvc2l0aW9uc1tmZW5dID49IDMpIHtcbiAgICAgICAgcmVwZXRpdGlvbiA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmICghbW92ZXMubGVuZ3RoKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgbWFrZV9tb3ZlKG1vdmVzLnBvcCgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVwZXRpdGlvbjtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gobW92ZSkge1xuICAgIGhpc3RvcnkucHVzaCh7XG4gICAgICBtb3ZlOiBtb3ZlLFxuICAgICAga2luZ3M6IHtiOiBraW5ncy5iLCB3OiBraW5ncy53fSxcbiAgICAgIHR1cm46IHR1cm4sXG4gICAgICBjYXN0bGluZzoge2I6IGNhc3RsaW5nLmIsIHc6IGNhc3RsaW5nLnd9LFxuICAgICAgZXBfc3F1YXJlOiBlcF9zcXVhcmUsXG4gICAgICBoYWxmX21vdmVzOiBoYWxmX21vdmVzLFxuICAgICAgbW92ZV9udW1iZXI6IG1vdmVfbnVtYmVyXG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBtYWtlX21vdmUobW92ZSkge1xuICAgIHZhciB1cyA9IHR1cm47XG4gICAgdmFyIHRoZW0gPSBzd2FwX2NvbG9yKHVzKTtcbiAgICBwdXNoKG1vdmUpO1xuXG4gICAgYm9hcmRbbW92ZS50b10gPSBib2FyZFttb3ZlLmZyb21dO1xuICAgIGJvYXJkW21vdmUuZnJvbV0gPSBudWxsO1xuXG4gICAgLyogaWYgZXAgY2FwdHVyZSwgcmVtb3ZlIHRoZSBjYXB0dXJlZCBwYXduICovXG4gICAgaWYgKG1vdmUuZmxhZ3MgJiBCSVRTLkVQX0NBUFRVUkUpIHtcbiAgICAgIGlmICh0dXJuID09PSBCTEFDSykge1xuICAgICAgICBib2FyZFttb3ZlLnRvIC0gMTZdID0gbnVsbDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJvYXJkW21vdmUudG8gKyAxNl0gPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qIGlmIHBhd24gcHJvbW90aW9uLCByZXBsYWNlIHdpdGggbmV3IHBpZWNlICovXG4gICAgaWYgKG1vdmUuZmxhZ3MgJiBCSVRTLlBST01PVElPTikge1xuICAgICAgYm9hcmRbbW92ZS50b10gPSB7dHlwZTogbW92ZS5wcm9tb3Rpb24sIGNvbG9yOiB1c307XG4gICAgfVxuXG4gICAgLyogaWYgd2UgbW92ZWQgdGhlIGtpbmcgKi9cbiAgICBpZiAoYm9hcmRbbW92ZS50b10udHlwZSA9PT0gS0lORykge1xuICAgICAga2luZ3NbYm9hcmRbbW92ZS50b10uY29sb3JdID0gbW92ZS50bztcblxuICAgICAgLyogaWYgd2UgY2FzdGxlZCwgbW92ZSB0aGUgcm9vayBuZXh0IHRvIHRoZSBraW5nICovXG4gICAgICBpZiAobW92ZS5mbGFncyAmIEJJVFMuS1NJREVfQ0FTVExFKSB7XG4gICAgICAgIHZhciBjYXN0bGluZ190byA9IG1vdmUudG8gLSAxO1xuICAgICAgICB2YXIgY2FzdGxpbmdfZnJvbSA9IG1vdmUudG8gKyAxO1xuICAgICAgICBib2FyZFtjYXN0bGluZ190b10gPSBib2FyZFtjYXN0bGluZ19mcm9tXTtcbiAgICAgICAgYm9hcmRbY2FzdGxpbmdfZnJvbV0gPSBudWxsO1xuICAgICAgfSBlbHNlIGlmIChtb3ZlLmZsYWdzICYgQklUUy5RU0lERV9DQVNUTEUpIHtcbiAgICAgICAgdmFyIGNhc3RsaW5nX3RvID0gbW92ZS50byArIDE7XG4gICAgICAgIHZhciBjYXN0bGluZ19mcm9tID0gbW92ZS50byAtIDI7XG4gICAgICAgIGJvYXJkW2Nhc3RsaW5nX3RvXSA9IGJvYXJkW2Nhc3RsaW5nX2Zyb21dO1xuICAgICAgICBib2FyZFtjYXN0bGluZ19mcm9tXSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIC8qIHR1cm4gb2ZmIGNhc3RsaW5nICovXG4gICAgICBjYXN0bGluZ1t1c10gPSAnJztcbiAgICB9XG5cbiAgICAvKiB0dXJuIG9mZiBjYXN0bGluZyBpZiB3ZSBtb3ZlIGEgcm9vayAqL1xuICAgIGlmIChjYXN0bGluZ1t1c10pIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBST09LU1t1c10ubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgaWYgKG1vdmUuZnJvbSA9PT0gUk9PS1NbdXNdW2ldLnNxdWFyZSAmJlxuICAgICAgICAgICAgY2FzdGxpbmdbdXNdICYgUk9PS1NbdXNdW2ldLmZsYWcpIHtcbiAgICAgICAgICBjYXN0bGluZ1t1c10gXj0gUk9PS1NbdXNdW2ldLmZsYWc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiB0dXJuIG9mZiBjYXN0bGluZyBpZiB3ZSBjYXB0dXJlIGEgcm9vayAqL1xuICAgIGlmIChjYXN0bGluZ1t0aGVtXSkge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IFJPT0tTW3RoZW1dLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGlmIChtb3ZlLnRvID09PSBST09LU1t0aGVtXVtpXS5zcXVhcmUgJiZcbiAgICAgICAgICAgIGNhc3RsaW5nW3RoZW1dICYgUk9PS1NbdGhlbV1baV0uZmxhZykge1xuICAgICAgICAgIGNhc3RsaW5nW3RoZW1dIF49IFJPT0tTW3RoZW1dW2ldLmZsYWc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiBpZiBiaWcgcGF3biBtb3ZlLCB1cGRhdGUgdGhlIGVuIHBhc3NhbnQgc3F1YXJlICovXG4gICAgaWYgKG1vdmUuZmxhZ3MgJiBCSVRTLkJJR19QQVdOKSB7XG4gICAgICBpZiAodHVybiA9PT0gJ2InKSB7XG4gICAgICAgIGVwX3NxdWFyZSA9IG1vdmUudG8gLSAxNjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVwX3NxdWFyZSA9IG1vdmUudG8gKyAxNjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZXBfc3F1YXJlID0gRU1QVFk7XG4gICAgfVxuXG4gICAgLyogcmVzZXQgdGhlIDUwIG1vdmUgY291bnRlciBpZiBhIHBhd24gaXMgbW92ZWQgb3IgYSBwaWVjZSBpcyBjYXB0dXJlZCAqL1xuICAgIGlmIChtb3ZlLnBpZWNlID09PSBQQVdOKSB7XG4gICAgICBoYWxmX21vdmVzID0gMDtcbiAgICB9IGVsc2UgaWYgKG1vdmUuZmxhZ3MgJiAoQklUUy5DQVBUVVJFIHwgQklUUy5FUF9DQVBUVVJFKSkge1xuICAgICAgaGFsZl9tb3ZlcyA9IDA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhhbGZfbW92ZXMrKztcbiAgICB9XG5cbiAgICBpZiAodHVybiA9PT0gQkxBQ0spIHtcbiAgICAgIG1vdmVfbnVtYmVyKys7XG4gICAgfVxuICAgIHR1cm4gPSBzd2FwX2NvbG9yKHR1cm4pO1xuICB9XG5cbiAgZnVuY3Rpb24gdW5kb19tb3ZlKCkge1xuICAgIHZhciBvbGQgPSBoaXN0b3J5LnBvcCgpO1xuICAgIGlmIChvbGQgPT0gbnVsbCkgeyByZXR1cm4gbnVsbDsgfVxuXG4gICAgdmFyIG1vdmUgPSBvbGQubW92ZTtcbiAgICBraW5ncyA9IG9sZC5raW5ncztcbiAgICB0dXJuID0gb2xkLnR1cm47XG4gICAgY2FzdGxpbmcgPSBvbGQuY2FzdGxpbmc7XG4gICAgZXBfc3F1YXJlID0gb2xkLmVwX3NxdWFyZTtcbiAgICBoYWxmX21vdmVzID0gb2xkLmhhbGZfbW92ZXM7XG4gICAgbW92ZV9udW1iZXIgPSBvbGQubW92ZV9udW1iZXI7XG5cbiAgICB2YXIgdXMgPSB0dXJuO1xuICAgIHZhciB0aGVtID0gc3dhcF9jb2xvcih0dXJuKTtcblxuICAgIGJvYXJkW21vdmUuZnJvbV0gPSBib2FyZFttb3ZlLnRvXTtcbiAgICBib2FyZFttb3ZlLmZyb21dLnR5cGUgPSBtb3ZlLnBpZWNlOyAgLy8gdG8gdW5kbyBhbnkgcHJvbW90aW9uc1xuICAgIGJvYXJkW21vdmUudG9dID0gbnVsbDtcblxuICAgIGlmIChtb3ZlLmZsYWdzICYgQklUUy5DQVBUVVJFKSB7XG4gICAgICBib2FyZFttb3ZlLnRvXSA9IHt0eXBlOiBtb3ZlLmNhcHR1cmVkLCBjb2xvcjogdGhlbX07XG4gICAgfSBlbHNlIGlmIChtb3ZlLmZsYWdzICYgQklUUy5FUF9DQVBUVVJFKSB7XG4gICAgICB2YXIgaW5kZXg7XG4gICAgICBpZiAodXMgPT09IEJMQUNLKSB7XG4gICAgICAgIGluZGV4ID0gbW92ZS50byAtIDE2O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW5kZXggPSBtb3ZlLnRvICsgMTY7XG4gICAgICB9XG4gICAgICBib2FyZFtpbmRleF0gPSB7dHlwZTogUEFXTiwgY29sb3I6IHRoZW19O1xuICAgIH1cblxuXG4gICAgaWYgKG1vdmUuZmxhZ3MgJiAoQklUUy5LU0lERV9DQVNUTEUgfCBCSVRTLlFTSURFX0NBU1RMRSkpIHtcbiAgICAgIHZhciBjYXN0bGluZ190bywgY2FzdGxpbmdfZnJvbTtcbiAgICAgIGlmIChtb3ZlLmZsYWdzICYgQklUUy5LU0lERV9DQVNUTEUpIHtcbiAgICAgICAgY2FzdGxpbmdfdG8gPSBtb3ZlLnRvICsgMTtcbiAgICAgICAgY2FzdGxpbmdfZnJvbSA9IG1vdmUudG8gLSAxO1xuICAgICAgfSBlbHNlIGlmIChtb3ZlLmZsYWdzICYgQklUUy5RU0lERV9DQVNUTEUpIHtcbiAgICAgICAgY2FzdGxpbmdfdG8gPSBtb3ZlLnRvIC0gMjtcbiAgICAgICAgY2FzdGxpbmdfZnJvbSA9IG1vdmUudG8gKyAxO1xuICAgICAgfVxuXG4gICAgICBib2FyZFtjYXN0bGluZ190b10gPSBib2FyZFtjYXN0bGluZ19mcm9tXTtcbiAgICAgIGJvYXJkW2Nhc3RsaW5nX2Zyb21dID0gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gbW92ZTtcbiAgfVxuXG4gIC8qIHRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byB1bmlxdWVseSBpZGVudGlmeSBhbWJpZ3VvdXMgbW92ZXMgKi9cbiAgZnVuY3Rpb24gZ2V0X2Rpc2FtYmlndWF0b3IobW92ZSwgc2xvcHB5KSB7XG4gICAgdmFyIG1vdmVzID0gZ2VuZXJhdGVfbW92ZXMoe2xlZ2FsOiAhc2xvcHB5fSk7XG5cbiAgICB2YXIgZnJvbSA9IG1vdmUuZnJvbTtcbiAgICB2YXIgdG8gPSBtb3ZlLnRvO1xuICAgIHZhciBwaWVjZSA9IG1vdmUucGllY2U7XG5cbiAgICB2YXIgYW1iaWd1aXRpZXMgPSAwO1xuICAgIHZhciBzYW1lX3JhbmsgPSAwO1xuICAgIHZhciBzYW1lX2ZpbGUgPSAwO1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IG1vdmVzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICB2YXIgYW1iaWdfZnJvbSA9IG1vdmVzW2ldLmZyb207XG4gICAgICB2YXIgYW1iaWdfdG8gPSBtb3Zlc1tpXS50bztcbiAgICAgIHZhciBhbWJpZ19waWVjZSA9IG1vdmVzW2ldLnBpZWNlO1xuXG4gICAgICAvKiBpZiBhIG1vdmUgb2YgdGhlIHNhbWUgcGllY2UgdHlwZSBlbmRzIG9uIHRoZSBzYW1lIHRvIHNxdWFyZSwgd2UnbGxcbiAgICAgICAqIG5lZWQgdG8gYWRkIGEgZGlzYW1iaWd1YXRvciB0byB0aGUgYWxnZWJyYWljIG5vdGF0aW9uXG4gICAgICAgKi9cbiAgICAgIGlmIChwaWVjZSA9PT0gYW1iaWdfcGllY2UgJiYgZnJvbSAhPT0gYW1iaWdfZnJvbSAmJiB0byA9PT0gYW1iaWdfdG8pIHtcbiAgICAgICAgYW1iaWd1aXRpZXMrKztcblxuICAgICAgICBpZiAocmFuayhmcm9tKSA9PT0gcmFuayhhbWJpZ19mcm9tKSkge1xuICAgICAgICAgIHNhbWVfcmFuaysrO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGZpbGUoZnJvbSkgPT09IGZpbGUoYW1iaWdfZnJvbSkpIHtcbiAgICAgICAgICBzYW1lX2ZpbGUrKztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChhbWJpZ3VpdGllcyA+IDApIHtcbiAgICAgIC8qIGlmIHRoZXJlIGV4aXN0cyBhIHNpbWlsYXIgbW92aW5nIHBpZWNlIG9uIHRoZSBzYW1lIHJhbmsgYW5kIGZpbGUgYXNcbiAgICAgICAqIHRoZSBtb3ZlIGluIHF1ZXN0aW9uLCB1c2UgdGhlIHNxdWFyZSBhcyB0aGUgZGlzYW1iaWd1YXRvclxuICAgICAgICovXG4gICAgICBpZiAoc2FtZV9yYW5rID4gMCAmJiBzYW1lX2ZpbGUgPiAwKSB7XG4gICAgICAgIHJldHVybiBhbGdlYnJhaWMoZnJvbSk7XG4gICAgICB9XG4gICAgICAvKiBpZiB0aGUgbW92aW5nIHBpZWNlIHJlc3RzIG9uIHRoZSBzYW1lIGZpbGUsIHVzZSB0aGUgcmFuayBzeW1ib2wgYXMgdGhlXG4gICAgICAgKiBkaXNhbWJpZ3VhdG9yXG4gICAgICAgKi9cbiAgICAgIGVsc2UgaWYgKHNhbWVfZmlsZSA+IDApIHtcbiAgICAgICAgcmV0dXJuIGFsZ2VicmFpYyhmcm9tKS5jaGFyQXQoMSk7XG4gICAgICB9XG4gICAgICAvKiBlbHNlIHVzZSB0aGUgZmlsZSBzeW1ib2wgKi9cbiAgICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gYWxnZWJyYWljKGZyb20pLmNoYXJBdCgwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBmdW5jdGlvbiBhc2NpaSgpIHtcbiAgICB2YXIgcyA9ICcgICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xcbic7XG4gICAgZm9yICh2YXIgaSA9IFNRVUFSRVMuYTg7IGkgPD0gU1FVQVJFUy5oMTsgaSsrKSB7XG4gICAgICAvKiBkaXNwbGF5IHRoZSByYW5rICovXG4gICAgICBpZiAoZmlsZShpKSA9PT0gMCkge1xuICAgICAgICBzICs9ICcgJyArICc4NzY1NDMyMSdbcmFuayhpKV0gKyAnIHwnO1xuICAgICAgfVxuXG4gICAgICAvKiBlbXB0eSBwaWVjZSAqL1xuICAgICAgaWYgKGJvYXJkW2ldID09IG51bGwpIHtcbiAgICAgICAgcyArPSAnIC4gJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBwaWVjZSA9IGJvYXJkW2ldLnR5cGU7XG4gICAgICAgIHZhciBjb2xvciA9IGJvYXJkW2ldLmNvbG9yO1xuICAgICAgICB2YXIgc3ltYm9sID0gKGNvbG9yID09PSBXSElURSkgP1xuICAgICAgICAgICAgICAgICAgICAgcGllY2UudG9VcHBlckNhc2UoKSA6IHBpZWNlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHMgKz0gJyAnICsgc3ltYm9sICsgJyAnO1xuICAgICAgfVxuXG4gICAgICBpZiAoKGkgKyAxKSAmIDB4ODgpIHtcbiAgICAgICAgcyArPSAnfFxcbic7XG4gICAgICAgIGkgKz0gODtcbiAgICAgIH1cbiAgICB9XG4gICAgcyArPSAnICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcXG4nO1xuICAgIHMgKz0gJyAgICAgYSAgYiAgYyAgZCAgZSAgZiAgZyAgaFxcbic7XG5cbiAgICByZXR1cm4gcztcbiAgfVxuXG4gIC8vIGNvbnZlcnQgYSBtb3ZlIGZyb20gU3RhbmRhcmQgQWxnZWJyYWljIE5vdGF0aW9uIChTQU4pIHRvIDB4ODggY29vcmRpbmF0ZXNcbiAgZnVuY3Rpb24gbW92ZV9mcm9tX3Nhbihtb3ZlLCBzbG9wcHkpIHtcbiAgICAvLyBzdHJpcCBvZmYgYW55IG1vdmUgZGVjb3JhdGlvbnM6IGUuZyBOZjMrPyFcbiAgICB2YXIgY2xlYW5fbW92ZSA9IHN0cmlwcGVkX3Nhbihtb3ZlKTtcblxuICAgIC8vIGlmIHdlJ3JlIHVzaW5nIHRoZSBzbG9wcHkgcGFyc2VyIHJ1biBhIHJlZ2V4IHRvIGdyYWIgcGllY2UsIHRvLCBhbmQgZnJvbVxuICAgIC8vIHRoaXMgc2hvdWxkIHBhcnNlIGludmFsaWQgU0FOIGxpa2U6IFBlMi1lNCwgUmMxYzQsIFFmM3hmN1xuICAgIGlmIChzbG9wcHkpIHtcbiAgICAgIHZhciBtYXRjaGVzID0gY2xlYW5fbW92ZS5tYXRjaCgvKFtwbmJycWtQTkJSUUtdKT8oW2EtaF1bMS04XSl4Py0/KFthLWhdWzEtOF0pKFtxcmJuUVJCTl0pPy8pO1xuICAgICAgaWYgKG1hdGNoZXMpIHtcbiAgICAgICAgdmFyIHBpZWNlID0gbWF0Y2hlc1sxXTtcbiAgICAgICAgdmFyIGZyb20gPSBtYXRjaGVzWzJdO1xuICAgICAgICB2YXIgdG8gPSBtYXRjaGVzWzNdO1xuICAgICAgICB2YXIgcHJvbW90aW9uID0gbWF0Y2hlc1s0XTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgbW92ZXMgPSBnZW5lcmF0ZV9tb3ZlcygpO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBtb3Zlcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgLy8gdHJ5IHRoZSBzdHJpY3QgcGFyc2VyIGZpcnN0LCB0aGVuIHRoZSBzbG9wcHkgcGFyc2VyIGlmIHJlcXVlc3RlZFxuICAgICAgLy8gYnkgdGhlIHVzZXJcbiAgICAgIGlmICgoY2xlYW5fbW92ZSA9PT0gc3RyaXBwZWRfc2FuKG1vdmVfdG9fc2FuKG1vdmVzW2ldKSkpIHx8XG4gICAgICAgICAgKHNsb3BweSAmJiBjbGVhbl9tb3ZlID09PSBzdHJpcHBlZF9zYW4obW92ZV90b19zYW4obW92ZXNbaV0sIHRydWUpKSkpIHtcbiAgICAgICAgcmV0dXJuIG1vdmVzW2ldO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKG1hdGNoZXMgJiZcbiAgICAgICAgICAgICghcGllY2UgfHwgcGllY2UudG9Mb3dlckNhc2UoKSA9PSBtb3Zlc1tpXS5waWVjZSkgJiZcbiAgICAgICAgICAgIFNRVUFSRVNbZnJvbV0gPT0gbW92ZXNbaV0uZnJvbSAmJlxuICAgICAgICAgICAgU1FVQVJFU1t0b10gPT0gbW92ZXNbaV0udG8gJiZcbiAgICAgICAgICAgICghcHJvbW90aW9uIHx8IHByb21vdGlvbi50b0xvd2VyQ2FzZSgpID09IG1vdmVzW2ldLnByb21vdGlvbikpIHtcbiAgICAgICAgICByZXR1cm4gbW92ZXNbaV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG5cbiAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAqIFVUSUxJVFkgRlVOQ1RJT05TXG4gICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICBmdW5jdGlvbiByYW5rKGkpIHtcbiAgICByZXR1cm4gaSA+PiA0O1xuICB9XG5cbiAgZnVuY3Rpb24gZmlsZShpKSB7XG4gICAgcmV0dXJuIGkgJiAxNTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFsZ2VicmFpYyhpKXtcbiAgICB2YXIgZiA9IGZpbGUoaSksIHIgPSByYW5rKGkpO1xuICAgIHJldHVybiAnYWJjZGVmZ2gnLnN1YnN0cmluZyhmLGYrMSkgKyAnODc2NTQzMjEnLnN1YnN0cmluZyhyLHIrMSk7XG4gIH1cblxuICBmdW5jdGlvbiBzd2FwX2NvbG9yKGMpIHtcbiAgICByZXR1cm4gYyA9PT0gV0hJVEUgPyBCTEFDSyA6IFdISVRFO1xuICB9XG5cbiAgZnVuY3Rpb24gaXNfZGlnaXQoYykge1xuICAgIHJldHVybiAnMDEyMzQ1Njc4OScuaW5kZXhPZihjKSAhPT0gLTE7XG4gIH1cblxuICAvKiBwcmV0dHkgPSBleHRlcm5hbCBtb3ZlIG9iamVjdCAqL1xuICBmdW5jdGlvbiBtYWtlX3ByZXR0eSh1Z2x5X21vdmUpIHtcbiAgICB2YXIgbW92ZSA9IGNsb25lKHVnbHlfbW92ZSk7XG4gICAgbW92ZS5zYW4gPSBtb3ZlX3RvX3Nhbihtb3ZlLCBmYWxzZSk7XG4gICAgbW92ZS50byA9IGFsZ2VicmFpYyhtb3ZlLnRvKTtcbiAgICBtb3ZlLmZyb20gPSBhbGdlYnJhaWMobW92ZS5mcm9tKTtcblxuICAgIHZhciBmbGFncyA9ICcnO1xuXG4gICAgZm9yICh2YXIgZmxhZyBpbiBCSVRTKSB7XG4gICAgICBpZiAoQklUU1tmbGFnXSAmIG1vdmUuZmxhZ3MpIHtcbiAgICAgICAgZmxhZ3MgKz0gRkxBR1NbZmxhZ107XG4gICAgICB9XG4gICAgfVxuICAgIG1vdmUuZmxhZ3MgPSBmbGFncztcblxuICAgIHJldHVybiBtb3ZlO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xvbmUob2JqKSB7XG4gICAgdmFyIGR1cGUgPSAob2JqIGluc3RhbmNlb2YgQXJyYXkpID8gW10gOiB7fTtcblxuICAgIGZvciAodmFyIHByb3BlcnR5IGluIG9iaikge1xuICAgICAgaWYgKHR5cGVvZiBwcm9wZXJ0eSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgZHVwZVtwcm9wZXJ0eV0gPSBjbG9uZShvYmpbcHJvcGVydHldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGR1cGVbcHJvcGVydHldID0gb2JqW3Byb3BlcnR5XTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZHVwZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyaW0oc3RyKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCAnJyk7XG4gIH1cblxuICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICogREVCVUdHSU5HIFVUSUxJVElFU1xuICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgZnVuY3Rpb24gcGVyZnQoZGVwdGgpIHtcbiAgICB2YXIgbW92ZXMgPSBnZW5lcmF0ZV9tb3Zlcyh7bGVnYWw6IGZhbHNlfSk7XG4gICAgdmFyIG5vZGVzID0gMDtcbiAgICB2YXIgY29sb3IgPSB0dXJuO1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IG1vdmVzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBtYWtlX21vdmUobW92ZXNbaV0pO1xuICAgICAgaWYgKCFraW5nX2F0dGFja2VkKGNvbG9yKSkge1xuICAgICAgICBpZiAoZGVwdGggLSAxID4gMCkge1xuICAgICAgICAgIHZhciBjaGlsZF9ub2RlcyA9IHBlcmZ0KGRlcHRoIC0gMSk7XG4gICAgICAgICAgbm9kZXMgKz0gY2hpbGRfbm9kZXM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbm9kZXMrKztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdW5kb19tb3ZlKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5vZGVzO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgICogUFVCTElDIENPTlNUQU5UUyAoaXMgdGhlcmUgYSBiZXR0ZXIgd2F5IHRvIGRvIHRoaXM/KVxuICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICBXSElURTogV0hJVEUsXG4gICAgQkxBQ0s6IEJMQUNLLFxuICAgIFBBV046IFBBV04sXG4gICAgS05JR0hUOiBLTklHSFQsXG4gICAgQklTSE9QOiBCSVNIT1AsXG4gICAgUk9PSzogUk9PSyxcbiAgICBRVUVFTjogUVVFRU4sXG4gICAgS0lORzogS0lORyxcbiAgICBTUVVBUkVTOiAoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgLyogZnJvbSB0aGUgRUNNQS0yNjIgc3BlYyAoc2VjdGlvbiAxMi42LjQpOlxuICAgICAgICAgICAgICAgICAqIFwiVGhlIG1lY2hhbmljcyBvZiBlbnVtZXJhdGluZyB0aGUgcHJvcGVydGllcyAuLi4gaXNcbiAgICAgICAgICAgICAgICAgKiBpbXBsZW1lbnRhdGlvbiBkZXBlbmRlbnRcIlxuICAgICAgICAgICAgICAgICAqIHNvOiBmb3IgKHZhciBzcSBpbiBTUVVBUkVTKSB7IGtleXMucHVzaChzcSk7IH0gbWlnaHQgbm90IGJlXG4gICAgICAgICAgICAgICAgICogb3JkZXJlZCBjb3JyZWN0bHlcbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICB2YXIga2V5cyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSBTUVVBUkVTLmE4OyBpIDw9IFNRVUFSRVMuaDE7IGkrKykge1xuICAgICAgICAgICAgICAgICAgaWYgKGkgJiAweDg4KSB7IGkgKz0gNzsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgIGtleXMucHVzaChhbGdlYnJhaWMoaSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4ga2V5cztcbiAgICAgICAgICAgICAgfSkoKSxcbiAgICBGTEFHUzogRkxBR1MsXG5cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgICogUFVCTElDIEFQSVxuICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICBsb2FkOiBmdW5jdGlvbihmZW4pIHtcbiAgICAgIHJldHVybiBsb2FkKGZlbik7XG4gICAgfSxcblxuICAgIHJlc2V0OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiByZXNldCgpO1xuICAgIH0sXG5cbiAgICBtb3ZlczogZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgLyogVGhlIGludGVybmFsIHJlcHJlc2VudGF0aW9uIG9mIGEgY2hlc3MgbW92ZSBpcyBpbiAweDg4IGZvcm1hdCwgYW5kXG4gICAgICAgKiBub3QgbWVhbnQgdG8gYmUgaHVtYW4tcmVhZGFibGUuICBUaGUgY29kZSBiZWxvdyBjb252ZXJ0cyB0aGUgMHg4OFxuICAgICAgICogc3F1YXJlIGNvb3JkaW5hdGVzIHRvIGFsZ2VicmFpYyBjb29yZGluYXRlcy4gIEl0IGFsc28gcHJ1bmVzIGFuXG4gICAgICAgKiB1bm5lY2Vzc2FyeSBtb3ZlIGtleXMgcmVzdWx0aW5nIGZyb20gYSB2ZXJib3NlIGNhbGwuXG4gICAgICAgKi9cblxuICAgICAgdmFyIHVnbHlfbW92ZXMgPSBnZW5lcmF0ZV9tb3ZlcyhvcHRpb25zKTtcbiAgICAgIHZhciBtb3ZlcyA9IFtdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdWdseV9tb3Zlcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuXG4gICAgICAgIC8qIGRvZXMgdGhlIHVzZXIgd2FudCBhIGZ1bGwgbW92ZSBvYmplY3QgKG1vc3QgbGlrZWx5IG5vdCksIG9yIGp1c3RcbiAgICAgICAgICogU0FOXG4gICAgICAgICAqL1xuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMgIT09ICd1bmRlZmluZWQnICYmICd2ZXJib3NlJyBpbiBvcHRpb25zICYmXG4gICAgICAgICAgICBvcHRpb25zLnZlcmJvc2UpIHtcbiAgICAgICAgICBtb3Zlcy5wdXNoKG1ha2VfcHJldHR5KHVnbHlfbW92ZXNbaV0pKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBtb3Zlcy5wdXNoKG1vdmVfdG9fc2FuKHVnbHlfbW92ZXNbaV0sIGZhbHNlKSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG1vdmVzO1xuICAgIH0sXG5cbiAgICBpbl9jaGVjazogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gaW5fY2hlY2soKTtcbiAgICB9LFxuXG4gICAgaW5fY2hlY2ttYXRlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpbl9jaGVja21hdGUoKTtcbiAgICB9LFxuXG4gICAgaW5fc3RhbGVtYXRlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpbl9zdGFsZW1hdGUoKTtcbiAgICB9LFxuXG4gICAgaW5fZHJhdzogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gaGFsZl9tb3ZlcyA+PSAxMDAgfHxcbiAgICAgICAgICAgICBpbl9zdGFsZW1hdGUoKSB8fFxuICAgICAgICAgICAgIGluc3VmZmljaWVudF9tYXRlcmlhbCgpIHx8XG4gICAgICAgICAgICAgaW5fdGhyZWVmb2xkX3JlcGV0aXRpb24oKTtcbiAgICB9LFxuXG4gICAgaW5zdWZmaWNpZW50X21hdGVyaWFsOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpbnN1ZmZpY2llbnRfbWF0ZXJpYWwoKTtcbiAgICB9LFxuXG4gICAgaW5fdGhyZWVmb2xkX3JlcGV0aXRpb246IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGluX3RocmVlZm9sZF9yZXBldGl0aW9uKCk7XG4gICAgfSxcblxuICAgIGdhbWVfb3ZlcjogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gaGFsZl9tb3ZlcyA+PSAxMDAgfHxcbiAgICAgICAgICAgICBpbl9jaGVja21hdGUoKSB8fFxuICAgICAgICAgICAgIGluX3N0YWxlbWF0ZSgpIHx8XG4gICAgICAgICAgICAgaW5zdWZmaWNpZW50X21hdGVyaWFsKCkgfHxcbiAgICAgICAgICAgICBpbl90aHJlZWZvbGRfcmVwZXRpdGlvbigpO1xuICAgIH0sXG5cbiAgICB2YWxpZGF0ZV9mZW46IGZ1bmN0aW9uKGZlbikge1xuICAgICAgcmV0dXJuIHZhbGlkYXRlX2ZlbihmZW4pO1xuICAgIH0sXG5cbiAgICBmZW46IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGdlbmVyYXRlX2ZlbigpO1xuICAgIH0sXG5cbiAgICBwZ246IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIC8qIHVzaW5nIHRoZSBzcGVjaWZpY2F0aW9uIGZyb20gaHR0cDovL3d3dy5jaGVzc2NsdWIuY29tL2hlbHAvUEdOLXNwZWNcbiAgICAgICAqIGV4YW1wbGUgZm9yIGh0bWwgdXNhZ2U6IC5wZ24oeyBtYXhfd2lkdGg6IDcyLCBuZXdsaW5lX2NoYXI6IFwiPGJyIC8+XCIgfSlcbiAgICAgICAqL1xuICAgICAgdmFyIG5ld2xpbmUgPSAodHlwZW9mIG9wdGlvbnMgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICAgICAgICAgICB0eXBlb2Ygb3B0aW9ucy5uZXdsaW5lX2NoYXIgPT09ICdzdHJpbmcnKSA/XG4gICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm5ld2xpbmVfY2hhciA6ICdcXG4nO1xuICAgICAgdmFyIG1heF93aWR0aCA9ICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIG9wdGlvbnMubWF4X3dpZHRoID09PSAnbnVtYmVyJykgP1xuICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm1heF93aWR0aCA6IDA7XG4gICAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgICB2YXIgaGVhZGVyX2V4aXN0cyA9IGZhbHNlO1xuXG4gICAgICAvKiBhZGQgdGhlIFBHTiBoZWFkZXIgaGVhZGVycm1hdGlvbiAqL1xuICAgICAgZm9yICh2YXIgaSBpbiBoZWFkZXIpIHtcbiAgICAgICAgLyogVE9ETzogb3JkZXIgb2YgZW51bWVyYXRlZCBwcm9wZXJ0aWVzIGluIGhlYWRlciBvYmplY3QgaXMgbm90XG4gICAgICAgICAqIGd1YXJhbnRlZWQsIHNlZSBFQ01BLTI2MiBzcGVjIChzZWN0aW9uIDEyLjYuNClcbiAgICAgICAgICovXG4gICAgICAgIHJlc3VsdC5wdXNoKCdbJyArIGkgKyAnIFxcXCInICsgaGVhZGVyW2ldICsgJ1xcXCJdJyArIG5ld2xpbmUpO1xuICAgICAgICBoZWFkZXJfZXhpc3RzID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGhlYWRlcl9leGlzdHMgJiYgaGlzdG9yeS5sZW5ndGgpIHtcbiAgICAgICAgcmVzdWx0LnB1c2gobmV3bGluZSk7XG4gICAgICB9XG5cbiAgICAgIC8qIHBvcCBhbGwgb2YgaGlzdG9yeSBvbnRvIHJldmVyc2VkX2hpc3RvcnkgKi9cbiAgICAgIHZhciByZXZlcnNlZF9oaXN0b3J5ID0gW107XG4gICAgICB3aGlsZSAoaGlzdG9yeS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJldmVyc2VkX2hpc3RvcnkucHVzaCh1bmRvX21vdmUoKSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBtb3ZlcyA9IFtdO1xuICAgICAgdmFyIG1vdmVfc3RyaW5nID0gJyc7XG5cbiAgICAgIC8qIGJ1aWxkIHRoZSBsaXN0IG9mIG1vdmVzLiAgYSBtb3ZlX3N0cmluZyBsb29rcyBsaWtlOiBcIjMuIGUzIGU2XCIgKi9cbiAgICAgIHdoaWxlIChyZXZlcnNlZF9oaXN0b3J5Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFyIG1vdmUgPSByZXZlcnNlZF9oaXN0b3J5LnBvcCgpO1xuXG4gICAgICAgIC8qIGlmIHRoZSBwb3NpdGlvbiBzdGFydGVkIHdpdGggYmxhY2sgdG8gbW92ZSwgc3RhcnQgUEdOIHdpdGggMS4gLi4uICovXG4gICAgICAgIGlmICghaGlzdG9yeS5sZW5ndGggJiYgbW92ZS5jb2xvciA9PT0gJ2InKSB7XG4gICAgICAgICAgbW92ZV9zdHJpbmcgPSBtb3ZlX251bWJlciArICcuIC4uLic7XG4gICAgICAgIH0gZWxzZSBpZiAobW92ZS5jb2xvciA9PT0gJ3cnKSB7XG4gICAgICAgICAgLyogc3RvcmUgdGhlIHByZXZpb3VzIGdlbmVyYXRlZCBtb3ZlX3N0cmluZyBpZiB3ZSBoYXZlIG9uZSAqL1xuICAgICAgICAgIGlmIChtb3ZlX3N0cmluZy5sZW5ndGgpIHtcbiAgICAgICAgICAgIG1vdmVzLnB1c2gobW92ZV9zdHJpbmcpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBtb3ZlX3N0cmluZyA9IG1vdmVfbnVtYmVyICsgJy4nO1xuICAgICAgICB9XG5cbiAgICAgICAgbW92ZV9zdHJpbmcgPSBtb3ZlX3N0cmluZyArICcgJyArIG1vdmVfdG9fc2FuKG1vdmUsIGZhbHNlKTtcbiAgICAgICAgbWFrZV9tb3ZlKG1vdmUpO1xuICAgICAgfVxuXG4gICAgICAvKiBhcmUgdGhlcmUgYW55IG90aGVyIGxlZnRvdmVyIG1vdmVzPyAqL1xuICAgICAgaWYgKG1vdmVfc3RyaW5nLmxlbmd0aCkge1xuICAgICAgICBtb3Zlcy5wdXNoKG1vdmVfc3RyaW5nKTtcbiAgICAgIH1cblxuICAgICAgLyogaXMgdGhlcmUgYSByZXN1bHQ/ICovXG4gICAgICBpZiAodHlwZW9mIGhlYWRlci5SZXN1bHQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIG1vdmVzLnB1c2goaGVhZGVyLlJlc3VsdCk7XG4gICAgICB9XG5cbiAgICAgIC8qIGhpc3Rvcnkgc2hvdWxkIGJlIGJhY2sgdG8gd2hhdCBpcyB3YXMgYmVmb3JlIHdlIHN0YXJ0ZWQgZ2VuZXJhdGluZyBQR04sXG4gICAgICAgKiBzbyBqb2luIHRvZ2V0aGVyIG1vdmVzXG4gICAgICAgKi9cbiAgICAgIGlmIChtYXhfd2lkdGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5qb2luKCcnKSArIG1vdmVzLmpvaW4oJyAnKTtcbiAgICAgIH1cblxuICAgICAgLyogd3JhcCB0aGUgUEdOIG91dHB1dCBhdCBtYXhfd2lkdGggKi9cbiAgICAgIHZhciBjdXJyZW50X3dpZHRoID0gMDtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbW92ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLyogaWYgdGhlIGN1cnJlbnQgbW92ZSB3aWxsIHB1c2ggcGFzdCBtYXhfd2lkdGggKi9cbiAgICAgICAgaWYgKGN1cnJlbnRfd2lkdGggKyBtb3Zlc1tpXS5sZW5ndGggPiBtYXhfd2lkdGggJiYgaSAhPT0gMCkge1xuXG4gICAgICAgICAgLyogZG9uJ3QgZW5kIHRoZSBsaW5lIHdpdGggd2hpdGVzcGFjZSAqL1xuICAgICAgICAgIGlmIChyZXN1bHRbcmVzdWx0Lmxlbmd0aCAtIDFdID09PSAnICcpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wb3AoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXN1bHQucHVzaChuZXdsaW5lKTtcbiAgICAgICAgICBjdXJyZW50X3dpZHRoID0gMDtcbiAgICAgICAgfSBlbHNlIGlmIChpICE9PSAwKSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2goJyAnKTtcbiAgICAgICAgICBjdXJyZW50X3dpZHRoKys7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0LnB1c2gobW92ZXNbaV0pO1xuICAgICAgICBjdXJyZW50X3dpZHRoICs9IG1vdmVzW2ldLmxlbmd0aDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3VsdC5qb2luKCcnKTtcbiAgICB9LFxuXG4gICAgbG9hZF9wZ246IGZ1bmN0aW9uKHBnbiwgb3B0aW9ucykge1xuICAgICAgLy8gYWxsb3cgdGhlIHVzZXIgdG8gc3BlY2lmeSB0aGUgc2xvcHB5IG1vdmUgcGFyc2VyIHRvIHdvcmsgYXJvdW5kIG92ZXJcbiAgICAgIC8vIGRpc2FtYmlndWF0aW9uIGJ1Z3MgaW4gRnJpdHogYW5kIENoZXNzYmFzZVxuICAgICAgdmFyIHNsb3BweSA9ICh0eXBlb2Ygb3B0aW9ucyAhPT0gJ3VuZGVmaW5lZCcgJiYgJ3Nsb3BweScgaW4gb3B0aW9ucykgP1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLnNsb3BweSA6IGZhbHNlO1xuXG4gICAgICBmdW5jdGlvbiBtYXNrKHN0cikge1xuICAgICAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1xcXFwvZywgJ1xcXFwnKTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gaGFzX2tleXMob2JqZWN0KSB7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIHBhcnNlX3Bnbl9oZWFkZXIoaGVhZGVyLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBuZXdsaW5lX2NoYXIgPSAodHlwZW9mIG9wdGlvbnMgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIG9wdGlvbnMubmV3bGluZV9jaGFyID09PSAnc3RyaW5nJykgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMubmV3bGluZV9jaGFyIDogJ1xccj9cXG4nO1xuICAgICAgICB2YXIgaGVhZGVyX29iaiA9IHt9O1xuICAgICAgICB2YXIgaGVhZGVycyA9IGhlYWRlci5zcGxpdChuZXcgUmVnRXhwKG1hc2sobmV3bGluZV9jaGFyKSkpO1xuICAgICAgICB2YXIga2V5ID0gJyc7XG4gICAgICAgIHZhciB2YWx1ZSA9ICcnO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaGVhZGVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGtleSA9IGhlYWRlcnNbaV0ucmVwbGFjZSgvXlxcWyhbQS1aXVtBLVphLXpdKilcXHMuKlxcXSQvLCAnJDEnKTtcbiAgICAgICAgICB2YWx1ZSA9IGhlYWRlcnNbaV0ucmVwbGFjZSgvXlxcW1tBLVphLXpdK1xcc1wiKC4qKVwiXFxdJC8sICckMScpO1xuICAgICAgICAgIGlmICh0cmltKGtleSkubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgaGVhZGVyX29ialtrZXldID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGhlYWRlcl9vYmo7XG4gICAgICB9XG5cbiAgICAgIHZhciBuZXdsaW5lX2NoYXIgPSAodHlwZW9mIG9wdGlvbnMgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVvZiBvcHRpb25zLm5ld2xpbmVfY2hhciA9PT0gJ3N0cmluZycpID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5uZXdsaW5lX2NoYXIgOiAnXFxyP1xcbic7XG4gICAgICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKCdeKFxcXFxbKC58JyArIG1hc2sobmV3bGluZV9jaGFyKSArICcpKlxcXFxdKScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnKCcgKyBtYXNrKG5ld2xpbmVfY2hhcikgKyAnKSonICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzEuKCcgKyBtYXNrKG5ld2xpbmVfY2hhcikgKyAnfC4pKiQnLCAnZycpO1xuXG4gICAgICAvKiBnZXQgaGVhZGVyIHBhcnQgb2YgdGhlIFBHTiBmaWxlICovXG4gICAgICB2YXIgaGVhZGVyX3N0cmluZyA9IHBnbi5yZXBsYWNlKHJlZ2V4LCAnJDEnKTtcblxuICAgICAgLyogbm8gaW5mbyBwYXJ0IGdpdmVuLCBiZWdpbnMgd2l0aCBtb3ZlcyAqL1xuICAgICAgaWYgKGhlYWRlcl9zdHJpbmdbMF0gIT09ICdbJykge1xuICAgICAgICBoZWFkZXJfc3RyaW5nID0gJyc7XG4gICAgICB9XG5cbiAgICAgIHJlc2V0KCk7XG5cbiAgICAgIC8qIHBhcnNlIFBHTiBoZWFkZXIgKi9cbiAgICAgIHZhciBoZWFkZXJzID0gcGFyc2VfcGduX2hlYWRlcihoZWFkZXJfc3RyaW5nLCBvcHRpb25zKTtcbiAgICAgIGZvciAodmFyIGtleSBpbiBoZWFkZXJzKSB7XG4gICAgICAgIHNldF9oZWFkZXIoW2tleSwgaGVhZGVyc1trZXldXSk7XG4gICAgICB9XG5cbiAgICAgIC8qIGxvYWQgdGhlIHN0YXJ0aW5nIHBvc2l0aW9uIGluZGljYXRlZCBieSBbU2V0dXAgJzEnXSBhbmRcbiAgICAgICogW0ZFTiBwb3NpdGlvbl0gKi9cbiAgICAgIGlmIChoZWFkZXJzWydTZXRVcCddID09PSAnMScpIHtcbiAgICAgICAgICBpZiAoISgoJ0ZFTicgaW4gaGVhZGVycykgJiYgbG9hZChoZWFkZXJzWydGRU4nXSkpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKiBkZWxldGUgaGVhZGVyIHRvIGdldCB0aGUgbW92ZXMgKi9cbiAgICAgIHZhciBtcyA9IHBnbi5yZXBsYWNlKGhlYWRlcl9zdHJpbmcsICcnKS5yZXBsYWNlKG5ldyBSZWdFeHAobWFzayhuZXdsaW5lX2NoYXIpLCAnZycpLCAnICcpO1xuXG4gICAgICAvKiBkZWxldGUgY29tbWVudHMgKi9cbiAgICAgIG1zID0gbXMucmVwbGFjZSgvKFxce1tefV0rXFx9KSs/L2csICcnKTtcblxuICAgICAgLyogZGVsZXRlIHJlY3Vyc2l2ZSBhbm5vdGF0aW9uIHZhcmlhdGlvbnMgKi9cbiAgICAgIHZhciByYXZfcmVnZXggPSAvKFxcKFteXFwoXFwpXStcXCkpKz8vZ1xuICAgICAgd2hpbGUgKHJhdl9yZWdleC50ZXN0KG1zKSkge1xuICAgICAgICBtcyA9IG1zLnJlcGxhY2UocmF2X3JlZ2V4LCAnJyk7XG4gICAgICB9XG5cbiAgICAgIC8qIGRlbGV0ZSBtb3ZlIG51bWJlcnMgKi9cbiAgICAgIG1zID0gbXMucmVwbGFjZSgvXFxkK1xcLihcXC5cXC4pPy9nLCAnJyk7XG5cbiAgICAgIC8qIGRlbGV0ZSAuLi4gaW5kaWNhdGluZyBibGFjayB0byBtb3ZlICovXG4gICAgICBtcyA9IG1zLnJlcGxhY2UoL1xcLlxcLlxcLi9nLCAnJyk7XG5cbiAgICAgIC8qIGRlbGV0ZSBudW1lcmljIGFubm90YXRpb24gZ2x5cGhzICovXG4gICAgICBtcyA9IG1zLnJlcGxhY2UoL1xcJFxcZCsvZywgJycpO1xuXG4gICAgICAvKiB0cmltIGFuZCBnZXQgYXJyYXkgb2YgbW92ZXMgKi9cbiAgICAgIHZhciBtb3ZlcyA9IHRyaW0obXMpLnNwbGl0KG5ldyBSZWdFeHAoL1xccysvKSk7XG5cbiAgICAgIC8qIGRlbGV0ZSBlbXB0eSBlbnRyaWVzICovXG4gICAgICBtb3ZlcyA9IG1vdmVzLmpvaW4oJywnKS5yZXBsYWNlKC8sLCsvZywgJywnKS5zcGxpdCgnLCcpO1xuICAgICAgdmFyIG1vdmUgPSAnJztcblxuICAgICAgZm9yICh2YXIgaGFsZl9tb3ZlID0gMDsgaGFsZl9tb3ZlIDwgbW92ZXMubGVuZ3RoIC0gMTsgaGFsZl9tb3ZlKyspIHtcbiAgICAgICAgbW92ZSA9IG1vdmVfZnJvbV9zYW4obW92ZXNbaGFsZl9tb3ZlXSwgc2xvcHB5KTtcblxuICAgICAgICAvKiBtb3ZlIG5vdCBwb3NzaWJsZSEgKGRvbid0IGNsZWFyIHRoZSBib2FyZCB0byBleGFtaW5lIHRvIHNob3cgdGhlXG4gICAgICAgICAqIGxhdGVzdCB2YWxpZCBwb3NpdGlvbilcbiAgICAgICAgICovXG4gICAgICAgIGlmIChtb3ZlID09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbWFrZV9tb3ZlKG1vdmUpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8qIGV4YW1pbmUgbGFzdCBtb3ZlICovXG4gICAgICBtb3ZlID0gbW92ZXNbbW92ZXMubGVuZ3RoIC0gMV07XG4gICAgICBpZiAoUE9TU0lCTEVfUkVTVUxUUy5pbmRleE9mKG1vdmUpID4gLTEpIHtcbiAgICAgICAgaWYgKGhhc19rZXlzKGhlYWRlcikgJiYgdHlwZW9mIGhlYWRlci5SZXN1bHQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgc2V0X2hlYWRlcihbJ1Jlc3VsdCcsIG1vdmVdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIG1vdmUgPSBtb3ZlX2Zyb21fc2FuKG1vdmUsIHNsb3BweSk7XG4gICAgICAgIGlmIChtb3ZlID09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbWFrZV9tb3ZlKG1vdmUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuXG4gICAgaGVhZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzZXRfaGVhZGVyKGFyZ3VtZW50cyk7XG4gICAgfSxcblxuICAgIGFzY2lpOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBhc2NpaSgpO1xuICAgIH0sXG5cbiAgICB0dXJuOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0dXJuO1xuICAgIH0sXG5cbiAgICBtb3ZlOiBmdW5jdGlvbihtb3ZlLCBvcHRpb25zKSB7XG4gICAgICAvKiBUaGUgbW92ZSBmdW5jdGlvbiBjYW4gYmUgY2FsbGVkIHdpdGggaW4gdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzOlxuICAgICAgICpcbiAgICAgICAqIC5tb3ZlKCdOeGI3JykgICAgICA8LSB3aGVyZSAnbW92ZScgaXMgYSBjYXNlLXNlbnNpdGl2ZSBTQU4gc3RyaW5nXG4gICAgICAgKlxuICAgICAgICogLm1vdmUoeyBmcm9tOiAnaDcnLCA8LSB3aGVyZSB0aGUgJ21vdmUnIGlzIGEgbW92ZSBvYmplY3QgKGFkZGl0aW9uYWxcbiAgICAgICAqICAgICAgICAgdG8gOidoOCcsICAgICAgZmllbGRzIGFyZSBpZ25vcmVkKVxuICAgICAgICogICAgICAgICBwcm9tb3Rpb246ICdxJyxcbiAgICAgICAqICAgICAgfSlcbiAgICAgICAqL1xuXG4gICAgICAvLyBhbGxvdyB0aGUgdXNlciB0byBzcGVjaWZ5IHRoZSBzbG9wcHkgbW92ZSBwYXJzZXIgdG8gd29yayBhcm91bmQgb3ZlclxuICAgICAgLy8gZGlzYW1iaWd1YXRpb24gYnVncyBpbiBGcml0eiBhbmQgQ2hlc3NiYXNlXG4gICAgICB2YXIgc2xvcHB5ID0gKHR5cGVvZiBvcHRpb25zICE9PSAndW5kZWZpbmVkJyAmJiAnc2xvcHB5JyBpbiBvcHRpb25zKSA/XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMuc2xvcHB5IDogZmFsc2U7XG5cbiAgICAgIHZhciBtb3ZlX29iaiA9IG51bGw7XG5cbiAgICAgIGlmICh0eXBlb2YgbW92ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgbW92ZV9vYmogPSBtb3ZlX2Zyb21fc2FuKG1vdmUsIHNsb3BweSk7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBtb3ZlID09PSAnb2JqZWN0Jykge1xuICAgICAgICB2YXIgbW92ZXMgPSBnZW5lcmF0ZV9tb3ZlcygpO1xuXG4gICAgICAgIC8qIGNvbnZlcnQgdGhlIHByZXR0eSBtb3ZlIG9iamVjdCB0byBhbiB1Z2x5IG1vdmUgb2JqZWN0ICovXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBtb3Zlcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgIGlmIChtb3ZlLmZyb20gPT09IGFsZ2VicmFpYyhtb3Zlc1tpXS5mcm9tKSAmJlxuICAgICAgICAgICAgICBtb3ZlLnRvID09PSBhbGdlYnJhaWMobW92ZXNbaV0udG8pICYmXG4gICAgICAgICAgICAgICghKCdwcm9tb3Rpb24nIGluIG1vdmVzW2ldKSB8fFxuICAgICAgICAgICAgICBtb3ZlLnByb21vdGlvbiA9PT0gbW92ZXNbaV0ucHJvbW90aW9uKSkge1xuICAgICAgICAgICAgbW92ZV9vYmogPSBtb3Zlc1tpXTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKiBmYWlsZWQgdG8gZmluZCBtb3ZlICovXG4gICAgICBpZiAoIW1vdmVfb2JqKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICAvKiBuZWVkIHRvIG1ha2UgYSBjb3B5IG9mIG1vdmUgYmVjYXVzZSB3ZSBjYW4ndCBnZW5lcmF0ZSBTQU4gYWZ0ZXIgdGhlXG4gICAgICAgKiBtb3ZlIGlzIG1hZGVcbiAgICAgICAqL1xuICAgICAgdmFyIHByZXR0eV9tb3ZlID0gbWFrZV9wcmV0dHkobW92ZV9vYmopO1xuXG4gICAgICBtYWtlX21vdmUobW92ZV9vYmopO1xuXG4gICAgICByZXR1cm4gcHJldHR5X21vdmU7XG4gICAgfSxcblxuICAgIHVuZG86IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG1vdmUgPSB1bmRvX21vdmUoKTtcbiAgICAgIHJldHVybiAobW92ZSkgPyBtYWtlX3ByZXR0eShtb3ZlKSA6IG51bGw7XG4gICAgfSxcblxuICAgIGNsZWFyOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBjbGVhcigpO1xuICAgIH0sXG5cbiAgICBwdXQ6IGZ1bmN0aW9uKHBpZWNlLCBzcXVhcmUpIHtcbiAgICAgIHJldHVybiBwdXQocGllY2UsIHNxdWFyZSk7XG4gICAgfSxcblxuICAgIGdldDogZnVuY3Rpb24oc3F1YXJlKSB7XG4gICAgICByZXR1cm4gZ2V0KHNxdWFyZSk7XG4gICAgfSxcblxuICAgIHJlbW92ZTogZnVuY3Rpb24oc3F1YXJlKSB7XG4gICAgICByZXR1cm4gcmVtb3ZlKHNxdWFyZSk7XG4gICAgfSxcblxuICAgIHBlcmZ0OiBmdW5jdGlvbihkZXB0aCkge1xuICAgICAgcmV0dXJuIHBlcmZ0KGRlcHRoKTtcbiAgICB9LFxuXG4gICAgc3F1YXJlX2NvbG9yOiBmdW5jdGlvbihzcXVhcmUpIHtcbiAgICAgIGlmIChzcXVhcmUgaW4gU1FVQVJFUykge1xuICAgICAgICB2YXIgc3FfMHg4OCA9IFNRVUFSRVNbc3F1YXJlXTtcbiAgICAgICAgcmV0dXJuICgocmFuayhzcV8weDg4KSArIGZpbGUoc3FfMHg4OCkpICUgMiA9PT0gMCkgPyAnbGlnaHQnIDogJ2RhcmsnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuXG4gICAgaGlzdG9yeTogZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgdmFyIHJldmVyc2VkX2hpc3RvcnkgPSBbXTtcbiAgICAgIHZhciBtb3ZlX2hpc3RvcnkgPSBbXTtcbiAgICAgIHZhciB2ZXJib3NlID0gKHR5cGVvZiBvcHRpb25zICE9PSAndW5kZWZpbmVkJyAmJiAndmVyYm9zZScgaW4gb3B0aW9ucyAmJlxuICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy52ZXJib3NlKTtcblxuICAgICAgd2hpbGUgKGhpc3RvcnkubGVuZ3RoID4gMCkge1xuICAgICAgICByZXZlcnNlZF9oaXN0b3J5LnB1c2godW5kb19tb3ZlKCkpO1xuICAgICAgfVxuXG4gICAgICB3aGlsZSAocmV2ZXJzZWRfaGlzdG9yeS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHZhciBtb3ZlID0gcmV2ZXJzZWRfaGlzdG9yeS5wb3AoKTtcbiAgICAgICAgaWYgKHZlcmJvc2UpIHtcbiAgICAgICAgICBtb3ZlX2hpc3RvcnkucHVzaChtYWtlX3ByZXR0eShtb3ZlKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbW92ZV9oaXN0b3J5LnB1c2gobW92ZV90b19zYW4obW92ZSkpO1xuICAgICAgICB9XG4gICAgICAgIG1ha2VfbW92ZShtb3ZlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG1vdmVfaGlzdG9yeTtcbiAgICB9XG5cbiAgfTtcbn07XG5cbi8qIGV4cG9ydCBDaGVzcyBvYmplY3QgaWYgdXNpbmcgbm9kZSBvciBhbnkgb3RoZXIgQ29tbW9uSlMgY29tcGF0aWJsZVxuICogZW52aXJvbm1lbnQgKi9cbmlmICh0eXBlb2YgZXhwb3J0cyAhPT0gJ3VuZGVmaW5lZCcpIGV4cG9ydHMuQ2hlc3MgPSBDaGVzcztcbi8qIGV4cG9ydCBDaGVzcyBvYmplY3QgZm9yIGFueSBSZXF1aXJlSlMgY29tcGF0aWJsZSBlbnZpcm9ubWVudCAqL1xuaWYgKHR5cGVvZiBkZWZpbmUgIT09ICd1bmRlZmluZWQnKSBkZWZpbmUoIGZ1bmN0aW9uICgpIHsgcmV0dXJuIENoZXNzOyAgfSk7XG4iXSwic291cmNlUm9vdCI6IiJ9